<INFO>	[2025-06-13 01:47:02]	The reference file for the analysis is M._tuberculosis_H37Rv.gbk.

<INFO>	[2025-06-13 01:47:02]	Starting Snippy analysis for sample HCU24001_S1.
<INFO>	[2025-06-13 01:47:02]	The inputs for the analysis are HCU24001_S1_R1.fastq.gz and HCU24001_S1_R2.fastq.gz.
<INFO>	[2025-06-13 01:47:02]	Results will be stored in mysnips_HCU24001_S1 folder, located in /home/cgerediaga/Analysis.
85d31d2be6fcb9aab2b6630d308fd69a8aeab2b274c65dd6a1aa543ade30129b
[23:47:02] This is snippy 4.6.0
[23:47:02] Written by Torsten Seemann
[23:47:02] Obtained from https://github.com/tseemann/snippy
[23:47:02] Detected operating system: linux
[23:47:02] Enabling bundled linux tools.
[23:47:02] Found bwa - /usr/local/bin/bwa
[23:47:02] Found bcftools - /usr/local/bin/bcftools
[23:47:02] Found samtools - /usr/local/bin/samtools
[23:47:02] Found java - /usr/local/bin/java
[23:47:02] Found snpEff - /usr/local/bin/snpEff
[23:47:02] Found samclip - /usr/local/bin/samclip
[23:47:02] Found seqtk - /usr/local/bin/seqtk
[23:47:02] Found parallel - /usr/local/bin/parallel
[23:47:02] Found freebayes - /usr/local/bin/freebayes
[23:47:02] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:47:02] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:47:02] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:47:02] Found vcfuniq - /usr/local/bin/vcfuniq
[23:47:02] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:47:02] Found gzip - /usr/bin/gzip
[23:47:02] Found vt - /usr/local/bin/vt
[23:47:02] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:47:02] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:47:02] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:47:02] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:47:02] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:47:03] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:47:03] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:47:03] Using reference: /data/Analysis/refe.gbk
[23:47:03] Treating reference as 'genbank' format.
[23:47:03] Will use 16 CPU cores.
[23:47:03] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:47:03] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:47:03] Creating folder: mysnps_HCU24001_S1
[23:47:03] Changing working directory: mysnps_HCU24001_S1
[23:47:03] Creating reference folder: reference
[23:47:03] Extracting FASTA and GFF from reference.
[23:47:02] This is snippy 4.6.0
[23:47:02] Written by Torsten Seemann
[23:47:02] Obtained from https://github.com/tseemann/snippy
[23:47:02] Detected operating system: linux
[23:47:02] Enabling bundled linux tools.
[23:47:02] Found bwa - /usr/local/bin/bwa
[23:47:02] Found bcftools - /usr/local/bin/bcftools
[23:47:02] Found samtools - /usr/local/bin/samtools
[23:47:02] Found java - /usr/local/bin/java
[23:47:02] Found snpEff - /usr/local/bin/snpEff
[23:47:02] Found samclip - /usr/local/bin/samclip
[23:47:02] Found seqtk - /usr/local/bin/seqtk
[23:47:02] Found parallel - /usr/local/bin/parallel
[23:47:02] Found freebayes - /usr/local/bin/freebayes
[23:47:02] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:47:02] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:47:02] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:47:02] Found vcfuniq - /usr/local/bin/vcfuniq
[23:47:02] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:47:02] Found gzip - /usr/bin/gzip
[23:47:02] Found vt - /usr/local/bin/vt
[23:47:02] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:47:02] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:47:02] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:47:02] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:47:02] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:47:03] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:47:03] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:47:03] Using reference: /data/Analysis/refe.gbk
[23:47:03] Treating reference as 'genbank' format.
[23:47:03] Will use 16 CPU cores.
[23:47:03] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:47:03] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:47:03] Creating folder: mysnps_HCU24001_S1
[23:47:03] Changing working directory: mysnps_HCU24001_S1
[23:47:03] Creating reference folder: reference
[23:47:03] Extracting FASTA and GFF from reference.
[23:47:04] Wrote 1 sequences to ref.fa
[23:47:04] Wrote 4429 features to ref.gff
[23:47:04] Creating reference/snpeff.config
[23:47:04] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:47:04] Using BAM RG (Read Group) ID: mysnps_HCU24001_S1
[23:47:04] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:47:04] Running: bwa index reference/ref.fa 2>> snps.log
[23:47:05] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:47:05] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:47:05] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:47:05] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:47:05] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:47:09] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HCU24001_S1\tSM:mysnps_HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[23:47:02] This is snippy 4.6.0
[23:47:02] Written by Torsten Seemann
[23:47:02] Obtained from https://github.com/tseemann/snippy
[23:47:02] Detected operating system: linux
[23:47:02] Enabling bundled linux tools.
[23:47:02] Found bwa - /usr/local/bin/bwa
[23:47:02] Found bcftools - /usr/local/bin/bcftools
[23:47:02] Found samtools - /usr/local/bin/samtools
[23:47:02] Found java - /usr/local/bin/java
[23:47:02] Found snpEff - /usr/local/bin/snpEff
[23:47:02] Found samclip - /usr/local/bin/samclip
[23:47:02] Found seqtk - /usr/local/bin/seqtk
[23:47:02] Found parallel - /usr/local/bin/parallel
[23:47:02] Found freebayes - /usr/local/bin/freebayes
[23:47:02] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:47:02] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:47:02] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:47:02] Found vcfuniq - /usr/local/bin/vcfuniq
[23:47:02] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:47:02] Found gzip - /usr/bin/gzip
[23:47:02] Found vt - /usr/local/bin/vt
[23:47:02] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:47:02] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:47:02] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:47:02] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:47:02] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:47:03] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:47:03] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:47:03] Using reference: /data/Analysis/refe.gbk
[23:47:03] Treating reference as 'genbank' format.
[23:47:03] Will use 16 CPU cores.
[23:47:03] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:47:03] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:47:03] Creating folder: mysnps_HCU24001_S1
[23:47:03] Changing working directory: mysnps_HCU24001_S1
[23:47:03] Creating reference folder: reference
[23:47:03] Extracting FASTA and GFF from reference.
[23:47:04] Wrote 1 sequences to ref.fa
[23:47:04] Wrote 4429 features to ref.gff
[23:47:04] Creating reference/snpeff.config
[23:47:04] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:47:04] Using BAM RG (Read Group) ID: mysnps_HCU24001_S1
[23:47:04] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:47:04] Running: bwa index reference/ref.fa 2>> snps.log
[23:47:05] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:47:05] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:47:05] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:47:05] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:47:05] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:47:09] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HCU24001_S1\tSM:mysnps_HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 50.748 CPU sec, 3.165 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[23:47:02] This is snippy 4.6.0
[23:47:02] Written by Torsten Seemann
[23:47:02] Obtained from https://github.com/tseemann/snippy
[23:47:02] Detected operating system: linux
[23:47:02] Enabling bundled linux tools.
[23:47:02] Found bwa - /usr/local/bin/bwa
[23:47:02] Found bcftools - /usr/local/bin/bcftools
[23:47:02] Found samtools - /usr/local/bin/samtools
[23:47:02] Found java - /usr/local/bin/java
[23:47:02] Found snpEff - /usr/local/bin/snpEff
[23:47:02] Found samclip - /usr/local/bin/samclip
[23:47:02] Found seqtk - /usr/local/bin/seqtk
[23:47:02] Found parallel - /usr/local/bin/parallel
[23:47:02] Found freebayes - /usr/local/bin/freebayes
[23:47:02] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:47:02] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:47:02] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:47:02] Found vcfuniq - /usr/local/bin/vcfuniq
[23:47:02] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:47:02] Found gzip - /usr/bin/gzip
[23:47:02] Found vt - /usr/local/bin/vt
[23:47:02] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:47:02] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:47:02] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:47:02] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:47:02] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:47:03] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:47:03] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:47:03] Using reference: /data/Analysis/refe.gbk
[23:47:03] Treating reference as 'genbank' format.
[23:47:03] Will use 16 CPU cores.
[23:47:03] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:47:03] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:47:03] Creating folder: mysnps_HCU24001_S1
[23:47:03] Changing working directory: mysnps_HCU24001_S1
[23:47:03] Creating reference folder: reference
[23:47:03] Extracting FASTA and GFF from reference.
[23:47:04] Wrote 1 sequences to ref.fa
[23:47:04] Wrote 4429 features to ref.gff
[23:47:04] Creating reference/snpeff.config
[23:47:04] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:47:04] Using BAM RG (Read Group) ID: mysnps_HCU24001_S1
[23:47:04] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:47:04] Running: bwa index reference/ref.fa 2>> snps.log
[23:47:05] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:47:05] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:47:05] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:47:05] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:47:05] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:47:09] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HCU24001_S1\tSM:mysnps_HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 50.748 CPU sec, 3.165 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 53.979 CPU sec, 3.348 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 50.885 CPU sec, 3.230 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HCU24001_S1\tSM:mysnps_HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.838 sec; CPU: 157.762 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:47:02] This is snippy 4.6.0
[23:47:02] Written by Torsten Seemann
[23:47:02] Obtained from https://github.com/tseemann/snippy
[23:47:02] Detected operating system: linux
[23:47:02] Enabling bundled linux tools.
[23:47:02] Found bwa - /usr/local/bin/bwa
[23:47:02] Found bcftools - /usr/local/bin/bcftools
[23:47:02] Found samtools - /usr/local/bin/samtools
[23:47:02] Found java - /usr/local/bin/java
[23:47:02] Found snpEff - /usr/local/bin/snpEff
[23:47:02] Found samclip - /usr/local/bin/samclip
[23:47:02] Found seqtk - /usr/local/bin/seqtk
[23:47:02] Found parallel - /usr/local/bin/parallel
[23:47:02] Found freebayes - /usr/local/bin/freebayes
[23:47:02] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:47:02] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:47:02] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:47:02] Found vcfuniq - /usr/local/bin/vcfuniq
[23:47:02] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:47:02] Found gzip - /usr/bin/gzip
[23:47:02] Found vt - /usr/local/bin/vt
[23:47:02] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:47:02] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:47:02] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:47:02] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:47:02] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:47:03] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:47:03] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:47:03] Using reference: /data/Analysis/refe.gbk
[23:47:03] Treating reference as 'genbank' format.
[23:47:03] Will use 16 CPU cores.
[23:47:03] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:47:03] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:47:03] Creating folder: mysnps_HCU24001_S1
[23:47:03] Changing working directory: mysnps_HCU24001_S1
[23:47:03] Creating reference folder: reference
[23:47:03] Extracting FASTA and GFF from reference.
[23:47:04] Wrote 1 sequences to ref.fa
[23:47:04] Wrote 4429 features to ref.gff
[23:47:04] Creating reference/snpeff.config
[23:47:04] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:47:04] Using BAM RG (Read Group) ID: mysnps_HCU24001_S1
[23:47:04] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:47:04] Running: bwa index reference/ref.fa 2>> snps.log
[23:47:05] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:47:05] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:47:05] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:47:05] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:47:05] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:47:09] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HCU24001_S1\tSM:mysnps_HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 50.748 CPU sec, 3.165 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 53.979 CPU sec, 3.348 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 50.885 CPU sec, 3.230 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HCU24001_S1\tSM:mysnps_HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.838 sec; CPU: 157.762 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:47:25] Running: samtools index snps.bam 2>> snps.log
[23:47:26] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:47:26] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:47:29] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:47:29] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:47:02] This is snippy 4.6.0
[23:47:02] Written by Torsten Seemann
[23:47:02] Obtained from https://github.com/tseemann/snippy
[23:47:02] Detected operating system: linux
[23:47:02] Enabling bundled linux tools.
[23:47:02] Found bwa - /usr/local/bin/bwa
[23:47:02] Found bcftools - /usr/local/bin/bcftools
[23:47:02] Found samtools - /usr/local/bin/samtools
[23:47:02] Found java - /usr/local/bin/java
[23:47:02] Found snpEff - /usr/local/bin/snpEff
[23:47:02] Found samclip - /usr/local/bin/samclip
[23:47:02] Found seqtk - /usr/local/bin/seqtk
[23:47:02] Found parallel - /usr/local/bin/parallel
[23:47:02] Found freebayes - /usr/local/bin/freebayes
[23:47:02] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:47:02] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:47:02] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:47:02] Found vcfuniq - /usr/local/bin/vcfuniq
[23:47:02] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:47:02] Found gzip - /usr/bin/gzip
[23:47:02] Found vt - /usr/local/bin/vt
[23:47:02] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:47:02] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:47:02] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:47:02] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:47:02] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:47:03] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:47:03] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:47:03] Using reference: /data/Analysis/refe.gbk
[23:47:03] Treating reference as 'genbank' format.
[23:47:03] Will use 16 CPU cores.
[23:47:03] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:47:03] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:47:03] Creating folder: mysnps_HCU24001_S1
[23:47:03] Changing working directory: mysnps_HCU24001_S1
[23:47:03] Creating reference folder: reference
[23:47:03] Extracting FASTA and GFF from reference.
[23:47:04] Wrote 1 sequences to ref.fa
[23:47:04] Wrote 4429 features to ref.gff
[23:47:04] Creating reference/snpeff.config
[23:47:04] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:47:04] Using BAM RG (Read Group) ID: mysnps_HCU24001_S1
[23:47:04] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:47:04] Running: bwa index reference/ref.fa 2>> snps.log
[23:47:05] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:47:05] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:47:05] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:47:05] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:47:05] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:47:09] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HCU24001_S1\tSM:mysnps_HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 50.748 CPU sec, 3.165 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 53.979 CPU sec, 3.348 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 50.885 CPU sec, 3.230 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HCU24001_S1\tSM:mysnps_HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.838 sec; CPU: 157.762 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:47:25] Running: samtools index snps.bam 2>> snps.log
[23:47:26] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:47:26] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:47:29] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:47:29] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:47:30] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:47:32] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:47:32] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:47:32] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:47:32] Running: bcftools consensus --sample mysnps_HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:47:32] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:47:32] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:47:32] Running: bcftools consensus --sample mysnps_HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:47:32] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:47:32] Running: samtools view -h -q 60 snps.bam | samtools sort -l 0 -T /tmp --threads 7 -m 1000M > /tmp/snippy.1.Q60.bam 2>> snps.log
[23:47:34] Running: samtools index /tmp/snippy.1.Q60.bam 2>> snps.log
[23:47:34] Running: /usr/local/bin/snippy-vcf_report --cpus 16 --bam /tmp/snippy.1.Q60.bam --ref reference/ref.fa --vcf snps.vcf > snps.report.txt 2>> snps.log
snippy_container

<INFO>	[2025-06-13 01:47:42]	Starting Snippy analysis for sample HCU24002_S2.
<INFO>	[2025-06-13 01:47:42]	The inputs for the analysis are HCU24002_S2_R1.fastq.gz and HCU24002_S2_R2.fastq.gz.
<INFO>	[2025-06-13 01:47:42]	Results will be stored in mysnips_HCU24002_S2 folder, located in /home/cgerediaga/Analysis.
d4f0d61ddb3afe54888b61454798f51ac1c5713b6fab492cde0ac5acb54ffef3
[23:47:42] This is snippy 4.6.0
[23:47:42] Written by Torsten Seemann
[23:47:42] Obtained from https://github.com/tseemann/snippy
[23:47:42] Detected operating system: linux
[23:47:42] Enabling bundled linux tools.
[23:47:42] Found bwa - /usr/local/bin/bwa
[23:47:42] Found bcftools - /usr/local/bin/bcftools
[23:47:42] Found samtools - /usr/local/bin/samtools
[23:47:42] Found java - /usr/local/bin/java
[23:47:42] Found snpEff - /usr/local/bin/snpEff
[23:47:42] Found samclip - /usr/local/bin/samclip
[23:47:42] Found seqtk - /usr/local/bin/seqtk
[23:47:42] Found parallel - /usr/local/bin/parallel
[23:47:42] Found freebayes - /usr/local/bin/freebayes
[23:47:42] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:47:42] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:47:42] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:47:42] Found vcfuniq - /usr/local/bin/vcfuniq
[23:47:42] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:47:42] Found gzip - /usr/bin/gzip
[23:47:42] Found vt - /usr/local/bin/vt
[23:47:42] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:47:42] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:47:42] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:47:42] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:47:42] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:47:42] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:47:42] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:47:42] Using reference: /data/Analysis/refe.gbk
[23:47:42] Treating reference as 'genbank' format.
[23:47:42] Will use 16 CPU cores.
[23:47:42] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:47:42] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:47:42] Creating folder: mysnps_HCU24002_S2
[23:47:42] Changing working directory: mysnps_HCU24002_S2
[23:47:42] Creating reference folder: reference
[23:47:42] Extracting FASTA and GFF from reference.
[23:47:42] This is snippy 4.6.0
[23:47:42] Written by Torsten Seemann
[23:47:42] Obtained from https://github.com/tseemann/snippy
[23:47:42] Detected operating system: linux
[23:47:42] Enabling bundled linux tools.
[23:47:42] Found bwa - /usr/local/bin/bwa
[23:47:42] Found bcftools - /usr/local/bin/bcftools
[23:47:42] Found samtools - /usr/local/bin/samtools
[23:47:42] Found java - /usr/local/bin/java
[23:47:42] Found snpEff - /usr/local/bin/snpEff
[23:47:42] Found samclip - /usr/local/bin/samclip
[23:47:42] Found seqtk - /usr/local/bin/seqtk
[23:47:42] Found parallel - /usr/local/bin/parallel
[23:47:42] Found freebayes - /usr/local/bin/freebayes
[23:47:42] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:47:42] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:47:42] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:47:42] Found vcfuniq - /usr/local/bin/vcfuniq
[23:47:42] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:47:42] Found gzip - /usr/bin/gzip
[23:47:42] Found vt - /usr/local/bin/vt
[23:47:42] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:47:42] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:47:42] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:47:42] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:47:42] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:47:42] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:47:42] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:47:42] Using reference: /data/Analysis/refe.gbk
[23:47:42] Treating reference as 'genbank' format.
[23:47:42] Will use 16 CPU cores.
[23:47:42] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:47:42] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:47:42] Creating folder: mysnps_HCU24002_S2
[23:47:42] Changing working directory: mysnps_HCU24002_S2
[23:47:42] Creating reference folder: reference
[23:47:42] Extracting FASTA and GFF from reference.
[23:47:44] Wrote 1 sequences to ref.fa
[23:47:44] Wrote 4429 features to ref.gff
[23:47:44] Creating reference/snpeff.config
[23:47:44] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:47:44] Using BAM RG (Read Group) ID: mysnps_HCU24002_S2
[23:47:44] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:47:44] Running: bwa index reference/ref.fa 2>> snps.log
[23:47:45] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:47:45] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:47:45] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:47:45] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:47:45] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:47:48] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HCU24002_S2\tSM:mysnps_HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[23:47:42] This is snippy 4.6.0
[23:47:42] Written by Torsten Seemann
[23:47:42] Obtained from https://github.com/tseemann/snippy
[23:47:42] Detected operating system: linux
[23:47:42] Enabling bundled linux tools.
[23:47:42] Found bwa - /usr/local/bin/bwa
[23:47:42] Found bcftools - /usr/local/bin/bcftools
[23:47:42] Found samtools - /usr/local/bin/samtools
[23:47:42] Found java - /usr/local/bin/java
[23:47:42] Found snpEff - /usr/local/bin/snpEff
[23:47:42] Found samclip - /usr/local/bin/samclip
[23:47:42] Found seqtk - /usr/local/bin/seqtk
[23:47:42] Found parallel - /usr/local/bin/parallel
[23:47:42] Found freebayes - /usr/local/bin/freebayes
[23:47:42] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:47:42] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:47:42] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:47:42] Found vcfuniq - /usr/local/bin/vcfuniq
[23:47:42] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:47:42] Found gzip - /usr/bin/gzip
[23:47:42] Found vt - /usr/local/bin/vt
[23:47:42] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:47:42] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:47:42] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:47:42] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:47:42] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:47:42] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:47:42] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:47:42] Using reference: /data/Analysis/refe.gbk
[23:47:42] Treating reference as 'genbank' format.
[23:47:42] Will use 16 CPU cores.
[23:47:42] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:47:42] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:47:42] Creating folder: mysnps_HCU24002_S2
[23:47:42] Changing working directory: mysnps_HCU24002_S2
[23:47:42] Creating reference folder: reference
[23:47:42] Extracting FASTA and GFF from reference.
[23:47:44] Wrote 1 sequences to ref.fa
[23:47:44] Wrote 4429 features to ref.gff
[23:47:44] Creating reference/snpeff.config
[23:47:44] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:47:44] Using BAM RG (Read Group) ID: mysnps_HCU24002_S2
[23:47:44] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:47:44] Running: bwa index reference/ref.fa 2>> snps.log
[23:47:45] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:47:45] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:47:45] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:47:45] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:47:45] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:47:48] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HCU24002_S2\tSM:mysnps_HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 50.427 CPU sec, 3.228 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.276 CPU sec, 1.611 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HCU24002_S2\tSM:mysnps_HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.351 sec; CPU: 77.734 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:47:42] This is snippy 4.6.0
[23:47:42] Written by Torsten Seemann
[23:47:42] Obtained from https://github.com/tseemann/snippy
[23:47:42] Detected operating system: linux
[23:47:42] Enabling bundled linux tools.
[23:47:42] Found bwa - /usr/local/bin/bwa
[23:47:42] Found bcftools - /usr/local/bin/bcftools
[23:47:42] Found samtools - /usr/local/bin/samtools
[23:47:42] Found java - /usr/local/bin/java
[23:47:42] Found snpEff - /usr/local/bin/snpEff
[23:47:42] Found samclip - /usr/local/bin/samclip
[23:47:42] Found seqtk - /usr/local/bin/seqtk
[23:47:42] Found parallel - /usr/local/bin/parallel
[23:47:42] Found freebayes - /usr/local/bin/freebayes
[23:47:42] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:47:42] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:47:42] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:47:42] Found vcfuniq - /usr/local/bin/vcfuniq
[23:47:42] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:47:42] Found gzip - /usr/bin/gzip
[23:47:42] Found vt - /usr/local/bin/vt
[23:47:42] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:47:42] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:47:42] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:47:42] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:47:42] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:47:42] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:47:42] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:47:42] Using reference: /data/Analysis/refe.gbk
[23:47:42] Treating reference as 'genbank' format.
[23:47:42] Will use 16 CPU cores.
[23:47:42] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:47:42] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:47:42] Creating folder: mysnps_HCU24002_S2
[23:47:42] Changing working directory: mysnps_HCU24002_S2
[23:47:42] Creating reference folder: reference
[23:47:42] Extracting FASTA and GFF from reference.
[23:47:44] Wrote 1 sequences to ref.fa
[23:47:44] Wrote 4429 features to ref.gff
[23:47:44] Creating reference/snpeff.config
[23:47:44] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:47:44] Using BAM RG (Read Group) ID: mysnps_HCU24002_S2
[23:47:44] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:47:44] Running: bwa index reference/ref.fa 2>> snps.log
[23:47:45] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:47:45] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:47:45] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:47:45] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:47:45] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:47:48] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HCU24002_S2\tSM:mysnps_HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 50.427 CPU sec, 3.228 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.276 CPU sec, 1.611 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HCU24002_S2\tSM:mysnps_HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.351 sec; CPU: 77.734 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:47:57] Running: samtools index snps.bam 2>> snps.log
[23:47:58] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:47:58] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:48:00] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.04s

[23:48:01] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:48:02] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:47:42] This is snippy 4.6.0
[23:47:42] Written by Torsten Seemann
[23:47:42] Obtained from https://github.com/tseemann/snippy
[23:47:42] Detected operating system: linux
[23:47:42] Enabling bundled linux tools.
[23:47:42] Found bwa - /usr/local/bin/bwa
[23:47:42] Found bcftools - /usr/local/bin/bcftools
[23:47:42] Found samtools - /usr/local/bin/samtools
[23:47:42] Found java - /usr/local/bin/java
[23:47:42] Found snpEff - /usr/local/bin/snpEff
[23:47:42] Found samclip - /usr/local/bin/samclip
[23:47:42] Found seqtk - /usr/local/bin/seqtk
[23:47:42] Found parallel - /usr/local/bin/parallel
[23:47:42] Found freebayes - /usr/local/bin/freebayes
[23:47:42] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:47:42] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:47:42] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:47:42] Found vcfuniq - /usr/local/bin/vcfuniq
[23:47:42] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:47:42] Found gzip - /usr/bin/gzip
[23:47:42] Found vt - /usr/local/bin/vt
[23:47:42] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:47:42] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:47:42] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:47:42] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:47:42] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:47:42] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:47:42] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:47:42] Using reference: /data/Analysis/refe.gbk
[23:47:42] Treating reference as 'genbank' format.
[23:47:42] Will use 16 CPU cores.
[23:47:42] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:47:42] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:47:42] Creating folder: mysnps_HCU24002_S2
[23:47:42] Changing working directory: mysnps_HCU24002_S2
[23:47:42] Creating reference folder: reference
[23:47:42] Extracting FASTA and GFF from reference.
[23:47:44] Wrote 1 sequences to ref.fa
[23:47:44] Wrote 4429 features to ref.gff
[23:47:44] Creating reference/snpeff.config
[23:47:44] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:47:44] Using BAM RG (Read Group) ID: mysnps_HCU24002_S2
[23:47:44] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:47:44] Running: bwa index reference/ref.fa 2>> snps.log
[23:47:45] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:47:45] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:47:45] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:47:45] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:47:45] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:47:48] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HCU24002_S2\tSM:mysnps_HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 50.427 CPU sec, 3.228 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.276 CPU sec, 1.611 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HCU24002_S2\tSM:mysnps_HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.351 sec; CPU: 77.734 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:47:57] Running: samtools index snps.bam 2>> snps.log
[23:47:58] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:47:58] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:48:00] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.04s

[23:48:01] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:48:02] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:48:03] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:48:04] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:48:04] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:48:04] Running: bcftools consensus --sample mysnps_HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:48:04] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:48:04] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:48:04] Running: bcftools consensus --sample mysnps_HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:48:04] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:48:04] Running: samtools view -h -q 60 snps.bam | samtools sort -l 0 -T /tmp --threads 7 -m 1000M > /tmp/snippy.1.Q60.bam 2>> snps.log
[23:48:05] Running: samtools index /tmp/snippy.1.Q60.bam 2>> snps.log
[23:48:05] Running: /usr/local/bin/snippy-vcf_report --cpus 16 --bam /tmp/snippy.1.Q60.bam --ref reference/ref.fa --vcf snps.vcf > snps.report.txt 2>> snps.log
[23:47:42] This is snippy 4.6.0
[23:47:42] Written by Torsten Seemann
[23:47:42] Obtained from https://github.com/tseemann/snippy
[23:47:42] Detected operating system: linux
[23:47:42] Enabling bundled linux tools.
[23:47:42] Found bwa - /usr/local/bin/bwa
[23:47:42] Found bcftools - /usr/local/bin/bcftools
[23:47:42] Found samtools - /usr/local/bin/samtools
[23:47:42] Found java - /usr/local/bin/java
[23:47:42] Found snpEff - /usr/local/bin/snpEff
[23:47:42] Found samclip - /usr/local/bin/samclip
[23:47:42] Found seqtk - /usr/local/bin/seqtk
[23:47:42] Found parallel - /usr/local/bin/parallel
[23:47:42] Found freebayes - /usr/local/bin/freebayes
[23:47:42] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:47:42] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:47:42] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:47:42] Found vcfuniq - /usr/local/bin/vcfuniq
[23:47:42] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:47:42] Found gzip - /usr/bin/gzip
[23:47:42] Found vt - /usr/local/bin/vt
[23:47:42] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:47:42] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:47:42] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:47:42] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:47:42] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:47:42] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:47:42] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:47:42] Using reference: /data/Analysis/refe.gbk
[23:47:42] Treating reference as 'genbank' format.
[23:47:42] Will use 16 CPU cores.
[23:47:42] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:47:42] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:47:42] Creating folder: mysnps_HCU24002_S2
[23:47:42] Changing working directory: mysnps_HCU24002_S2
[23:47:42] Creating reference folder: reference
[23:47:42] Extracting FASTA and GFF from reference.
[23:47:44] Wrote 1 sequences to ref.fa
[23:47:44] Wrote 4429 features to ref.gff
[23:47:44] Creating reference/snpeff.config
[23:47:44] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:47:44] Using BAM RG (Read Group) ID: mysnps_HCU24002_S2
[23:47:44] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:47:44] Running: bwa index reference/ref.fa 2>> snps.log
[23:47:45] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:47:45] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:47:45] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:47:45] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:47:45] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:47:48] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HCU24002_S2\tSM:mysnps_HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 50.427 CPU sec, 3.228 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.276 CPU sec, 1.611 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HCU24002_S2\tSM:mysnps_HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.351 sec; CPU: 77.734 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:47:57] Running: samtools index snps.bam 2>> snps.log
[23:47:58] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:47:58] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:48:00] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.04s

[23:48:01] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:48:02] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:48:03] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:48:04] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:48:04] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:48:04] Running: bcftools consensus --sample mysnps_HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:48:04] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:48:04] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:48:04] Running: bcftools consensus --sample mysnps_HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:48:04] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:48:04] Running: samtools view -h -q 60 snps.bam | samtools sort -l 0 -T /tmp --threads 7 -m 1000M > /tmp/snippy.1.Q60.bam 2>> snps.log
[23:48:05] Running: samtools index /tmp/snippy.1.Q60.bam 2>> snps.log
[23:48:05] Running: /usr/local/bin/snippy-vcf_report --cpus 16 --bam /tmp/snippy.1.Q60.bam --ref reference/ref.fa --vcf snps.vcf > snps.report.txt 2>> snps.log
[23:47:42] This is snippy 4.6.0
[23:47:42] Written by Torsten Seemann
[23:47:42] Obtained from https://github.com/tseemann/snippy
[23:47:42] Detected operating system: linux
[23:47:42] Enabling bundled linux tools.
[23:47:42] Found bwa - /usr/local/bin/bwa
[23:47:42] Found bcftools - /usr/local/bin/bcftools
[23:47:42] Found samtools - /usr/local/bin/samtools
[23:47:42] Found java - /usr/local/bin/java
[23:47:42] Found snpEff - /usr/local/bin/snpEff
[23:47:42] Found samclip - /usr/local/bin/samclip
[23:47:42] Found seqtk - /usr/local/bin/seqtk
[23:47:42] Found parallel - /usr/local/bin/parallel
[23:47:42] Found freebayes - /usr/local/bin/freebayes
[23:47:42] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:47:42] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:47:42] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:47:42] Found vcfuniq - /usr/local/bin/vcfuniq
[23:47:42] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:47:42] Found gzip - /usr/bin/gzip
[23:47:42] Found vt - /usr/local/bin/vt
[23:47:42] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:47:42] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:47:42] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:47:42] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:47:42] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:47:42] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:47:42] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:47:42] Using reference: /data/Analysis/refe.gbk
[23:47:42] Treating reference as 'genbank' format.
[23:47:42] Will use 16 CPU cores.
[23:47:42] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:47:42] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:47:42] Creating folder: mysnps_HCU24002_S2
[23:47:42] Changing working directory: mysnps_HCU24002_S2
[23:47:42] Creating reference folder: reference
[23:47:42] Extracting FASTA and GFF from reference.
[23:47:44] Wrote 1 sequences to ref.fa
[23:47:44] Wrote 4429 features to ref.gff
[23:47:44] Creating reference/snpeff.config
[23:47:44] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:47:44] Using BAM RG (Read Group) ID: mysnps_HCU24002_S2
[23:47:44] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:47:44] Running: bwa index reference/ref.fa 2>> snps.log
[23:47:45] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:47:45] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:47:45] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:47:45] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:47:45] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:47:48] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HCU24002_S2\tSM:mysnps_HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 50.427 CPU sec, 3.228 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.276 CPU sec, 1.611 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HCU24002_S2\tSM:mysnps_HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.351 sec; CPU: 77.734 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:47:57] Running: samtools index snps.bam 2>> snps.log
[23:47:58] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:47:58] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:48:00] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.04s

[23:48:01] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:48:02] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:48:03] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:48:04] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:48:04] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:48:04] Running: bcftools consensus --sample mysnps_HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:48:04] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:48:04] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:48:04] Running: bcftools consensus --sample mysnps_HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:48:04] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:48:04] Running: samtools view -h -q 60 snps.bam | samtools sort -l 0 -T /tmp --threads 7 -m 1000M > /tmp/snippy.1.Q60.bam 2>> snps.log
[23:48:05] Running: samtools index /tmp/snippy.1.Q60.bam 2>> snps.log
[23:48:05] Running: /usr/local/bin/snippy-vcf_report --cpus 16 --bam /tmp/snippy.1.Q60.bam --ref reference/ref.fa --vcf snps.vcf > snps.report.txt 2>> snps.log
[23:48:19] Running: rm -f /tmp/snippy.1.Q60.bam /tmp/snippy.1.Q60.bam.bai 2>> snps.log
[23:48:19] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:48:21] Marked 8955 heterozygous sites with 'n'
[23:48:22] Creating extra output files: BED GFF CSV TXT HTML
[23:48:22] Identified 2484 variants.
[23:48:22] Result folder: mysnps_HCU24002_S2
[23:48:22] Result files:
[23:48:22] * mysnps_HCU24002_S2/snps.aligned.fa
[23:48:22] * mysnps_HCU24002_S2/snps.bam
[23:48:22] * mysnps_HCU24002_S2/snps.bam.bai
[23:48:22] * mysnps_HCU24002_S2/snps.bed
[23:48:22] * mysnps_HCU24002_S2/snps.consensus.fa
[23:48:22] * mysnps_HCU24002_S2/snps.consensus.subs.fa
[23:48:22] * mysnps_HCU24002_S2/snps.csv
[23:48:22] * mysnps_HCU24002_S2/snps.filt.vcf
[23:48:22] * mysnps_HCU24002_S2/snps.gff
[23:48:22] * mysnps_HCU24002_S2/snps.html
[23:48:22] * mysnps_HCU24002_S2/snps.log
[23:48:22] * mysnps_HCU24002_S2/snps.raw.vcf
[23:48:22] * mysnps_HCU24002_S2/snps.report.txt
[23:48:22] * mysnps_HCU24002_S2/snps.subs.vcf
[23:48:22] * mysnps_HCU24002_S2/snps.tab
[23:48:22] * mysnps_HCU24002_S2/snps.txt
[23:48:22] * mysnps_HCU24002_S2/snps.vcf
[23:48:22] * mysnps_HCU24002_S2/snps.vcf.gz
[23:48:22] * mysnps_HCU24002_S2/snps.vcf.gz.csi
[23:48:22] Walltime used: 40 seconds
[23:48:22] May the SNPs be with you.
[23:48:22] Done.
snippy_container

<INFO>	[2025-06-13 01:48:28]	Starting Snippy analysis for sample HCU24010_S6.
<INFO>	[2025-06-13 01:48:28]	The inputs for the analysis are HCU24010_S6_R1.fastq.gz and HCU24010_S6_R2.fastq.gz.
<INFO>	[2025-06-13 01:48:28]	Results will be stored in mysnips_HCU24010_S6 folder, located in /home/cgerediaga/Analysis.
0ca232171161f38a2e4198c95f5f6f8f9c64ebbf50590d182af77c4e7e337076
[23:48:28] This is snippy 4.6.0
[23:48:28] Written by Torsten Seemann
[23:48:28] Obtained from https://github.com/tseemann/snippy
[23:48:28] Detected operating system: linux
[23:48:28] Enabling bundled linux tools.
[23:48:28] Found bwa - /usr/local/bin/bwa
[23:48:28] Found bcftools - /usr/local/bin/bcftools
[23:48:28] Found samtools - /usr/local/bin/samtools
[23:48:28] Found java - /usr/local/bin/java
[23:48:28] Found snpEff - /usr/local/bin/snpEff
[23:48:28] Found samclip - /usr/local/bin/samclip
[23:48:28] Found seqtk - /usr/local/bin/seqtk
[23:48:28] Found parallel - /usr/local/bin/parallel
[23:48:28] Found freebayes - /usr/local/bin/freebayes
[23:48:28] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:48:28] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:48:28] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:48:28] Found vcfuniq - /usr/local/bin/vcfuniq
[23:48:28] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:48:28] Found gzip - /usr/bin/gzip
[23:48:28] Found vt - /usr/local/bin/vt
[23:48:28] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:48:28] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:48:28] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:48:28] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:48:28] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:48:28] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:48:28] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:48:28] Using reference: /data/Analysis/refe.gbk
[23:48:28] Treating reference as 'genbank' format.
[23:48:28] Will use 16 CPU cores.
[23:48:28] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:48:28] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:48:28] Creating folder: mysnps_HCU24010_S6
[23:48:28] Changing working directory: mysnps_HCU24010_S6
[23:48:28] Creating reference folder: reference
[23:48:28] Extracting FASTA and GFF from reference.
[23:48:28] This is snippy 4.6.0
[23:48:28] Written by Torsten Seemann
[23:48:28] Obtained from https://github.com/tseemann/snippy
[23:48:28] Detected operating system: linux
[23:48:28] Enabling bundled linux tools.
[23:48:28] Found bwa - /usr/local/bin/bwa
[23:48:28] Found bcftools - /usr/local/bin/bcftools
[23:48:28] Found samtools - /usr/local/bin/samtools
[23:48:28] Found java - /usr/local/bin/java
[23:48:28] Found snpEff - /usr/local/bin/snpEff
[23:48:28] Found samclip - /usr/local/bin/samclip
[23:48:28] Found seqtk - /usr/local/bin/seqtk
[23:48:28] Found parallel - /usr/local/bin/parallel
[23:48:28] Found freebayes - /usr/local/bin/freebayes
[23:48:28] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:48:28] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:48:28] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:48:28] Found vcfuniq - /usr/local/bin/vcfuniq
[23:48:28] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:48:28] Found gzip - /usr/bin/gzip
[23:48:28] Found vt - /usr/local/bin/vt
[23:48:28] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:48:28] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:48:28] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:48:28] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:48:28] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:48:28] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:48:28] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:48:28] Using reference: /data/Analysis/refe.gbk
[23:48:28] Treating reference as 'genbank' format.
[23:48:28] Will use 16 CPU cores.
[23:48:28] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:48:28] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:48:28] Creating folder: mysnps_HCU24010_S6
[23:48:28] Changing working directory: mysnps_HCU24010_S6
[23:48:28] Creating reference folder: reference
[23:48:28] Extracting FASTA and GFF from reference.
[23:48:30] Wrote 1 sequences to ref.fa
[23:48:30] Wrote 4429 features to ref.gff
[23:48:30] Creating reference/snpeff.config
[23:48:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:48:30] Using BAM RG (Read Group) ID: mysnps_HCU24010_S6
[23:48:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:48:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:48:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:48:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:48:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:48:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:48:31] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:48:34] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HCU24010_S6\tSM:mysnps_HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[23:48:28] This is snippy 4.6.0
[23:48:28] Written by Torsten Seemann
[23:48:28] Obtained from https://github.com/tseemann/snippy
[23:48:28] Detected operating system: linux
[23:48:28] Enabling bundled linux tools.
[23:48:28] Found bwa - /usr/local/bin/bwa
[23:48:28] Found bcftools - /usr/local/bin/bcftools
[23:48:28] Found samtools - /usr/local/bin/samtools
[23:48:28] Found java - /usr/local/bin/java
[23:48:28] Found snpEff - /usr/local/bin/snpEff
[23:48:28] Found samclip - /usr/local/bin/samclip
[23:48:28] Found seqtk - /usr/local/bin/seqtk
[23:48:28] Found parallel - /usr/local/bin/parallel
[23:48:28] Found freebayes - /usr/local/bin/freebayes
[23:48:28] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:48:28] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:48:28] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:48:28] Found vcfuniq - /usr/local/bin/vcfuniq
[23:48:28] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:48:28] Found gzip - /usr/bin/gzip
[23:48:28] Found vt - /usr/local/bin/vt
[23:48:28] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:48:28] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:48:28] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:48:28] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:48:28] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:48:28] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:48:28] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:48:28] Using reference: /data/Analysis/refe.gbk
[23:48:28] Treating reference as 'genbank' format.
[23:48:28] Will use 16 CPU cores.
[23:48:28] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:48:28] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:48:28] Creating folder: mysnps_HCU24010_S6
[23:48:28] Changing working directory: mysnps_HCU24010_S6
[23:48:28] Creating reference folder: reference
[23:48:28] Extracting FASTA and GFF from reference.
[23:48:30] Wrote 1 sequences to ref.fa
[23:48:30] Wrote 4429 features to ref.gff
[23:48:30] Creating reference/snpeff.config
[23:48:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:48:30] Using BAM RG (Read Group) ID: mysnps_HCU24010_S6
[23:48:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:48:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:48:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:48:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:48:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:48:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:48:31] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:48:34] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HCU24010_S6\tSM:mysnps_HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.252 CPU sec, 3.021 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.139 CPU sec, 3.178 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[23:48:28] This is snippy 4.6.0
[23:48:28] Written by Torsten Seemann
[23:48:28] Obtained from https://github.com/tseemann/snippy
[23:48:28] Detected operating system: linux
[23:48:28] Enabling bundled linux tools.
[23:48:28] Found bwa - /usr/local/bin/bwa
[23:48:28] Found bcftools - /usr/local/bin/bcftools
[23:48:28] Found samtools - /usr/local/bin/samtools
[23:48:28] Found java - /usr/local/bin/java
[23:48:28] Found snpEff - /usr/local/bin/snpEff
[23:48:28] Found samclip - /usr/local/bin/samclip
[23:48:28] Found seqtk - /usr/local/bin/seqtk
[23:48:28] Found parallel - /usr/local/bin/parallel
[23:48:28] Found freebayes - /usr/local/bin/freebayes
[23:48:28] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:48:28] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:48:28] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:48:28] Found vcfuniq - /usr/local/bin/vcfuniq
[23:48:28] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:48:28] Found gzip - /usr/bin/gzip
[23:48:28] Found vt - /usr/local/bin/vt
[23:48:28] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:48:28] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:48:28] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:48:28] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:48:28] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:48:28] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:48:28] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:48:28] Using reference: /data/Analysis/refe.gbk
[23:48:28] Treating reference as 'genbank' format.
[23:48:28] Will use 16 CPU cores.
[23:48:28] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:48:28] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:48:28] Creating folder: mysnps_HCU24010_S6
[23:48:28] Changing working directory: mysnps_HCU24010_S6
[23:48:28] Creating reference folder: reference
[23:48:28] Extracting FASTA and GFF from reference.
[23:48:30] Wrote 1 sequences to ref.fa
[23:48:30] Wrote 4429 features to ref.gff
[23:48:30] Creating reference/snpeff.config
[23:48:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:48:30] Using BAM RG (Read Group) ID: mysnps_HCU24010_S6
[23:48:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:48:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:48:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:48:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:48:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:48:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:48:31] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:48:34] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HCU24010_S6\tSM:mysnps_HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.252 CPU sec, 3.021 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.139 CPU sec, 3.178 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 48.585 CPU sec, 3.092 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 14.984 CPU sec, 0.938 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HCU24010_S6\tSM:mysnps_HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.821 sec; CPU: 165.067 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:48:28] This is snippy 4.6.0
[23:48:28] Written by Torsten Seemann
[23:48:28] Obtained from https://github.com/tseemann/snippy
[23:48:28] Detected operating system: linux
[23:48:28] Enabling bundled linux tools.
[23:48:28] Found bwa - /usr/local/bin/bwa
[23:48:28] Found bcftools - /usr/local/bin/bcftools
[23:48:28] Found samtools - /usr/local/bin/samtools
[23:48:28] Found java - /usr/local/bin/java
[23:48:28] Found snpEff - /usr/local/bin/snpEff
[23:48:28] Found samclip - /usr/local/bin/samclip
[23:48:28] Found seqtk - /usr/local/bin/seqtk
[23:48:28] Found parallel - /usr/local/bin/parallel
[23:48:28] Found freebayes - /usr/local/bin/freebayes
[23:48:28] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:48:28] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:48:28] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:48:28] Found vcfuniq - /usr/local/bin/vcfuniq
[23:48:28] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:48:28] Found gzip - /usr/bin/gzip
[23:48:28] Found vt - /usr/local/bin/vt
[23:48:28] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:48:28] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:48:28] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:48:28] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:48:28] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:48:28] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:48:28] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:48:28] Using reference: /data/Analysis/refe.gbk
[23:48:28] Treating reference as 'genbank' format.
[23:48:28] Will use 16 CPU cores.
[23:48:28] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:48:28] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:48:28] Creating folder: mysnps_HCU24010_S6
[23:48:28] Changing working directory: mysnps_HCU24010_S6
[23:48:28] Creating reference folder: reference
[23:48:28] Extracting FASTA and GFF from reference.
[23:48:30] Wrote 1 sequences to ref.fa
[23:48:30] Wrote 4429 features to ref.gff
[23:48:30] Creating reference/snpeff.config
[23:48:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:48:30] Using BAM RG (Read Group) ID: mysnps_HCU24010_S6
[23:48:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:48:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:48:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:48:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:48:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:48:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:48:31] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:48:34] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HCU24010_S6\tSM:mysnps_HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.252 CPU sec, 3.021 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.139 CPU sec, 3.178 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 48.585 CPU sec, 3.092 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 14.984 CPU sec, 0.938 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HCU24010_S6\tSM:mysnps_HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.821 sec; CPU: 165.067 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:48:51] Running: samtools index snps.bam 2>> snps.log
[23:48:52] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:48:52] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:48:28] This is snippy 4.6.0
[23:48:28] Written by Torsten Seemann
[23:48:28] Obtained from https://github.com/tseemann/snippy
[23:48:28] Detected operating system: linux
[23:48:28] Enabling bundled linux tools.
[23:48:28] Found bwa - /usr/local/bin/bwa
[23:48:28] Found bcftools - /usr/local/bin/bcftools
[23:48:28] Found samtools - /usr/local/bin/samtools
[23:48:28] Found java - /usr/local/bin/java
[23:48:28] Found snpEff - /usr/local/bin/snpEff
[23:48:28] Found samclip - /usr/local/bin/samclip
[23:48:28] Found seqtk - /usr/local/bin/seqtk
[23:48:28] Found parallel - /usr/local/bin/parallel
[23:48:28] Found freebayes - /usr/local/bin/freebayes
[23:48:28] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:48:28] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:48:28] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:48:28] Found vcfuniq - /usr/local/bin/vcfuniq
[23:48:28] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:48:28] Found gzip - /usr/bin/gzip
[23:48:28] Found vt - /usr/local/bin/vt
[23:48:28] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:48:28] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:48:28] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:48:28] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:48:28] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:48:28] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:48:28] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:48:28] Using reference: /data/Analysis/refe.gbk
[23:48:28] Treating reference as 'genbank' format.
[23:48:28] Will use 16 CPU cores.
[23:48:28] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:48:28] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:48:28] Creating folder: mysnps_HCU24010_S6
[23:48:28] Changing working directory: mysnps_HCU24010_S6
[23:48:28] Creating reference folder: reference
[23:48:28] Extracting FASTA and GFF from reference.
[23:48:30] Wrote 1 sequences to ref.fa
[23:48:30] Wrote 4429 features to ref.gff
[23:48:30] Creating reference/snpeff.config
[23:48:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:48:30] Using BAM RG (Read Group) ID: mysnps_HCU24010_S6
[23:48:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:48:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:48:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:48:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:48:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:48:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:48:31] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:48:34] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HCU24010_S6\tSM:mysnps_HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.252 CPU sec, 3.021 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.139 CPU sec, 3.178 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 48.585 CPU sec, 3.092 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 14.984 CPU sec, 0.938 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HCU24010_S6\tSM:mysnps_HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.821 sec; CPU: 165.067 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:48:51] Running: samtools index snps.bam 2>> snps.log
[23:48:52] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:48:52] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:48:56] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 9
          no. right trimmed                     : 88
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 101

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 101
       total no. variants observed              : 941
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:48:56] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:48:57] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:48:59] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:48:59] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:48:59] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:48:59] Running: bcftools consensus --sample mysnps_HCU24010_S6 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:48:59] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:48:59] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:48:59] Running: bcftools consensus --sample mysnps_HCU24010_S6 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:48:59] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:48:59] Running: samtools view -h -q 60 snps.bam | samtools sort -l 0 -T /tmp --threads 7 -m 1000M > /tmp/snippy.1.Q60.bam 2>> snps.log
[23:49:01] Running: samtools index /tmp/snippy.1.Q60.bam 2>> snps.log
[23:49:02] Running: /usr/local/bin/snippy-vcf_report --cpus 16 --bam /tmp/snippy.1.Q60.bam --ref reference/ref.fa --vcf snps.vcf > snps.report.txt 2>> snps.log
[23:48:28] This is snippy 4.6.0
[23:48:28] Written by Torsten Seemann
[23:48:28] Obtained from https://github.com/tseemann/snippy
[23:48:28] Detected operating system: linux
[23:48:28] Enabling bundled linux tools.
[23:48:28] Found bwa - /usr/local/bin/bwa
[23:48:28] Found bcftools - /usr/local/bin/bcftools
[23:48:28] Found samtools - /usr/local/bin/samtools
[23:48:28] Found java - /usr/local/bin/java
[23:48:28] Found snpEff - /usr/local/bin/snpEff
[23:48:28] Found samclip - /usr/local/bin/samclip
[23:48:28] Found seqtk - /usr/local/bin/seqtk
[23:48:28] Found parallel - /usr/local/bin/parallel
[23:48:28] Found freebayes - /usr/local/bin/freebayes
[23:48:28] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:48:28] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:48:28] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:48:28] Found vcfuniq - /usr/local/bin/vcfuniq
[23:48:28] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:48:28] Found gzip - /usr/bin/gzip
[23:48:28] Found vt - /usr/local/bin/vt
[23:48:28] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:48:28] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:48:28] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:48:28] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:48:28] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:48:28] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:48:28] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:48:28] Using reference: /data/Analysis/refe.gbk
[23:48:28] Treating reference as 'genbank' format.
[23:48:28] Will use 16 CPU cores.
[23:48:28] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:48:28] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:48:28] Creating folder: mysnps_HCU24010_S6
[23:48:28] Changing working directory: mysnps_HCU24010_S6
[23:48:28] Creating reference folder: reference
[23:48:28] Extracting FASTA and GFF from reference.
[23:48:30] Wrote 1 sequences to ref.fa
[23:48:30] Wrote 4429 features to ref.gff
[23:48:30] Creating reference/snpeff.config
[23:48:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:48:30] Using BAM RG (Read Group) ID: mysnps_HCU24010_S6
[23:48:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:48:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:48:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:48:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:48:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:48:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:48:31] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:48:34] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HCU24010_S6\tSM:mysnps_HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.252 CPU sec, 3.021 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.139 CPU sec, 3.178 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 48.585 CPU sec, 3.092 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 14.984 CPU sec, 0.938 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HCU24010_S6\tSM:mysnps_HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.821 sec; CPU: 165.067 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:48:51] Running: samtools index snps.bam 2>> snps.log
[23:48:52] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:48:52] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:48:56] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 9
          no. right trimmed                     : 88
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 101

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 101
       total no. variants observed              : 941
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:48:56] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:48:57] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:48:59] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:48:59] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:48:59] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:48:59] Running: bcftools consensus --sample mysnps_HCU24010_S6 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:48:59] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:48:59] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:48:59] Running: bcftools consensus --sample mysnps_HCU24010_S6 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:48:59] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:48:59] Running: samtools view -h -q 60 snps.bam | samtools sort -l 0 -T /tmp --threads 7 -m 1000M > /tmp/snippy.1.Q60.bam 2>> snps.log
[23:49:01] Running: samtools index /tmp/snippy.1.Q60.bam 2>> snps.log
[23:49:02] Running: /usr/local/bin/snippy-vcf_report --cpus 16 --bam /tmp/snippy.1.Q60.bam --ref reference/ref.fa --vcf snps.vcf > snps.report.txt 2>> snps.log
[23:49:07] Running: rm -f /tmp/snippy.1.Q60.bam /tmp/snippy.1.Q60.bam.bai 2>> snps.log
[23:49:07] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
snippy_container

<INFO>	[2025-06-13 01:49:14]	Starting Snippy analysis for sample HCU24011_S7.
<INFO>	[2025-06-13 01:49:14]	The inputs for the analysis are HCU24011_S7_R1.fastq.gz and HCU24011_S7_R2.fastq.gz.
<INFO>	[2025-06-13 01:49:14]	Results will be stored in mysnips_HCU24011_S7 folder, located in /home/cgerediaga/Analysis.
a6f590c1902ba8c0457e1864225322c7bb1d2b150301a3af42c1e98681931ec0
[23:49:14] This is snippy 4.6.0
[23:49:14] Written by Torsten Seemann
[23:49:14] Obtained from https://github.com/tseemann/snippy
[23:49:14] Detected operating system: linux
[23:49:14] Enabling bundled linux tools.
[23:49:14] Found bwa - /usr/local/bin/bwa
[23:49:14] Found bcftools - /usr/local/bin/bcftools
[23:49:14] Found samtools - /usr/local/bin/samtools
[23:49:14] Found java - /usr/local/bin/java
[23:49:14] Found snpEff - /usr/local/bin/snpEff
[23:49:14] Found samclip - /usr/local/bin/samclip
[23:49:14] Found seqtk - /usr/local/bin/seqtk
[23:49:14] Found parallel - /usr/local/bin/parallel
[23:49:14] Found freebayes - /usr/local/bin/freebayes
[23:49:14] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:49:14] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:49:14] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:49:14] Found vcfuniq - /usr/local/bin/vcfuniq
[23:49:14] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:49:14] Found gzip - /usr/bin/gzip
[23:49:14] Found vt - /usr/local/bin/vt
[23:49:14] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:49:14] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:49:14] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:49:14] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:49:14] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:49:14] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:49:14] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:49:14] Using reference: /data/Analysis/refe.gbk
[23:49:15] Treating reference as 'genbank' format.
[23:49:15] Will use 16 CPU cores.
[23:49:15] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:49:15] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:49:15] Creating folder: mysnps_HCU24011_S7
[23:49:15] Changing working directory: mysnps_HCU24011_S7
[23:49:15] Creating reference folder: reference
[23:49:15] Extracting FASTA and GFF from reference.
[23:49:14] This is snippy 4.6.0
[23:49:14] Written by Torsten Seemann
[23:49:14] Obtained from https://github.com/tseemann/snippy
[23:49:14] Detected operating system: linux
[23:49:14] Enabling bundled linux tools.
[23:49:14] Found bwa - /usr/local/bin/bwa
[23:49:14] Found bcftools - /usr/local/bin/bcftools
[23:49:14] Found samtools - /usr/local/bin/samtools
[23:49:14] Found java - /usr/local/bin/java
[23:49:14] Found snpEff - /usr/local/bin/snpEff
[23:49:14] Found samclip - /usr/local/bin/samclip
[23:49:14] Found seqtk - /usr/local/bin/seqtk
[23:49:14] Found parallel - /usr/local/bin/parallel
[23:49:14] Found freebayes - /usr/local/bin/freebayes
[23:49:14] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:49:14] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:49:14] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:49:14] Found vcfuniq - /usr/local/bin/vcfuniq
[23:49:14] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:49:14] Found gzip - /usr/bin/gzip
[23:49:14] Found vt - /usr/local/bin/vt
[23:49:14] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:49:14] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:49:14] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:49:14] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:49:14] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:49:14] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:49:14] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:49:14] Using reference: /data/Analysis/refe.gbk
[23:49:15] Treating reference as 'genbank' format.
[23:49:15] Will use 16 CPU cores.
[23:49:15] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:49:15] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:49:15] Creating folder: mysnps_HCU24011_S7
[23:49:15] Changing working directory: mysnps_HCU24011_S7
[23:49:15] Creating reference folder: reference
[23:49:15] Extracting FASTA and GFF from reference.
[23:49:16] Wrote 1 sequences to ref.fa
[23:49:16] Wrote 4429 features to ref.gff
[23:49:16] Creating reference/snpeff.config
[23:49:16] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:49:16] Using BAM RG (Read Group) ID: mysnps_HCU24011_S7
[23:49:16] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:49:16] Running: bwa index reference/ref.fa 2>> snps.log
[23:49:17] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:49:17] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:49:17] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:49:17] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:49:17] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:49:21] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HCU24011_S7\tSM:mysnps_HCU24011_S7' -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 510314 sequences (133277700 bp)...
[23:49:14] This is snippy 4.6.0
[23:49:14] Written by Torsten Seemann
[23:49:14] Obtained from https://github.com/tseemann/snippy
[23:49:14] Detected operating system: linux
[23:49:14] Enabling bundled linux tools.
[23:49:14] Found bwa - /usr/local/bin/bwa
[23:49:14] Found bcftools - /usr/local/bin/bcftools
[23:49:14] Found samtools - /usr/local/bin/samtools
[23:49:14] Found java - /usr/local/bin/java
[23:49:14] Found snpEff - /usr/local/bin/snpEff
[23:49:14] Found samclip - /usr/local/bin/samclip
[23:49:14] Found seqtk - /usr/local/bin/seqtk
[23:49:14] Found parallel - /usr/local/bin/parallel
[23:49:14] Found freebayes - /usr/local/bin/freebayes
[23:49:14] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:49:14] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:49:14] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:49:14] Found vcfuniq - /usr/local/bin/vcfuniq
[23:49:14] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:49:14] Found gzip - /usr/bin/gzip
[23:49:14] Found vt - /usr/local/bin/vt
[23:49:14] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:49:14] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:49:14] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:49:14] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:49:14] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:49:14] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:49:14] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:49:14] Using reference: /data/Analysis/refe.gbk
[23:49:15] Treating reference as 'genbank' format.
[23:49:15] Will use 16 CPU cores.
[23:49:15] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:49:15] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:49:15] Creating folder: mysnps_HCU24011_S7
[23:49:15] Changing working directory: mysnps_HCU24011_S7
[23:49:15] Creating reference folder: reference
[23:49:15] Extracting FASTA and GFF from reference.
[23:49:16] Wrote 1 sequences to ref.fa
[23:49:16] Wrote 4429 features to ref.gff
[23:49:16] Creating reference/snpeff.config
[23:49:16] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:49:16] Using BAM RG (Read Group) ID: mysnps_HCU24011_S7
[23:49:16] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:49:16] Running: bwa index reference/ref.fa 2>> snps.log
[23:49:17] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:49:17] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:49:17] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:49:17] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:49:17] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:49:21] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HCU24011_S7\tSM:mysnps_HCU24011_S7' -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 510314 sequences (133277700 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (52, 248478, 18, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (320, 504, 939)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2177)
[M::mem_pestat] mean and std.dev: (524.39, 308.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2796)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 281, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 610)
[M::mem_pestat] mean and std.dev: (292.95, 100.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 738)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 664, 1334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3814)
[M::mem_pestat] mean and std.dev: (839.61, 800.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5054)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (302, 521, 1337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3407)
[M::mem_pestat] mean and std.dev: (743.44, 552.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4442)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 510314 reads in 46.995 CPU sec, 3.023 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HCU24011_S7\tSM:mysnps_HCU24011_S7 -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz
[main] Real time: 5.637 sec; CPU: 48.831 sec
[samclip] Total SAM records 513584, removed 116348, allowed 35199, passed 397236
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:49:27] Running: samtools index snps.bam 2>> snps.log
[23:49:28] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:49:28] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:49:14] This is snippy 4.6.0
[23:49:14] Written by Torsten Seemann
[23:49:14] Obtained from https://github.com/tseemann/snippy
[23:49:14] Detected operating system: linux
[23:49:14] Enabling bundled linux tools.
[23:49:14] Found bwa - /usr/local/bin/bwa
[23:49:14] Found bcftools - /usr/local/bin/bcftools
[23:49:14] Found samtools - /usr/local/bin/samtools
[23:49:14] Found java - /usr/local/bin/java
[23:49:14] Found snpEff - /usr/local/bin/snpEff
[23:49:14] Found samclip - /usr/local/bin/samclip
[23:49:14] Found seqtk - /usr/local/bin/seqtk
[23:49:14] Found parallel - /usr/local/bin/parallel
[23:49:14] Found freebayes - /usr/local/bin/freebayes
[23:49:14] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:49:14] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:49:14] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:49:14] Found vcfuniq - /usr/local/bin/vcfuniq
[23:49:14] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:49:14] Found gzip - /usr/bin/gzip
[23:49:14] Found vt - /usr/local/bin/vt
[23:49:14] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:49:14] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:49:14] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:49:14] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:49:14] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:49:14] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:49:14] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:49:14] Using reference: /data/Analysis/refe.gbk
[23:49:15] Treating reference as 'genbank' format.
[23:49:15] Will use 16 CPU cores.
[23:49:15] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:49:15] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:49:15] Creating folder: mysnps_HCU24011_S7
[23:49:15] Changing working directory: mysnps_HCU24011_S7
[23:49:15] Creating reference folder: reference
[23:49:15] Extracting FASTA and GFF from reference.
[23:49:16] Wrote 1 sequences to ref.fa
[23:49:16] Wrote 4429 features to ref.gff
[23:49:16] Creating reference/snpeff.config
[23:49:16] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:49:16] Using BAM RG (Read Group) ID: mysnps_HCU24011_S7
[23:49:16] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:49:16] Running: bwa index reference/ref.fa 2>> snps.log
[23:49:17] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:49:17] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:49:17] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:49:17] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:49:17] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:49:21] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HCU24011_S7\tSM:mysnps_HCU24011_S7' -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 510314 sequences (133277700 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (52, 248478, 18, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (320, 504, 939)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2177)
[M::mem_pestat] mean and std.dev: (524.39, 308.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2796)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 281, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 610)
[M::mem_pestat] mean and std.dev: (292.95, 100.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 738)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 664, 1334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3814)
[M::mem_pestat] mean and std.dev: (839.61, 800.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5054)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (302, 521, 1337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3407)
[M::mem_pestat] mean and std.dev: (743.44, 552.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4442)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 510314 reads in 46.995 CPU sec, 3.023 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HCU24011_S7\tSM:mysnps_HCU24011_S7 -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz
[main] Real time: 5.637 sec; CPU: 48.831 sec
[samclip] Total SAM records 513584, removed 116348, allowed 35199, passed 397236
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:49:27] Running: samtools index snps.bam 2>> snps.log
[23:49:28] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:49:28] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:49:29] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 37
          no. right trimmed                     : 179
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 219

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 219
       total no. variants observed              : 2202
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:49:29] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:49:30] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:49:32] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:49:32] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:49:32] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:49:32] Running: bcftools consensus --sample mysnps_HCU24011_S7 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:49:32] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:49:32] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:49:32] Running: bcftools consensus --sample mysnps_HCU24011_S7 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:49:32] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:49:32] Running: samtools view -h -q 60 snps.bam | samtools sort -l 0 -T /tmp --threads 7 -m 1000M > /tmp/snippy.1.Q60.bam 2>> snps.log
[23:49:33] Running: samtools index /tmp/snippy.1.Q60.bam 2>> snps.log
[23:49:33] Running: /usr/local/bin/snippy-vcf_report --cpus 16 --bam /tmp/snippy.1.Q60.bam --ref reference/ref.fa --vcf snps.vcf > snps.report.txt 2>> snps.log
[23:49:14] This is snippy 4.6.0
[23:49:14] Written by Torsten Seemann
[23:49:14] Obtained from https://github.com/tseemann/snippy
[23:49:14] Detected operating system: linux
[23:49:14] Enabling bundled linux tools.
[23:49:14] Found bwa - /usr/local/bin/bwa
[23:49:14] Found bcftools - /usr/local/bin/bcftools
[23:49:14] Found samtools - /usr/local/bin/samtools
[23:49:14] Found java - /usr/local/bin/java
[23:49:14] Found snpEff - /usr/local/bin/snpEff
[23:49:14] Found samclip - /usr/local/bin/samclip
[23:49:14] Found seqtk - /usr/local/bin/seqtk
[23:49:14] Found parallel - /usr/local/bin/parallel
[23:49:14] Found freebayes - /usr/local/bin/freebayes
[23:49:14] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:49:14] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:49:14] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:49:14] Found vcfuniq - /usr/local/bin/vcfuniq
[23:49:14] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:49:14] Found gzip - /usr/bin/gzip
[23:49:14] Found vt - /usr/local/bin/vt
[23:49:14] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:49:14] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:49:14] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:49:14] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:49:14] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:49:14] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:49:14] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:49:14] Using reference: /data/Analysis/refe.gbk
[23:49:15] Treating reference as 'genbank' format.
[23:49:15] Will use 16 CPU cores.
[23:49:15] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:49:15] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:49:15] Creating folder: mysnps_HCU24011_S7
[23:49:15] Changing working directory: mysnps_HCU24011_S7
[23:49:15] Creating reference folder: reference
[23:49:15] Extracting FASTA and GFF from reference.
[23:49:16] Wrote 1 sequences to ref.fa
[23:49:16] Wrote 4429 features to ref.gff
[23:49:16] Creating reference/snpeff.config
[23:49:16] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:49:16] Using BAM RG (Read Group) ID: mysnps_HCU24011_S7
[23:49:16] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:49:16] Running: bwa index reference/ref.fa 2>> snps.log
[23:49:17] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:49:17] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:49:17] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:49:17] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:49:17] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:49:21] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HCU24011_S7\tSM:mysnps_HCU24011_S7' -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 510314 sequences (133277700 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (52, 248478, 18, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (320, 504, 939)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2177)
[M::mem_pestat] mean and std.dev: (524.39, 308.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2796)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 281, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 610)
[M::mem_pestat] mean and std.dev: (292.95, 100.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 738)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 664, 1334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3814)
[M::mem_pestat] mean and std.dev: (839.61, 800.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5054)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (302, 521, 1337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3407)
[M::mem_pestat] mean and std.dev: (743.44, 552.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4442)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 510314 reads in 46.995 CPU sec, 3.023 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HCU24011_S7\tSM:mysnps_HCU24011_S7 -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz
[main] Real time: 5.637 sec; CPU: 48.831 sec
[samclip] Total SAM records 513584, removed 116348, allowed 35199, passed 397236
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:49:27] Running: samtools index snps.bam 2>> snps.log
[23:49:28] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:49:28] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:49:29] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 37
          no. right trimmed                     : 179
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 219

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 219
       total no. variants observed              : 2202
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:49:29] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:49:30] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:49:32] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:49:32] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:49:32] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:49:32] Running: bcftools consensus --sample mysnps_HCU24011_S7 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:49:32] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:49:32] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:49:32] Running: bcftools consensus --sample mysnps_HCU24011_S7 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:49:32] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:49:32] Running: samtools view -h -q 60 snps.bam | samtools sort -l 0 -T /tmp --threads 7 -m 1000M > /tmp/snippy.1.Q60.bam 2>> snps.log
[23:49:33] Running: samtools index /tmp/snippy.1.Q60.bam 2>> snps.log
[23:49:33] Running: /usr/local/bin/snippy-vcf_report --cpus 16 --bam /tmp/snippy.1.Q60.bam --ref reference/ref.fa --vcf snps.vcf > snps.report.txt 2>> snps.log
[23:49:14] This is snippy 4.6.0
[23:49:14] Written by Torsten Seemann
[23:49:14] Obtained from https://github.com/tseemann/snippy
[23:49:14] Detected operating system: linux
[23:49:14] Enabling bundled linux tools.
[23:49:14] Found bwa - /usr/local/bin/bwa
[23:49:14] Found bcftools - /usr/local/bin/bcftools
[23:49:14] Found samtools - /usr/local/bin/samtools
[23:49:14] Found java - /usr/local/bin/java
[23:49:14] Found snpEff - /usr/local/bin/snpEff
[23:49:14] Found samclip - /usr/local/bin/samclip
[23:49:14] Found seqtk - /usr/local/bin/seqtk
[23:49:14] Found parallel - /usr/local/bin/parallel
[23:49:14] Found freebayes - /usr/local/bin/freebayes
[23:49:14] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:49:14] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:49:14] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:49:14] Found vcfuniq - /usr/local/bin/vcfuniq
[23:49:14] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:49:14] Found gzip - /usr/bin/gzip
[23:49:14] Found vt - /usr/local/bin/vt
[23:49:14] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:49:14] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:49:14] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:49:14] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:49:14] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:49:14] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:49:14] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:49:14] Using reference: /data/Analysis/refe.gbk
[23:49:15] Treating reference as 'genbank' format.
[23:49:15] Will use 16 CPU cores.
[23:49:15] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:49:15] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:49:15] Creating folder: mysnps_HCU24011_S7
[23:49:15] Changing working directory: mysnps_HCU24011_S7
[23:49:15] Creating reference folder: reference
[23:49:15] Extracting FASTA and GFF from reference.
[23:49:16] Wrote 1 sequences to ref.fa
[23:49:16] Wrote 4429 features to ref.gff
[23:49:16] Creating reference/snpeff.config
[23:49:16] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:49:16] Using BAM RG (Read Group) ID: mysnps_HCU24011_S7
[23:49:16] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:49:16] Running: bwa index reference/ref.fa 2>> snps.log
[23:49:17] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:49:17] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:49:17] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:49:17] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:49:17] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:49:21] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HCU24011_S7\tSM:mysnps_HCU24011_S7' -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 510314 sequences (133277700 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (52, 248478, 18, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (320, 504, 939)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2177)
[M::mem_pestat] mean and std.dev: (524.39, 308.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2796)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 281, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 610)
[M::mem_pestat] mean and std.dev: (292.95, 100.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 738)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 664, 1334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3814)
[M::mem_pestat] mean and std.dev: (839.61, 800.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5054)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (302, 521, 1337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3407)
[M::mem_pestat] mean and std.dev: (743.44, 552.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4442)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 510314 reads in 46.995 CPU sec, 3.023 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HCU24011_S7\tSM:mysnps_HCU24011_S7 -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz
[main] Real time: 5.637 sec; CPU: 48.831 sec
[samclip] Total SAM records 513584, removed 116348, allowed 35199, passed 397236
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:49:27] Running: samtools index snps.bam 2>> snps.log
[23:49:28] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:49:28] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:49:29] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 37
          no. right trimmed                     : 179
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 219

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 219
       total no. variants observed              : 2202
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:49:29] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:49:30] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:49:32] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:49:32] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:49:32] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:49:32] Running: bcftools consensus --sample mysnps_HCU24011_S7 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:49:32] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:49:32] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:49:32] Running: bcftools consensus --sample mysnps_HCU24011_S7 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:49:32] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:49:32] Running: samtools view -h -q 60 snps.bam | samtools sort -l 0 -T /tmp --threads 7 -m 1000M > /tmp/snippy.1.Q60.bam 2>> snps.log
[23:49:33] Running: samtools index /tmp/snippy.1.Q60.bam 2>> snps.log
[23:49:33] Running: /usr/local/bin/snippy-vcf_report --cpus 16 --bam /tmp/snippy.1.Q60.bam --ref reference/ref.fa --vcf snps.vcf > snps.report.txt 2>> snps.log
[23:49:46] Running: rm -f /tmp/snippy.1.Q60.bam /tmp/snippy.1.Q60.bam.bai 2>> snps.log
[23:49:46] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:49:48] Marked 7775 heterozygous sites with 'n'
[23:49:48] Creating extra output files: BED GFF CSV TXT HTML
[23:49:48] Identified 2202 variants.
[23:49:48] Result folder: mysnps_HCU24011_S7
[23:49:48] Result files:
[23:49:48] * mysnps_HCU24011_S7/snps.aligned.fa
[23:49:48] * mysnps_HCU24011_S7/snps.bam
[23:49:48] * mysnps_HCU24011_S7/snps.bam.bai
[23:49:48] * mysnps_HCU24011_S7/snps.bed
[23:49:48] * mysnps_HCU24011_S7/snps.consensus.fa
[23:49:48] * mysnps_HCU24011_S7/snps.consensus.subs.fa
[23:49:48] * mysnps_HCU24011_S7/snps.csv
[23:49:48] * mysnps_HCU24011_S7/snps.filt.vcf
[23:49:48] * mysnps_HCU24011_S7/snps.gff
[23:49:48] * mysnps_HCU24011_S7/snps.html
[23:49:48] * mysnps_HCU24011_S7/snps.log
[23:49:48] * mysnps_HCU24011_S7/snps.raw.vcf
[23:49:48] * mysnps_HCU24011_S7/snps.report.txt
[23:49:48] * mysnps_HCU24011_S7/snps.subs.vcf
[23:49:48] * mysnps_HCU24011_S7/snps.tab
[23:49:48] * mysnps_HCU24011_S7/snps.txt
[23:49:48] * mysnps_HCU24011_S7/snps.vcf
[23:49:48] * mysnps_HCU24011_S7/snps.vcf.gz
[23:49:48] * mysnps_HCU24011_S7/snps.vcf.gz.csi
[23:49:48] Walltime used: 34 seconds
[23:49:48] Wishing you a life free of homopolymer errors.
[23:49:48] Done.
snippy_container

<INFO>	[2025-06-13 01:49:54]	Starting Snippy analysis for sample HMS24017_S15.
<INFO>	[2025-06-13 01:49:54]	The inputs for the analysis are HMS24017_S15_R1.fastq.gz and HMS24017_S15_R2.fastq.gz.
<INFO>	[2025-06-13 01:49:54]	Results will be stored in mysnips_HMS24017_S15 folder, located in /home/cgerediaga/Analysis.
aaaa8f0b5b0619cdc25d9a5ef4c7a0c4c0dfc7811ed50f6dd6bf94631fa99422
[23:49:54] This is snippy 4.6.0
[23:49:54] Written by Torsten Seemann
[23:49:54] Obtained from https://github.com/tseemann/snippy
[23:49:54] Detected operating system: linux
[23:49:54] Enabling bundled linux tools.
[23:49:54] Found bwa - /usr/local/bin/bwa
[23:49:54] Found bcftools - /usr/local/bin/bcftools
[23:49:54] Found samtools - /usr/local/bin/samtools
[23:49:54] Found java - /usr/local/bin/java
[23:49:54] Found snpEff - /usr/local/bin/snpEff
[23:49:54] Found samclip - /usr/local/bin/samclip
[23:49:54] Found seqtk - /usr/local/bin/seqtk
[23:49:54] Found parallel - /usr/local/bin/parallel
[23:49:54] Found freebayes - /usr/local/bin/freebayes
[23:49:54] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:49:54] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:49:54] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:49:54] Found vcfuniq - /usr/local/bin/vcfuniq
[23:49:54] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:49:54] Found gzip - /usr/bin/gzip
[23:49:54] Found vt - /usr/local/bin/vt
[23:49:54] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:49:54] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:49:54] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:49:54] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:49:54] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:49:54] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:49:54] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:49:54] Using reference: /data/Analysis/refe.gbk
[23:49:54] Treating reference as 'genbank' format.
[23:49:54] Will use 16 CPU cores.
[23:49:54] Using read file: /data/Analysis/HMS24017_S15_R1.fastq.gz
[23:49:54] Using read file: /data/Analysis/HMS24017_S15_R2.fastq.gz
[23:49:54] Creating folder: mysnps_HMS24017_S15
[23:49:54] Changing working directory: mysnps_HMS24017_S15
[23:49:54] Creating reference folder: reference
[23:49:54] Extracting FASTA and GFF from reference.
[23:49:54] This is snippy 4.6.0
[23:49:54] Written by Torsten Seemann
[23:49:54] Obtained from https://github.com/tseemann/snippy
[23:49:54] Detected operating system: linux
[23:49:54] Enabling bundled linux tools.
[23:49:54] Found bwa - /usr/local/bin/bwa
[23:49:54] Found bcftools - /usr/local/bin/bcftools
[23:49:54] Found samtools - /usr/local/bin/samtools
[23:49:54] Found java - /usr/local/bin/java
[23:49:54] Found snpEff - /usr/local/bin/snpEff
[23:49:54] Found samclip - /usr/local/bin/samclip
[23:49:54] Found seqtk - /usr/local/bin/seqtk
[23:49:54] Found parallel - /usr/local/bin/parallel
[23:49:54] Found freebayes - /usr/local/bin/freebayes
[23:49:54] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:49:54] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:49:54] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:49:54] Found vcfuniq - /usr/local/bin/vcfuniq
[23:49:54] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:49:54] Found gzip - /usr/bin/gzip
[23:49:54] Found vt - /usr/local/bin/vt
[23:49:54] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:49:54] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:49:54] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:49:54] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:49:54] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:49:54] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:49:54] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:49:54] Using reference: /data/Analysis/refe.gbk
[23:49:54] Treating reference as 'genbank' format.
[23:49:54] Will use 16 CPU cores.
[23:49:54] Using read file: /data/Analysis/HMS24017_S15_R1.fastq.gz
[23:49:54] Using read file: /data/Analysis/HMS24017_S15_R2.fastq.gz
[23:49:54] Creating folder: mysnps_HMS24017_S15
[23:49:54] Changing working directory: mysnps_HMS24017_S15
[23:49:54] Creating reference folder: reference
[23:49:54] Extracting FASTA and GFF from reference.
[23:49:56] Wrote 1 sequences to ref.fa
[23:49:56] Wrote 4429 features to ref.gff
[23:49:56] Creating reference/snpeff.config
[23:49:56] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:49:56] Using BAM RG (Read Group) ID: mysnps_HMS24017_S15
[23:49:56] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:49:56] Running: bwa index reference/ref.fa 2>> snps.log
[23:49:57] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:49:57] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:49:57] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:49:57] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:49:57] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:50:00] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HMS24017_S15\tSM:mysnps_HMS24017_S15' -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 746630 sequences (160000202 bp)...
[23:49:54] This is snippy 4.6.0
[23:49:54] Written by Torsten Seemann
[23:49:54] Obtained from https://github.com/tseemann/snippy
[23:49:54] Detected operating system: linux
[23:49:54] Enabling bundled linux tools.
[23:49:54] Found bwa - /usr/local/bin/bwa
[23:49:54] Found bcftools - /usr/local/bin/bcftools
[23:49:54] Found samtools - /usr/local/bin/samtools
[23:49:54] Found java - /usr/local/bin/java
[23:49:54] Found snpEff - /usr/local/bin/snpEff
[23:49:54] Found samclip - /usr/local/bin/samclip
[23:49:54] Found seqtk - /usr/local/bin/seqtk
[23:49:54] Found parallel - /usr/local/bin/parallel
[23:49:54] Found freebayes - /usr/local/bin/freebayes
[23:49:54] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:49:54] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:49:54] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:49:54] Found vcfuniq - /usr/local/bin/vcfuniq
[23:49:54] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:49:54] Found gzip - /usr/bin/gzip
[23:49:54] Found vt - /usr/local/bin/vt
[23:49:54] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:49:54] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:49:54] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:49:54] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:49:54] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:49:54] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:49:54] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:49:54] Using reference: /data/Analysis/refe.gbk
[23:49:54] Treating reference as 'genbank' format.
[23:49:54] Will use 16 CPU cores.
[23:49:54] Using read file: /data/Analysis/HMS24017_S15_R1.fastq.gz
[23:49:54] Using read file: /data/Analysis/HMS24017_S15_R2.fastq.gz
[23:49:54] Creating folder: mysnps_HMS24017_S15
[23:49:54] Changing working directory: mysnps_HMS24017_S15
[23:49:54] Creating reference folder: reference
[23:49:54] Extracting FASTA and GFF from reference.
[23:49:56] Wrote 1 sequences to ref.fa
[23:49:56] Wrote 4429 features to ref.gff
[23:49:56] Creating reference/snpeff.config
[23:49:56] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:49:56] Using BAM RG (Read Group) ID: mysnps_HMS24017_S15
[23:49:56] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:49:56] Running: bwa index reference/ref.fa 2>> snps.log
[23:49:57] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:49:57] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:49:57] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:49:57] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:49:57] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:50:00] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HMS24017_S15\tSM:mysnps_HMS24017_S15' -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 746630 sequences (160000202 bp)...
[M::process] read 218810 sequences (46953613 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 366940, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 259)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (215.34, 67.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 746630 reads in 39.078 CPU sec, 2.570 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 107505, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 260)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (215.68, 67.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 218810 reads in 12.585 CPU sec, 0.814 real sec
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HMS24017_S15\tSM:mysnps_HMS24017_S15 -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz
[main] Real time: 6.499 sec; CPU: 53.918 sec
[samclip] Total SAM records 967230, removed 76910, allowed 25086, passed 890320
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:49:54] This is snippy 4.6.0
[23:49:54] Written by Torsten Seemann
[23:49:54] Obtained from https://github.com/tseemann/snippy
[23:49:54] Detected operating system: linux
[23:49:54] Enabling bundled linux tools.
[23:49:54] Found bwa - /usr/local/bin/bwa
[23:49:54] Found bcftools - /usr/local/bin/bcftools
[23:49:54] Found samtools - /usr/local/bin/samtools
[23:49:54] Found java - /usr/local/bin/java
[23:49:54] Found snpEff - /usr/local/bin/snpEff
[23:49:54] Found samclip - /usr/local/bin/samclip
[23:49:54] Found seqtk - /usr/local/bin/seqtk
[23:49:54] Found parallel - /usr/local/bin/parallel
[23:49:54] Found freebayes - /usr/local/bin/freebayes
[23:49:54] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:49:54] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:49:54] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:49:54] Found vcfuniq - /usr/local/bin/vcfuniq
[23:49:54] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:49:54] Found gzip - /usr/bin/gzip
[23:49:54] Found vt - /usr/local/bin/vt
[23:49:54] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:49:54] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:49:54] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:49:54] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:49:54] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:49:54] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:49:54] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:49:54] Using reference: /data/Analysis/refe.gbk
[23:49:54] Treating reference as 'genbank' format.
[23:49:54] Will use 16 CPU cores.
[23:49:54] Using read file: /data/Analysis/HMS24017_S15_R1.fastq.gz
[23:49:54] Using read file: /data/Analysis/HMS24017_S15_R2.fastq.gz
[23:49:54] Creating folder: mysnps_HMS24017_S15
[23:49:54] Changing working directory: mysnps_HMS24017_S15
[23:49:54] Creating reference folder: reference
[23:49:54] Extracting FASTA and GFF from reference.
[23:49:56] Wrote 1 sequences to ref.fa
[23:49:56] Wrote 4429 features to ref.gff
[23:49:56] Creating reference/snpeff.config
[23:49:56] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:49:56] Using BAM RG (Read Group) ID: mysnps_HMS24017_S15
[23:49:56] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:49:56] Running: bwa index reference/ref.fa 2>> snps.log
[23:49:57] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:49:57] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:49:57] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:49:57] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:49:57] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:50:00] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HMS24017_S15\tSM:mysnps_HMS24017_S15' -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 746630 sequences (160000202 bp)...
[M::process] read 218810 sequences (46953613 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 366940, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 259)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (215.34, 67.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 746630 reads in 39.078 CPU sec, 2.570 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 107505, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 260)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (215.68, 67.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 218810 reads in 12.585 CPU sec, 0.814 real sec
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HMS24017_S15\tSM:mysnps_HMS24017_S15 -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz
[main] Real time: 6.499 sec; CPU: 53.918 sec
[samclip] Total SAM records 967230, removed 76910, allowed 25086, passed 890320
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:50:09] Running: samtools index snps.bam 2>> snps.log
[23:50:09] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:50:09] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:50:12] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 10
          no. right trimmed                     : 74
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 87

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 87
       total no. variants observed              : 877
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:50:12] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:50:13] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:50:14] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:50:14] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:50:14] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:50:14] Running: bcftools consensus --sample mysnps_HMS24017_S15 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:50:15] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:50:15] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:50:15] Running: bcftools consensus --sample mysnps_HMS24017_S15 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:50:15] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:50:15] Running: samtools view -h -q 60 snps.bam | samtools sort -l 0 -T /tmp --threads 7 -m 1000M > /tmp/snippy.1.Q60.bam 2>> snps.log
[23:49:54] This is snippy 4.6.0
[23:49:54] Written by Torsten Seemann
[23:49:54] Obtained from https://github.com/tseemann/snippy
[23:49:54] Detected operating system: linux
[23:49:54] Enabling bundled linux tools.
[23:49:54] Found bwa - /usr/local/bin/bwa
[23:49:54] Found bcftools - /usr/local/bin/bcftools
[23:49:54] Found samtools - /usr/local/bin/samtools
[23:49:54] Found java - /usr/local/bin/java
[23:49:54] Found snpEff - /usr/local/bin/snpEff
[23:49:54] Found samclip - /usr/local/bin/samclip
[23:49:54] Found seqtk - /usr/local/bin/seqtk
[23:49:54] Found parallel - /usr/local/bin/parallel
[23:49:54] Found freebayes - /usr/local/bin/freebayes
[23:49:54] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:49:54] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:49:54] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:49:54] Found vcfuniq - /usr/local/bin/vcfuniq
[23:49:54] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:49:54] Found gzip - /usr/bin/gzip
[23:49:54] Found vt - /usr/local/bin/vt
[23:49:54] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:49:54] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:49:54] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:49:54] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:49:54] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:49:54] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:49:54] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:49:54] Using reference: /data/Analysis/refe.gbk
[23:49:54] Treating reference as 'genbank' format.
[23:49:54] Will use 16 CPU cores.
[23:49:54] Using read file: /data/Analysis/HMS24017_S15_R1.fastq.gz
[23:49:54] Using read file: /data/Analysis/HMS24017_S15_R2.fastq.gz
[23:49:54] Creating folder: mysnps_HMS24017_S15
[23:49:54] Changing working directory: mysnps_HMS24017_S15
[23:49:54] Creating reference folder: reference
[23:49:54] Extracting FASTA and GFF from reference.
[23:49:56] Wrote 1 sequences to ref.fa
[23:49:56] Wrote 4429 features to ref.gff
[23:49:56] Creating reference/snpeff.config
[23:49:56] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:49:56] Using BAM RG (Read Group) ID: mysnps_HMS24017_S15
[23:49:56] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:49:56] Running: bwa index reference/ref.fa 2>> snps.log
[23:49:57] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:49:57] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:49:57] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:49:57] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:49:57] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:50:00] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HMS24017_S15\tSM:mysnps_HMS24017_S15' -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 746630 sequences (160000202 bp)...
[M::process] read 218810 sequences (46953613 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 366940, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 259)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (215.34, 67.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 746630 reads in 39.078 CPU sec, 2.570 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 107505, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 260)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (215.68, 67.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 218810 reads in 12.585 CPU sec, 0.814 real sec
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HMS24017_S15\tSM:mysnps_HMS24017_S15 -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz
[main] Real time: 6.499 sec; CPU: 53.918 sec
[samclip] Total SAM records 967230, removed 76910, allowed 25086, passed 890320
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:50:09] Running: samtools index snps.bam 2>> snps.log
[23:50:09] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:50:09] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:50:12] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 10
          no. right trimmed                     : 74
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 87

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 87
       total no. variants observed              : 877
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:50:12] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:50:13] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:50:14] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:50:14] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:50:14] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:50:14] Running: bcftools consensus --sample mysnps_HMS24017_S15 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:50:15] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:50:15] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:50:15] Running: bcftools consensus --sample mysnps_HMS24017_S15 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:50:15] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:50:15] Running: samtools view -h -q 60 snps.bam | samtools sort -l 0 -T /tmp --threads 7 -m 1000M > /tmp/snippy.1.Q60.bam 2>> snps.log
[23:50:16] Running: samtools index /tmp/snippy.1.Q60.bam 2>> snps.log
[23:50:16] Running: /usr/local/bin/snippy-vcf_report --cpus 16 --bam /tmp/snippy.1.Q60.bam --ref reference/ref.fa --vcf snps.vcf > snps.report.txt 2>> snps.log
[23:50:21] Running: rm -f /tmp/snippy.1.Q60.bam /tmp/snippy.1.Q60.bam.bai 2>> snps.log
[23:50:21] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
snippy_container

<INFO>	[2025-06-13 01:50:27]	Starting Snippy analysis for sample HMS24046_S23.
<INFO>	[2025-06-13 01:50:27]	The inputs for the analysis are HMS24046_S23_R1.fastq.gz and HMS24046_S23_R2.fastq.gz.
<INFO>	[2025-06-13 01:50:27]	Results will be stored in mysnips_HMS24046_S23 folder, located in /home/cgerediaga/Analysis.
3d02b85973a6f6f1ddb7e4f70b9ac6d0942e5bfa3fb829a169369392d8dfe7df
[23:50:27] This is snippy 4.6.0
[23:50:27] Written by Torsten Seemann
[23:50:27] Obtained from https://github.com/tseemann/snippy
[23:50:27] Detected operating system: linux
[23:50:27] Enabling bundled linux tools.
[23:50:27] Found bwa - /usr/local/bin/bwa
[23:50:27] Found bcftools - /usr/local/bin/bcftools
[23:50:27] Found samtools - /usr/local/bin/samtools
[23:50:27] Found java - /usr/local/bin/java
[23:50:27] Found snpEff - /usr/local/bin/snpEff
[23:50:27] Found samclip - /usr/local/bin/samclip
[23:50:27] Found seqtk - /usr/local/bin/seqtk
[23:50:27] Found parallel - /usr/local/bin/parallel
[23:50:27] Found freebayes - /usr/local/bin/freebayes
[23:50:27] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:50:27] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:50:27] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:50:27] Found vcfuniq - /usr/local/bin/vcfuniq
[23:50:27] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:50:27] Found gzip - /usr/bin/gzip
[23:50:27] Found vt - /usr/local/bin/vt
[23:50:27] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:50:27] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:50:27] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:50:27] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:50:27] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:50:27] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:50:27] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:50:27] Using reference: /data/Analysis/refe.gbk
[23:50:27] Treating reference as 'genbank' format.
[23:50:27] Will use 16 CPU cores.
[23:50:27] Using read file: /data/Analysis/HMS24046_S23_R1.fastq.gz
[23:50:27] Using read file: /data/Analysis/HMS24046_S23_R2.fastq.gz
[23:50:27] Creating folder: mysnps_HMS24046_S23
[23:50:27] Changing working directory: mysnps_HMS24046_S23
[23:50:27] Creating reference folder: reference
[23:50:27] Extracting FASTA and GFF from reference.
[23:50:27] This is snippy 4.6.0
[23:50:27] Written by Torsten Seemann
[23:50:27] Obtained from https://github.com/tseemann/snippy
[23:50:27] Detected operating system: linux
[23:50:27] Enabling bundled linux tools.
[23:50:27] Found bwa - /usr/local/bin/bwa
[23:50:27] Found bcftools - /usr/local/bin/bcftools
[23:50:27] Found samtools - /usr/local/bin/samtools
[23:50:27] Found java - /usr/local/bin/java
[23:50:27] Found snpEff - /usr/local/bin/snpEff
[23:50:27] Found samclip - /usr/local/bin/samclip
[23:50:27] Found seqtk - /usr/local/bin/seqtk
[23:50:27] Found parallel - /usr/local/bin/parallel
[23:50:27] Found freebayes - /usr/local/bin/freebayes
[23:50:27] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:50:27] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:50:27] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:50:27] Found vcfuniq - /usr/local/bin/vcfuniq
[23:50:27] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:50:27] Found gzip - /usr/bin/gzip
[23:50:27] Found vt - /usr/local/bin/vt
[23:50:27] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:50:27] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:50:27] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:50:27] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:50:27] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:50:27] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:50:27] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:50:27] Using reference: /data/Analysis/refe.gbk
[23:50:27] Treating reference as 'genbank' format.
[23:50:27] Will use 16 CPU cores.
[23:50:27] Using read file: /data/Analysis/HMS24046_S23_R1.fastq.gz
[23:50:27] Using read file: /data/Analysis/HMS24046_S23_R2.fastq.gz
[23:50:27] Creating folder: mysnps_HMS24046_S23
[23:50:27] Changing working directory: mysnps_HMS24046_S23
[23:50:27] Creating reference folder: reference
[23:50:27] Extracting FASTA and GFF from reference.
[23:50:29] Wrote 1 sequences to ref.fa
[23:50:29] Wrote 4429 features to ref.gff
[23:50:29] Creating reference/snpeff.config
[23:50:29] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:50:29] Using BAM RG (Read Group) ID: mysnps_HMS24046_S23
[23:50:29] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:50:29] Running: bwa index reference/ref.fa 2>> snps.log
[23:50:30] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:50:30] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:50:30] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:50:30] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:50:30] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:50:33] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HMS24046_S23\tSM:mysnps_HMS24046_S23' -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 593288 sequences (160000360 bp)...
[23:50:27] This is snippy 4.6.0
[23:50:27] Written by Torsten Seemann
[23:50:27] Obtained from https://github.com/tseemann/snippy
[23:50:27] Detected operating system: linux
[23:50:27] Enabling bundled linux tools.
[23:50:27] Found bwa - /usr/local/bin/bwa
[23:50:27] Found bcftools - /usr/local/bin/bcftools
[23:50:27] Found samtools - /usr/local/bin/samtools
[23:50:27] Found java - /usr/local/bin/java
[23:50:27] Found snpEff - /usr/local/bin/snpEff
[23:50:27] Found samclip - /usr/local/bin/samclip
[23:50:27] Found seqtk - /usr/local/bin/seqtk
[23:50:27] Found parallel - /usr/local/bin/parallel
[23:50:27] Found freebayes - /usr/local/bin/freebayes
[23:50:27] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:50:27] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:50:27] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:50:27] Found vcfuniq - /usr/local/bin/vcfuniq
[23:50:27] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:50:27] Found gzip - /usr/bin/gzip
[23:50:27] Found vt - /usr/local/bin/vt
[23:50:27] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:50:27] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:50:27] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:50:27] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:50:27] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:50:27] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:50:27] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:50:27] Using reference: /data/Analysis/refe.gbk
[23:50:27] Treating reference as 'genbank' format.
[23:50:27] Will use 16 CPU cores.
[23:50:27] Using read file: /data/Analysis/HMS24046_S23_R1.fastq.gz
[23:50:27] Using read file: /data/Analysis/HMS24046_S23_R2.fastq.gz
[23:50:27] Creating folder: mysnps_HMS24046_S23
[23:50:27] Changing working directory: mysnps_HMS24046_S23
[23:50:27] Creating reference folder: reference
[23:50:27] Extracting FASTA and GFF from reference.
[23:50:29] Wrote 1 sequences to ref.fa
[23:50:29] Wrote 4429 features to ref.gff
[23:50:29] Creating reference/snpeff.config
[23:50:29] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:50:29] Using BAM RG (Read Group) ID: mysnps_HMS24046_S23
[23:50:29] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:50:29] Running: bwa index reference/ref.fa 2>> snps.log
[23:50:30] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:50:30] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:50:30] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:50:30] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:50:30] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:50:33] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HMS24046_S23\tSM:mysnps_HMS24046_S23' -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 593288 sequences (160000360 bp)...
[M::process] read 593558 sequences (160000118 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 290696, 6, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (235, 410, 549)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1177)
[M::mem_pestat] mean and std.dev: (357.00, 166.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1491)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (247, 310, 389)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 673)
[M::mem_pestat] mean and std.dev: (320.58, 111.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 815)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 593288 reads in 49.667 CPU sec, 3.101 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 290813, 12, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (246, 308, 387)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 669)
[M::mem_pestat] mean and std.dev: (319.18, 111.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 810)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1188, 1335, 2147)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4065)
[M::mem_pestat] mean and std.dev: (1270.92, 681.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5024)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (511, 819, 1070)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2188)
[M::mem_pestat] mean and std.dev: (613.22, 331.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2747)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 595752 sequences (160000212 bp)...
[M::mem_process_seqs] Processed 593558 reads in 51.836 CPU sec, 3.214 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[23:50:27] This is snippy 4.6.0
[23:50:27] Written by Torsten Seemann
[23:50:27] Obtained from https://github.com/tseemann/snippy
[23:50:27] Detected operating system: linux
[23:50:27] Enabling bundled linux tools.
[23:50:27] Found bwa - /usr/local/bin/bwa
[23:50:27] Found bcftools - /usr/local/bin/bcftools
[23:50:27] Found samtools - /usr/local/bin/samtools
[23:50:27] Found java - /usr/local/bin/java
[23:50:27] Found snpEff - /usr/local/bin/snpEff
[23:50:27] Found samclip - /usr/local/bin/samclip
[23:50:27] Found seqtk - /usr/local/bin/seqtk
[23:50:27] Found parallel - /usr/local/bin/parallel
[23:50:27] Found freebayes - /usr/local/bin/freebayes
[23:50:27] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:50:27] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:50:27] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:50:27] Found vcfuniq - /usr/local/bin/vcfuniq
[23:50:27] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:50:27] Found gzip - /usr/bin/gzip
[23:50:27] Found vt - /usr/local/bin/vt
[23:50:27] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:50:27] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:50:27] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:50:27] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:50:27] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:50:27] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:50:27] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:50:27] Using reference: /data/Analysis/refe.gbk
[23:50:27] Treating reference as 'genbank' format.
[23:50:27] Will use 16 CPU cores.
[23:50:27] Using read file: /data/Analysis/HMS24046_S23_R1.fastq.gz
[23:50:27] Using read file: /data/Analysis/HMS24046_S23_R2.fastq.gz
[23:50:27] Creating folder: mysnps_HMS24046_S23
[23:50:27] Changing working directory: mysnps_HMS24046_S23
[23:50:27] Creating reference folder: reference
[23:50:27] Extracting FASTA and GFF from reference.
[23:50:29] Wrote 1 sequences to ref.fa
[23:50:29] Wrote 4429 features to ref.gff
[23:50:29] Creating reference/snpeff.config
[23:50:29] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:50:29] Using BAM RG (Read Group) ID: mysnps_HMS24046_S23
[23:50:29] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:50:29] Running: bwa index reference/ref.fa 2>> snps.log
[23:50:30] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:50:30] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:50:30] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:50:30] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:50:30] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:50:33] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HMS24046_S23\tSM:mysnps_HMS24046_S23' -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 593288 sequences (160000360 bp)...
[M::process] read 593558 sequences (160000118 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 290696, 6, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (235, 410, 549)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1177)
[M::mem_pestat] mean and std.dev: (357.00, 166.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1491)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (247, 310, 389)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 673)
[M::mem_pestat] mean and std.dev: (320.58, 111.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 815)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 593288 reads in 49.667 CPU sec, 3.101 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 290813, 12, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (246, 308, 387)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 669)
[M::mem_pestat] mean and std.dev: (319.18, 111.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 810)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1188, 1335, 2147)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4065)
[M::mem_pestat] mean and std.dev: (1270.92, 681.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5024)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (511, 819, 1070)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2188)
[M::mem_pestat] mean and std.dev: (613.22, 331.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2747)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 595752 sequences (160000212 bp)...
[M::mem_process_seqs] Processed 593558 reads in 51.836 CPU sec, 3.214 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::process] read 35140 sequences (9664990 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 291753, 9, 5)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (288, 347, 395)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (74, 609)
[M::mem_pestat] mean and std.dev: (333.00, 84.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 716)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (244, 307, 385)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 667)
[M::mem_pestat] mean and std.dev: (317.29, 110.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 808)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 595752 reads in 51.373 CPU sec, 3.257 real sec
[samclip] Processed 1200000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 17177, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (256, 321, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 700)
[M::mem_pestat] mean and std.dev: (334.50, 115.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 848)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 35140 reads in 3.503 CPU sec, 0.219 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HMS24046_S23\tSM:mysnps_HMS24046_S23 -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz[samclip] Total SAM records 1824229, removed 428700, allowed 109134, passed 1395529
[samclip] Header contained 4 lines
[samclip] Done.

[main] Real time: 12.945 sec; CPU: 158.643 sec
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:50:27] This is snippy 4.6.0
[23:50:27] Written by Torsten Seemann
[23:50:27] Obtained from https://github.com/tseemann/snippy
[23:50:27] Detected operating system: linux
[23:50:27] Enabling bundled linux tools.
[23:50:27] Found bwa - /usr/local/bin/bwa
[23:50:27] Found bcftools - /usr/local/bin/bcftools
[23:50:27] Found samtools - /usr/local/bin/samtools
[23:50:27] Found java - /usr/local/bin/java
[23:50:27] Found snpEff - /usr/local/bin/snpEff
[23:50:27] Found samclip - /usr/local/bin/samclip
[23:50:27] Found seqtk - /usr/local/bin/seqtk
[23:50:27] Found parallel - /usr/local/bin/parallel
[23:50:27] Found freebayes - /usr/local/bin/freebayes
[23:50:27] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:50:27] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:50:27] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:50:27] Found vcfuniq - /usr/local/bin/vcfuniq
[23:50:27] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:50:27] Found gzip - /usr/bin/gzip
[23:50:27] Found vt - /usr/local/bin/vt
[23:50:27] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:50:27] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:50:27] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:50:27] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:50:27] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:50:27] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:50:27] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:50:27] Using reference: /data/Analysis/refe.gbk
[23:50:27] Treating reference as 'genbank' format.
[23:50:27] Will use 16 CPU cores.
[23:50:27] Using read file: /data/Analysis/HMS24046_S23_R1.fastq.gz
[23:50:27] Using read file: /data/Analysis/HMS24046_S23_R2.fastq.gz
[23:50:27] Creating folder: mysnps_HMS24046_S23
[23:50:27] Changing working directory: mysnps_HMS24046_S23
[23:50:27] Creating reference folder: reference
[23:50:27] Extracting FASTA and GFF from reference.
[23:50:29] Wrote 1 sequences to ref.fa
[23:50:29] Wrote 4429 features to ref.gff
[23:50:29] Creating reference/snpeff.config
[23:50:29] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:50:29] Using BAM RG (Read Group) ID: mysnps_HMS24046_S23
[23:50:29] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:50:29] Running: bwa index reference/ref.fa 2>> snps.log
[23:50:30] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:50:30] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:50:30] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:50:30] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:50:30] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:50:33] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HMS24046_S23\tSM:mysnps_HMS24046_S23' -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 593288 sequences (160000360 bp)...
[M::process] read 593558 sequences (160000118 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 290696, 6, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (235, 410, 549)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1177)
[M::mem_pestat] mean and std.dev: (357.00, 166.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1491)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (247, 310, 389)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 673)
[M::mem_pestat] mean and std.dev: (320.58, 111.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 815)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 593288 reads in 49.667 CPU sec, 3.101 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 290813, 12, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (246, 308, 387)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 669)
[M::mem_pestat] mean and std.dev: (319.18, 111.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 810)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1188, 1335, 2147)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4065)
[M::mem_pestat] mean and std.dev: (1270.92, 681.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5024)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (511, 819, 1070)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2188)
[M::mem_pestat] mean and std.dev: (613.22, 331.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2747)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 595752 sequences (160000212 bp)...
[M::mem_process_seqs] Processed 593558 reads in 51.836 CPU sec, 3.214 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::process] read 35140 sequences (9664990 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 291753, 9, 5)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (288, 347, 395)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (74, 609)
[M::mem_pestat] mean and std.dev: (333.00, 84.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 716)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (244, 307, 385)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 667)
[M::mem_pestat] mean and std.dev: (317.29, 110.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 808)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 595752 reads in 51.373 CPU sec, 3.257 real sec
[samclip] Processed 1200000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 17177, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (256, 321, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 700)
[M::mem_pestat] mean and std.dev: (334.50, 115.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 848)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 35140 reads in 3.503 CPU sec, 0.219 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HMS24046_S23\tSM:mysnps_HMS24046_S23 -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz[samclip] Total SAM records 1824229, removed 428700, allowed 109134, passed 1395529
[samclip] Header contained 4 lines
[samclip] Done.

[main] Real time: 12.945 sec; CPU: 158.643 sec
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:50:50] Running: samtools index snps.bam 2>> snps.log
[23:50:51] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:50:51] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:50:54] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 12
          no. right trimmed                     : 83
          no. left and right trimmed            : 5
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 100

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 100
       total no. variants observed              : 1026
       total no. reference observed             : 0

Time elapsed: 0.02s

[23:50:54] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:50:27] This is snippy 4.6.0
[23:50:27] Written by Torsten Seemann
[23:50:27] Obtained from https://github.com/tseemann/snippy
[23:50:27] Detected operating system: linux
[23:50:27] Enabling bundled linux tools.
[23:50:27] Found bwa - /usr/local/bin/bwa
[23:50:27] Found bcftools - /usr/local/bin/bcftools
[23:50:27] Found samtools - /usr/local/bin/samtools
[23:50:27] Found java - /usr/local/bin/java
[23:50:27] Found snpEff - /usr/local/bin/snpEff
[23:50:27] Found samclip - /usr/local/bin/samclip
[23:50:27] Found seqtk - /usr/local/bin/seqtk
[23:50:27] Found parallel - /usr/local/bin/parallel
[23:50:27] Found freebayes - /usr/local/bin/freebayes
[23:50:27] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:50:27] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:50:27] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:50:27] Found vcfuniq - /usr/local/bin/vcfuniq
[23:50:27] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:50:27] Found gzip - /usr/bin/gzip
[23:50:27] Found vt - /usr/local/bin/vt
[23:50:27] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:50:27] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:50:27] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:50:27] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:50:27] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:50:27] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:50:27] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:50:27] Using reference: /data/Analysis/refe.gbk
[23:50:27] Treating reference as 'genbank' format.
[23:50:27] Will use 16 CPU cores.
[23:50:27] Using read file: /data/Analysis/HMS24046_S23_R1.fastq.gz
[23:50:27] Using read file: /data/Analysis/HMS24046_S23_R2.fastq.gz
[23:50:27] Creating folder: mysnps_HMS24046_S23
[23:50:27] Changing working directory: mysnps_HMS24046_S23
[23:50:27] Creating reference folder: reference
[23:50:27] Extracting FASTA and GFF from reference.
[23:50:29] Wrote 1 sequences to ref.fa
[23:50:29] Wrote 4429 features to ref.gff
[23:50:29] Creating reference/snpeff.config
[23:50:29] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:50:29] Using BAM RG (Read Group) ID: mysnps_HMS24046_S23
[23:50:29] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:50:29] Running: bwa index reference/ref.fa 2>> snps.log
[23:50:30] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:50:30] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:50:30] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:50:30] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:50:30] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:50:33] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HMS24046_S23\tSM:mysnps_HMS24046_S23' -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 593288 sequences (160000360 bp)...
[M::process] read 593558 sequences (160000118 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 290696, 6, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (235, 410, 549)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1177)
[M::mem_pestat] mean and std.dev: (357.00, 166.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1491)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (247, 310, 389)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 673)
[M::mem_pestat] mean and std.dev: (320.58, 111.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 815)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 593288 reads in 49.667 CPU sec, 3.101 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 290813, 12, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (246, 308, 387)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 669)
[M::mem_pestat] mean and std.dev: (319.18, 111.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 810)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1188, 1335, 2147)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4065)
[M::mem_pestat] mean and std.dev: (1270.92, 681.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5024)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (511, 819, 1070)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2188)
[M::mem_pestat] mean and std.dev: (613.22, 331.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2747)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 595752 sequences (160000212 bp)...
[M::mem_process_seqs] Processed 593558 reads in 51.836 CPU sec, 3.214 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::process] read 35140 sequences (9664990 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 291753, 9, 5)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (288, 347, 395)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (74, 609)
[M::mem_pestat] mean and std.dev: (333.00, 84.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 716)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (244, 307, 385)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 667)
[M::mem_pestat] mean and std.dev: (317.29, 110.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 808)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 595752 reads in 51.373 CPU sec, 3.257 real sec
[samclip] Processed 1200000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 17177, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (256, 321, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 700)
[M::mem_pestat] mean and std.dev: (334.50, 115.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 848)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 35140 reads in 3.503 CPU sec, 0.219 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HMS24046_S23\tSM:mysnps_HMS24046_S23 -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz[samclip] Total SAM records 1824229, removed 428700, allowed 109134, passed 1395529
[samclip] Header contained 4 lines
[samclip] Done.

[main] Real time: 12.945 sec; CPU: 158.643 sec
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:50:50] Running: samtools index snps.bam 2>> snps.log
[23:50:51] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:50:51] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:50:54] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 12
          no. right trimmed                     : 83
          no. left and right trimmed            : 5
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 100

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 100
       total no. variants observed              : 1026
       total no. reference observed             : 0

Time elapsed: 0.02s

[23:50:54] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:50:55] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:50:57] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:50:57] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:50:57] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:50:57] Running: bcftools consensus --sample mysnps_HMS24046_S23 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:50:57] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:50:57] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:50:57] Running: bcftools consensus --sample mysnps_HMS24046_S23 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:50:57] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:50:57] Running: samtools view -h -q 60 snps.bam | samtools sort -l 0 -T /tmp --threads 7 -m 1000M > /tmp/snippy.1.Q60.bam 2>> snps.log
[23:50:59] Running: samtools index /tmp/snippy.1.Q60.bam 2>> snps.log
[23:51:00] Running: /usr/local/bin/snippy-vcf_report --cpus 16 --bam /tmp/snippy.1.Q60.bam --ref reference/ref.fa --vcf snps.vcf > snps.report.txt 2>> snps.log
[23:50:27] This is snippy 4.6.0
[23:50:27] Written by Torsten Seemann
[23:50:27] Obtained from https://github.com/tseemann/snippy
[23:50:27] Detected operating system: linux
[23:50:27] Enabling bundled linux tools.
[23:50:27] Found bwa - /usr/local/bin/bwa
[23:50:27] Found bcftools - /usr/local/bin/bcftools
[23:50:27] Found samtools - /usr/local/bin/samtools
[23:50:27] Found java - /usr/local/bin/java
[23:50:27] Found snpEff - /usr/local/bin/snpEff
[23:50:27] Found samclip - /usr/local/bin/samclip
[23:50:27] Found seqtk - /usr/local/bin/seqtk
[23:50:27] Found parallel - /usr/local/bin/parallel
[23:50:27] Found freebayes - /usr/local/bin/freebayes
[23:50:27] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:50:27] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:50:27] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:50:27] Found vcfuniq - /usr/local/bin/vcfuniq
[23:50:27] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:50:27] Found gzip - /usr/bin/gzip
[23:50:27] Found vt - /usr/local/bin/vt
[23:50:27] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:50:27] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:50:27] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:50:27] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:50:27] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:50:27] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:50:27] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:50:27] Using reference: /data/Analysis/refe.gbk
[23:50:27] Treating reference as 'genbank' format.
[23:50:27] Will use 16 CPU cores.
[23:50:27] Using read file: /data/Analysis/HMS24046_S23_R1.fastq.gz
[23:50:27] Using read file: /data/Analysis/HMS24046_S23_R2.fastq.gz
[23:50:27] Creating folder: mysnps_HMS24046_S23
[23:50:27] Changing working directory: mysnps_HMS24046_S23
[23:50:27] Creating reference folder: reference
[23:50:27] Extracting FASTA and GFF from reference.
[23:50:29] Wrote 1 sequences to ref.fa
[23:50:29] Wrote 4429 features to ref.gff
[23:50:29] Creating reference/snpeff.config
[23:50:29] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:50:29] Using BAM RG (Read Group) ID: mysnps_HMS24046_S23
[23:50:29] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:50:29] Running: bwa index reference/ref.fa 2>> snps.log
[23:50:30] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:50:30] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:50:30] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:50:30] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:50:30] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:50:33] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HMS24046_S23\tSM:mysnps_HMS24046_S23' -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 593288 sequences (160000360 bp)...
[M::process] read 593558 sequences (160000118 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 290696, 6, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (235, 410, 549)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1177)
[M::mem_pestat] mean and std.dev: (357.00, 166.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1491)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (247, 310, 389)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 673)
[M::mem_pestat] mean and std.dev: (320.58, 111.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 815)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 593288 reads in 49.667 CPU sec, 3.101 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 290813, 12, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (246, 308, 387)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 669)
[M::mem_pestat] mean and std.dev: (319.18, 111.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 810)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1188, 1335, 2147)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4065)
[M::mem_pestat] mean and std.dev: (1270.92, 681.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5024)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (511, 819, 1070)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2188)
[M::mem_pestat] mean and std.dev: (613.22, 331.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2747)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 595752 sequences (160000212 bp)...
[M::mem_process_seqs] Processed 593558 reads in 51.836 CPU sec, 3.214 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::process] read 35140 sequences (9664990 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 291753, 9, 5)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (288, 347, 395)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (74, 609)
[M::mem_pestat] mean and std.dev: (333.00, 84.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 716)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (244, 307, 385)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 667)
[M::mem_pestat] mean and std.dev: (317.29, 110.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 808)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 595752 reads in 51.373 CPU sec, 3.257 real sec
[samclip] Processed 1200000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 17177, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (256, 321, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 700)
[M::mem_pestat] mean and std.dev: (334.50, 115.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 848)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 35140 reads in 3.503 CPU sec, 0.219 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HMS24046_S23\tSM:mysnps_HMS24046_S23 -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz[samclip] Total SAM records 1824229, removed 428700, allowed 109134, passed 1395529
[samclip] Header contained 4 lines
[samclip] Done.

[main] Real time: 12.945 sec; CPU: 158.643 sec
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:50:50] Running: samtools index snps.bam 2>> snps.log
[23:50:51] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:50:51] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:50:54] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 12
          no. right trimmed                     : 83
          no. left and right trimmed            : 5
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 100

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 100
       total no. variants observed              : 1026
       total no. reference observed             : 0

Time elapsed: 0.02s

[23:50:54] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:50:55] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:50:57] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:50:57] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:50:57] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:50:57] Running: bcftools consensus --sample mysnps_HMS24046_S23 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:50:57] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:50:57] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:50:57] Running: bcftools consensus --sample mysnps_HMS24046_S23 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:50:57] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:50:57] Running: samtools view -h -q 60 snps.bam | samtools sort -l 0 -T /tmp --threads 7 -m 1000M > /tmp/snippy.1.Q60.bam 2>> snps.log
[23:50:59] Running: samtools index /tmp/snippy.1.Q60.bam 2>> snps.log
[23:51:00] Running: /usr/local/bin/snippy-vcf_report --cpus 16 --bam /tmp/snippy.1.Q60.bam --ref reference/ref.fa --vcf snps.vcf > snps.report.txt 2>> snps.log
[23:51:05] Running: rm -f /tmp/snippy.1.Q60.bam /tmp/snippy.1.Q60.bam.bai 2>> snps.log
[23:51:06] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:51:08] Marked 1572 heterozygous sites with 'n'
[23:51:08] Creating extra output files: BED GFF CSV TXT HTML
[23:51:08] Identified 1026 variants.
[23:51:08] Result folder: mysnps_HMS24046_S23
[23:51:08] Result files:
[23:51:08] * mysnps_HMS24046_S23/snps.aligned.fa
[23:51:08] * mysnps_HMS24046_S23/snps.bam
[23:51:08] * mysnps_HMS24046_S23/snps.bam.bai
[23:51:08] * mysnps_HMS24046_S23/snps.bed
[23:51:08] * mysnps_HMS24046_S23/snps.consensus.fa
[23:51:08] * mysnps_HMS24046_S23/snps.consensus.subs.fa
[23:51:08] * mysnps_HMS24046_S23/snps.csv
[23:51:08] * mysnps_HMS24046_S23/snps.filt.vcf
[23:51:08] * mysnps_HMS24046_S23/snps.gff
[23:51:08] * mysnps_HMS24046_S23/snps.html
[23:51:08] * mysnps_HMS24046_S23/snps.log
[23:51:08] * mysnps_HMS24046_S23/snps.raw.vcf
[23:51:08] * mysnps_HMS24046_S23/snps.report.txt
[23:51:08] * mysnps_HMS24046_S23/snps.subs.vcf
[23:51:08] * mysnps_HMS24046_S23/snps.tab
[23:51:08] * mysnps_HMS24046_S23/snps.txt
[23:51:08] * mysnps_HMS24046_S23/snps.vcf
[23:51:08] * mysnps_HMS24046_S23/snps.vcf.gz
[23:51:08] * mysnps_HMS24046_S23/snps.vcf.gz.csi
[23:51:08] Walltime used: 41 seconds
[23:51:08] Found a bug? Post it at https://github.com/tseemann/snippy/issues
[23:51:08] Done.
snippy_container

<INFO>	[2025-06-13 01:51:13]	Starting Snippy analysis for sample HMS24051_S27.
<INFO>	[2025-06-13 01:51:13]	The inputs for the analysis are HMS24051_S27_R1.fastq.gz and HMS24051_S27_R2.fastq.gz.
<INFO>	[2025-06-13 01:51:13]	Results will be stored in mysnips_HMS24051_S27 folder, located in /home/cgerediaga/Analysis.
8aefc4fec834e6373f9339ec75e1c61bd800fdf8bdb2aa80053e48e3c674ca66
[23:51:13] This is snippy 4.6.0
[23:51:13] Written by Torsten Seemann
[23:51:13] Obtained from https://github.com/tseemann/snippy
[23:51:13] Detected operating system: linux
[23:51:13] Enabling bundled linux tools.
[23:51:13] Found bwa - /usr/local/bin/bwa
[23:51:13] Found bcftools - /usr/local/bin/bcftools
[23:51:13] Found samtools - /usr/local/bin/samtools
[23:51:13] Found java - /usr/local/bin/java
[23:51:13] Found snpEff - /usr/local/bin/snpEff
[23:51:13] Found samclip - /usr/local/bin/samclip
[23:51:13] Found seqtk - /usr/local/bin/seqtk
[23:51:13] Found parallel - /usr/local/bin/parallel
[23:51:13] Found freebayes - /usr/local/bin/freebayes
[23:51:13] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:51:13] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:51:13] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:51:13] Found vcfuniq - /usr/local/bin/vcfuniq
[23:51:13] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:51:13] Found gzip - /usr/bin/gzip
[23:51:13] Found vt - /usr/local/bin/vt
[23:51:14] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:51:14] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:51:14] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:51:14] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:51:14] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:51:14] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:51:14] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:51:14] Using reference: /data/Analysis/refe.gbk
[23:51:14] Treating reference as 'genbank' format.
[23:51:14] Will use 16 CPU cores.
[23:51:14] Using read file: /data/Analysis/HMS24051_S27_R1.fastq.gz
[23:51:14] Using read file: /data/Analysis/HMS24051_S27_R2.fastq.gz
[23:51:14] Creating folder: mysnps_HMS24051_S27
[23:51:14] Changing working directory: mysnps_HMS24051_S27
[23:51:14] Creating reference folder: reference
[23:51:14] Extracting FASTA and GFF from reference.
[23:51:13] This is snippy 4.6.0
[23:51:13] Written by Torsten Seemann
[23:51:13] Obtained from https://github.com/tseemann/snippy
[23:51:13] Detected operating system: linux
[23:51:13] Enabling bundled linux tools.
[23:51:13] Found bwa - /usr/local/bin/bwa
[23:51:13] Found bcftools - /usr/local/bin/bcftools
[23:51:13] Found samtools - /usr/local/bin/samtools
[23:51:13] Found java - /usr/local/bin/java
[23:51:13] Found snpEff - /usr/local/bin/snpEff
[23:51:13] Found samclip - /usr/local/bin/samclip
[23:51:13] Found seqtk - /usr/local/bin/seqtk
[23:51:13] Found parallel - /usr/local/bin/parallel
[23:51:13] Found freebayes - /usr/local/bin/freebayes
[23:51:13] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:51:13] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:51:13] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:51:13] Found vcfuniq - /usr/local/bin/vcfuniq
[23:51:13] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:51:13] Found gzip - /usr/bin/gzip
[23:51:13] Found vt - /usr/local/bin/vt
[23:51:14] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:51:14] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:51:14] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:51:14] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:51:14] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:51:14] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:51:14] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:51:14] Using reference: /data/Analysis/refe.gbk
[23:51:14] Treating reference as 'genbank' format.
[23:51:14] Will use 16 CPU cores.
[23:51:14] Using read file: /data/Analysis/HMS24051_S27_R1.fastq.gz
[23:51:14] Using read file: /data/Analysis/HMS24051_S27_R2.fastq.gz
[23:51:14] Creating folder: mysnps_HMS24051_S27
[23:51:14] Changing working directory: mysnps_HMS24051_S27
[23:51:14] Creating reference folder: reference
[23:51:14] Extracting FASTA and GFF from reference.
[23:51:15] Wrote 1 sequences to ref.fa
[23:51:15] Wrote 4429 features to ref.gff
[23:51:15] Creating reference/snpeff.config
[23:51:15] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:51:15] Using BAM RG (Read Group) ID: mysnps_HMS24051_S27
[23:51:15] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:51:15] Running: bwa index reference/ref.fa 2>> snps.log
[23:51:16] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:51:16] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:51:16] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:51:16] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:51:16] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:51:20] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HMS24051_S27\tSM:mysnps_HMS24051_S27' -t 16 reference/ref.fa /data/Analysis/HMS24051_S27_R1.fastq.gz /data/Analysis/HMS24051_S27_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 597786 sequences (160000212 bp)...
[23:51:13] This is snippy 4.6.0
[23:51:13] Written by Torsten Seemann
[23:51:13] Obtained from https://github.com/tseemann/snippy
[23:51:13] Detected operating system: linux
[23:51:13] Enabling bundled linux tools.
[23:51:13] Found bwa - /usr/local/bin/bwa
[23:51:13] Found bcftools - /usr/local/bin/bcftools
[23:51:13] Found samtools - /usr/local/bin/samtools
[23:51:13] Found java - /usr/local/bin/java
[23:51:13] Found snpEff - /usr/local/bin/snpEff
[23:51:13] Found samclip - /usr/local/bin/samclip
[23:51:13] Found seqtk - /usr/local/bin/seqtk
[23:51:13] Found parallel - /usr/local/bin/parallel
[23:51:13] Found freebayes - /usr/local/bin/freebayes
[23:51:13] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:51:13] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:51:13] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:51:13] Found vcfuniq - /usr/local/bin/vcfuniq
[23:51:13] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:51:13] Found gzip - /usr/bin/gzip
[23:51:13] Found vt - /usr/local/bin/vt
[23:51:14] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:51:14] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:51:14] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:51:14] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:51:14] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:51:14] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:51:14] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:51:14] Using reference: /data/Analysis/refe.gbk
[23:51:14] Treating reference as 'genbank' format.
[23:51:14] Will use 16 CPU cores.
[23:51:14] Using read file: /data/Analysis/HMS24051_S27_R1.fastq.gz
[23:51:14] Using read file: /data/Analysis/HMS24051_S27_R2.fastq.gz
[23:51:14] Creating folder: mysnps_HMS24051_S27
[23:51:14] Changing working directory: mysnps_HMS24051_S27
[23:51:14] Creating reference folder: reference
[23:51:14] Extracting FASTA and GFF from reference.
[23:51:15] Wrote 1 sequences to ref.fa
[23:51:15] Wrote 4429 features to ref.gff
[23:51:15] Creating reference/snpeff.config
[23:51:15] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:51:15] Using BAM RG (Read Group) ID: mysnps_HMS24051_S27
[23:51:15] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:51:15] Running: bwa index reference/ref.fa 2>> snps.log
[23:51:16] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:51:16] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:51:16] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:51:16] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:51:16] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:51:20] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HMS24051_S27\tSM:mysnps_HMS24051_S27' -t 16 reference/ref.fa /data/Analysis/HMS24051_S27_R1.fastq.gz /data/Analysis/HMS24051_S27_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 597786 sequences (160000212 bp)...
[M::process] read 598070 sequences (160000143 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 292017, 9, 12)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (239, 296, 374)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 644)
[M::mem_pestat] mean and std.dev: (310.59, 104.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 779)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (279, 441, 1226)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3120)
[M::mem_pestat] mean and std.dev: (552.18, 418.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4067)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 597786 reads in 54.421 CPU sec, 3.401 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::process] read 235474 sequences (63152831 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 291898, 12, 10)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (291, 340, 515)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 963)
[M::mem_pestat] mean and std.dev: (393.10, 200.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1197)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 295, 372)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (309.11, 103.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 774)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (2044, 2346, 5595)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12697)
[M::mem_pestat] mean and std.dev: (2868.33, 1647.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16248)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (242, 507, 555)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1181)
[M::mem_pestat] mean and std.dev: (389.56, 157.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1494)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[23:51:13] This is snippy 4.6.0
[23:51:13] Written by Torsten Seemann
[23:51:13] Obtained from https://github.com/tseemann/snippy
[23:51:13] Detected operating system: linux
[23:51:13] Enabling bundled linux tools.
[23:51:13] Found bwa - /usr/local/bin/bwa
[23:51:13] Found bcftools - /usr/local/bin/bcftools
[23:51:13] Found samtools - /usr/local/bin/samtools
[23:51:13] Found java - /usr/local/bin/java
[23:51:13] Found snpEff - /usr/local/bin/snpEff
[23:51:13] Found samclip - /usr/local/bin/samclip
[23:51:13] Found seqtk - /usr/local/bin/seqtk
[23:51:13] Found parallel - /usr/local/bin/parallel
[23:51:13] Found freebayes - /usr/local/bin/freebayes
[23:51:13] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:51:13] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:51:13] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:51:13] Found vcfuniq - /usr/local/bin/vcfuniq
[23:51:13] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:51:13] Found gzip - /usr/bin/gzip
[23:51:13] Found vt - /usr/local/bin/vt
[23:51:14] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:51:14] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:51:14] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:51:14] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:51:14] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:51:14] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:51:14] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:51:14] Using reference: /data/Analysis/refe.gbk
[23:51:14] Treating reference as 'genbank' format.
[23:51:14] Will use 16 CPU cores.
[23:51:14] Using read file: /data/Analysis/HMS24051_S27_R1.fastq.gz
[23:51:14] Using read file: /data/Analysis/HMS24051_S27_R2.fastq.gz
[23:51:14] Creating folder: mysnps_HMS24051_S27
[23:51:14] Changing working directory: mysnps_HMS24051_S27
[23:51:14] Creating reference folder: reference
[23:51:14] Extracting FASTA and GFF from reference.
[23:51:15] Wrote 1 sequences to ref.fa
[23:51:15] Wrote 4429 features to ref.gff
[23:51:15] Creating reference/snpeff.config
[23:51:15] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:51:15] Using BAM RG (Read Group) ID: mysnps_HMS24051_S27
[23:51:15] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:51:15] Running: bwa index reference/ref.fa 2>> snps.log
[23:51:16] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:51:16] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:51:16] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:51:16] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:51:16] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:51:20] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HMS24051_S27\tSM:mysnps_HMS24051_S27' -t 16 reference/ref.fa /data/Analysis/HMS24051_S27_R1.fastq.gz /data/Analysis/HMS24051_S27_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 597786 sequences (160000212 bp)...
[M::process] read 598070 sequences (160000143 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 292017, 9, 12)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (239, 296, 374)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 644)
[M::mem_pestat] mean and std.dev: (310.59, 104.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 779)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (279, 441, 1226)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3120)
[M::mem_pestat] mean and std.dev: (552.18, 418.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4067)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 597786 reads in 54.421 CPU sec, 3.401 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::process] read 235474 sequences (63152831 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 291898, 12, 10)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (291, 340, 515)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 963)
[M::mem_pestat] mean and std.dev: (393.10, 200.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1197)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 295, 372)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (309.11, 103.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 774)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (2044, 2346, 5595)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12697)
[M::mem_pestat] mean and std.dev: (2868.33, 1647.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16248)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (242, 507, 555)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1181)
[M::mem_pestat] mean and std.dev: (389.56, 157.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1494)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 598070 reads in 56.283 CPU sec, 3.551 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 114867, 5, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (239, 297, 376)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 650)
[M::mem_pestat] mean and std.dev: (312.20, 105.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 787)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1100000 records...
[M::mem_process_seqs] Processed 235474 reads in 23.878 CPU sec, 1.497 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HMS24051_S27\tSM:mysnps_HMS24051_S27 -t 16 reference/ref.fa /data/Analysis/HMS24051_S27_R1.fastq.gz /data/Analysis/HMS24051_S27_R2.fastq.gz
[main] Real time: 10.963 sec; CPU: 136.629 sec
[samclip] Total SAM records 1437126, removed 312079, allowed 105886, passed 1125047
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:51:34] Running: samtools index snps.bam 2>> snps.log
[23:51:34] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:51:34] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:51:13] This is snippy 4.6.0
[23:51:13] Written by Torsten Seemann
[23:51:13] Obtained from https://github.com/tseemann/snippy
[23:51:13] Detected operating system: linux
[23:51:13] Enabling bundled linux tools.
[23:51:13] Found bwa - /usr/local/bin/bwa
[23:51:13] Found bcftools - /usr/local/bin/bcftools
[23:51:13] Found samtools - /usr/local/bin/samtools
[23:51:13] Found java - /usr/local/bin/java
[23:51:13] Found snpEff - /usr/local/bin/snpEff
[23:51:13] Found samclip - /usr/local/bin/samclip
[23:51:13] Found seqtk - /usr/local/bin/seqtk
[23:51:13] Found parallel - /usr/local/bin/parallel
[23:51:13] Found freebayes - /usr/local/bin/freebayes
[23:51:13] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:51:13] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:51:13] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:51:13] Found vcfuniq - /usr/local/bin/vcfuniq
[23:51:13] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:51:13] Found gzip - /usr/bin/gzip
[23:51:13] Found vt - /usr/local/bin/vt
[23:51:14] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:51:14] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:51:14] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:51:14] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:51:14] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:51:14] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:51:14] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:51:14] Using reference: /data/Analysis/refe.gbk
[23:51:14] Treating reference as 'genbank' format.
[23:51:14] Will use 16 CPU cores.
[23:51:14] Using read file: /data/Analysis/HMS24051_S27_R1.fastq.gz
[23:51:14] Using read file: /data/Analysis/HMS24051_S27_R2.fastq.gz
[23:51:14] Creating folder: mysnps_HMS24051_S27
[23:51:14] Changing working directory: mysnps_HMS24051_S27
[23:51:14] Creating reference folder: reference
[23:51:14] Extracting FASTA and GFF from reference.
[23:51:15] Wrote 1 sequences to ref.fa
[23:51:15] Wrote 4429 features to ref.gff
[23:51:15] Creating reference/snpeff.config
[23:51:15] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:51:15] Using BAM RG (Read Group) ID: mysnps_HMS24051_S27
[23:51:15] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:51:15] Running: bwa index reference/ref.fa 2>> snps.log
[23:51:16] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:51:16] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:51:16] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:51:16] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:51:16] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:51:20] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HMS24051_S27\tSM:mysnps_HMS24051_S27' -t 16 reference/ref.fa /data/Analysis/HMS24051_S27_R1.fastq.gz /data/Analysis/HMS24051_S27_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 597786 sequences (160000212 bp)...
[M::process] read 598070 sequences (160000143 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 292017, 9, 12)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (239, 296, 374)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 644)
[M::mem_pestat] mean and std.dev: (310.59, 104.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 779)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (279, 441, 1226)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3120)
[M::mem_pestat] mean and std.dev: (552.18, 418.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4067)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 597786 reads in 54.421 CPU sec, 3.401 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::process] read 235474 sequences (63152831 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 291898, 12, 10)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (291, 340, 515)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 963)
[M::mem_pestat] mean and std.dev: (393.10, 200.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1197)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 295, 372)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (309.11, 103.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 774)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (2044, 2346, 5595)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12697)
[M::mem_pestat] mean and std.dev: (2868.33, 1647.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16248)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (242, 507, 555)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1181)
[M::mem_pestat] mean and std.dev: (389.56, 157.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1494)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 598070 reads in 56.283 CPU sec, 3.551 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 114867, 5, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (239, 297, 376)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 650)
[M::mem_pestat] mean and std.dev: (312.20, 105.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 787)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1100000 records...
[M::mem_process_seqs] Processed 235474 reads in 23.878 CPU sec, 1.497 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HMS24051_S27\tSM:mysnps_HMS24051_S27 -t 16 reference/ref.fa /data/Analysis/HMS24051_S27_R1.fastq.gz /data/Analysis/HMS24051_S27_R2.fastq.gz
[main] Real time: 10.963 sec; CPU: 136.629 sec
[samclip] Total SAM records 1437126, removed 312079, allowed 105886, passed 1125047
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:51:34] Running: samtools index snps.bam 2>> snps.log
[23:51:34] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:51:34] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:51:38] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 18
          no. right trimmed                     : 90
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 111

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 111
       total no. variants observed              : 924
       total no. reference observed             : 0

Time elapsed: 0.02s

[23:51:38] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:51:39] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:51:40] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:51:41] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:51:41] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:51:41] Running: bcftools consensus --sample mysnps_HMS24051_S27 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:51:41] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:51:41] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:51:41] Running: bcftools consensus --sample mysnps_HMS24051_S27 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:51:41] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:51:41] Running: samtools view -h -q 60 snps.bam | samtools sort -l 0 -T /tmp --threads 7 -m 1000M > /tmp/snippy.1.Q60.bam 2>> snps.log
[23:51:13] This is snippy 4.6.0
[23:51:13] Written by Torsten Seemann
[23:51:13] Obtained from https://github.com/tseemann/snippy
[23:51:13] Detected operating system: linux
[23:51:13] Enabling bundled linux tools.
[23:51:13] Found bwa - /usr/local/bin/bwa
[23:51:13] Found bcftools - /usr/local/bin/bcftools
[23:51:13] Found samtools - /usr/local/bin/samtools
[23:51:13] Found java - /usr/local/bin/java
[23:51:13] Found snpEff - /usr/local/bin/snpEff
[23:51:13] Found samclip - /usr/local/bin/samclip
[23:51:13] Found seqtk - /usr/local/bin/seqtk
[23:51:13] Found parallel - /usr/local/bin/parallel
[23:51:13] Found freebayes - /usr/local/bin/freebayes
[23:51:13] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:51:13] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:51:13] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:51:13] Found vcfuniq - /usr/local/bin/vcfuniq
[23:51:13] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:51:13] Found gzip - /usr/bin/gzip
[23:51:13] Found vt - /usr/local/bin/vt
[23:51:14] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:51:14] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:51:14] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:51:14] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:51:14] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:51:14] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:51:14] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:51:14] Using reference: /data/Analysis/refe.gbk
[23:51:14] Treating reference as 'genbank' format.
[23:51:14] Will use 16 CPU cores.
[23:51:14] Using read file: /data/Analysis/HMS24051_S27_R1.fastq.gz
[23:51:14] Using read file: /data/Analysis/HMS24051_S27_R2.fastq.gz
[23:51:14] Creating folder: mysnps_HMS24051_S27
[23:51:14] Changing working directory: mysnps_HMS24051_S27
[23:51:14] Creating reference folder: reference
[23:51:14] Extracting FASTA and GFF from reference.
[23:51:15] Wrote 1 sequences to ref.fa
[23:51:15] Wrote 4429 features to ref.gff
[23:51:15] Creating reference/snpeff.config
[23:51:15] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:51:15] Using BAM RG (Read Group) ID: mysnps_HMS24051_S27
[23:51:15] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:51:15] Running: bwa index reference/ref.fa 2>> snps.log
[23:51:16] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:51:16] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:51:16] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:51:16] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:51:16] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:51:20] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HMS24051_S27\tSM:mysnps_HMS24051_S27' -t 16 reference/ref.fa /data/Analysis/HMS24051_S27_R1.fastq.gz /data/Analysis/HMS24051_S27_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 597786 sequences (160000212 bp)...
[M::process] read 598070 sequences (160000143 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 292017, 9, 12)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (239, 296, 374)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 644)
[M::mem_pestat] mean and std.dev: (310.59, 104.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 779)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (279, 441, 1226)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3120)
[M::mem_pestat] mean and std.dev: (552.18, 418.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4067)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 597786 reads in 54.421 CPU sec, 3.401 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::process] read 235474 sequences (63152831 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 291898, 12, 10)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (291, 340, 515)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 963)
[M::mem_pestat] mean and std.dev: (393.10, 200.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1197)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 295, 372)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (309.11, 103.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 774)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (2044, 2346, 5595)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12697)
[M::mem_pestat] mean and std.dev: (2868.33, 1647.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16248)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (242, 507, 555)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1181)
[M::mem_pestat] mean and std.dev: (389.56, 157.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1494)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 598070 reads in 56.283 CPU sec, 3.551 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 114867, 5, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (239, 297, 376)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 650)
[M::mem_pestat] mean and std.dev: (312.20, 105.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 787)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1100000 records...
[M::mem_process_seqs] Processed 235474 reads in 23.878 CPU sec, 1.497 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HMS24051_S27\tSM:mysnps_HMS24051_S27 -t 16 reference/ref.fa /data/Analysis/HMS24051_S27_R1.fastq.gz /data/Analysis/HMS24051_S27_R2.fastq.gz
[main] Real time: 10.963 sec; CPU: 136.629 sec
[samclip] Total SAM records 1437126, removed 312079, allowed 105886, passed 1125047
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:51:34] Running: samtools index snps.bam 2>> snps.log
[23:51:34] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:51:34] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:51:38] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 18
          no. right trimmed                     : 90
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 111

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 111
       total no. variants observed              : 924
       total no. reference observed             : 0

Time elapsed: 0.02s

[23:51:38] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:51:39] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:51:40] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:51:41] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:51:41] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:51:41] Running: bcftools consensus --sample mysnps_HMS24051_S27 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:51:41] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:51:41] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:51:41] Running: bcftools consensus --sample mysnps_HMS24051_S27 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:51:41] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:51:41] Running: samtools view -h -q 60 snps.bam | samtools sort -l 0 -T /tmp --threads 7 -m 1000M > /tmp/snippy.1.Q60.bam 2>> snps.log
[23:51:42] Running: samtools index /tmp/snippy.1.Q60.bam 2>> snps.log
[23:51:43] Running: /usr/local/bin/snippy-vcf_report --cpus 16 --bam /tmp/snippy.1.Q60.bam --ref reference/ref.fa --vcf snps.vcf > snps.report.txt 2>> snps.log
snippy_container

<INFO>	[2025-06-13 01:51:53]	Starting Snippy analysis for sample HMS24052_S28.
<INFO>	[2025-06-13 01:51:53]	The inputs for the analysis are HMS24052_S28_R1.fastq.gz and HMS24052_S28_R2.fastq.gz.
<INFO>	[2025-06-13 01:51:53]	Results will be stored in mysnips_HMS24052_S28 folder, located in /home/cgerediaga/Analysis.
48bd98ba94a8c36889912c3f74356c27d614d8900fbaac528e6a96f243090a18
[23:51:53] This is snippy 4.6.0
[23:51:53] Written by Torsten Seemann
[23:51:53] Obtained from https://github.com/tseemann/snippy
[23:51:53] Detected operating system: linux
[23:51:53] Enabling bundled linux tools.
[23:51:53] Found bwa - /usr/local/bin/bwa
[23:51:53] Found bcftools - /usr/local/bin/bcftools
[23:51:53] Found samtools - /usr/local/bin/samtools
[23:51:53] Found java - /usr/local/bin/java
[23:51:53] Found snpEff - /usr/local/bin/snpEff
[23:51:53] Found samclip - /usr/local/bin/samclip
[23:51:53] Found seqtk - /usr/local/bin/seqtk
[23:51:53] Found parallel - /usr/local/bin/parallel
[23:51:53] Found freebayes - /usr/local/bin/freebayes
[23:51:53] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:51:53] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:51:53] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:51:53] Found vcfuniq - /usr/local/bin/vcfuniq
[23:51:53] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:51:53] Found gzip - /usr/bin/gzip
[23:51:53] Found vt - /usr/local/bin/vt
[23:51:53] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:51:53] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:51:53] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:51:53] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:51:53] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:51:53] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:51:53] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:51:53] Using reference: /data/Analysis/refe.gbk
[23:51:53] Treating reference as 'genbank' format.
[23:51:53] Will use 16 CPU cores.
[23:51:53] Using read file: /data/Analysis/HMS24052_S28_R1.fastq.gz
[23:51:53] Using read file: /data/Analysis/HMS24052_S28_R2.fastq.gz
[23:51:53] Creating folder: mysnps_HMS24052_S28
[23:51:53] Changing working directory: mysnps_HMS24052_S28
[23:51:53] Creating reference folder: reference
[23:51:53] Extracting FASTA and GFF from reference.
[23:51:53] This is snippy 4.6.0
[23:51:53] Written by Torsten Seemann
[23:51:53] Obtained from https://github.com/tseemann/snippy
[23:51:53] Detected operating system: linux
[23:51:53] Enabling bundled linux tools.
[23:51:53] Found bwa - /usr/local/bin/bwa
[23:51:53] Found bcftools - /usr/local/bin/bcftools
[23:51:53] Found samtools - /usr/local/bin/samtools
[23:51:53] Found java - /usr/local/bin/java
[23:51:53] Found snpEff - /usr/local/bin/snpEff
[23:51:53] Found samclip - /usr/local/bin/samclip
[23:51:53] Found seqtk - /usr/local/bin/seqtk
[23:51:53] Found parallel - /usr/local/bin/parallel
[23:51:53] Found freebayes - /usr/local/bin/freebayes
[23:51:53] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:51:53] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:51:53] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:51:53] Found vcfuniq - /usr/local/bin/vcfuniq
[23:51:53] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:51:53] Found gzip - /usr/bin/gzip
[23:51:53] Found vt - /usr/local/bin/vt
[23:51:53] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:51:53] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:51:53] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:51:53] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:51:53] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:51:53] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:51:53] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:51:53] Using reference: /data/Analysis/refe.gbk
[23:51:53] Treating reference as 'genbank' format.
[23:51:53] Will use 16 CPU cores.
[23:51:53] Using read file: /data/Analysis/HMS24052_S28_R1.fastq.gz
[23:51:53] Using read file: /data/Analysis/HMS24052_S28_R2.fastq.gz
[23:51:53] Creating folder: mysnps_HMS24052_S28
[23:51:53] Changing working directory: mysnps_HMS24052_S28
[23:51:53] Creating reference folder: reference
[23:51:53] Extracting FASTA and GFF from reference.
[23:51:55] Wrote 1 sequences to ref.fa
[23:51:55] Wrote 4429 features to ref.gff
[23:51:55] Creating reference/snpeff.config
[23:51:55] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:51:55] Using BAM RG (Read Group) ID: mysnps_HMS24052_S28
[23:51:55] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:51:55] Running: bwa index reference/ref.fa 2>> snps.log
[23:51:56] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:51:56] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:51:56] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:51:56] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:51:56] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:51:59] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HMS24052_S28\tSM:mysnps_HMS24052_S28' -t 16 reference/ref.fa /data/Analysis/HMS24052_S28_R1.fastq.gz /data/Analysis/HMS24052_S28_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 613970 sequences (160000327 bp)...
[23:51:53] This is snippy 4.6.0
[23:51:53] Written by Torsten Seemann
[23:51:53] Obtained from https://github.com/tseemann/snippy
[23:51:53] Detected operating system: linux
[23:51:53] Enabling bundled linux tools.
[23:51:53] Found bwa - /usr/local/bin/bwa
[23:51:53] Found bcftools - /usr/local/bin/bcftools
[23:51:53] Found samtools - /usr/local/bin/samtools
[23:51:53] Found java - /usr/local/bin/java
[23:51:53] Found snpEff - /usr/local/bin/snpEff
[23:51:53] Found samclip - /usr/local/bin/samclip
[23:51:53] Found seqtk - /usr/local/bin/seqtk
[23:51:53] Found parallel - /usr/local/bin/parallel
[23:51:53] Found freebayes - /usr/local/bin/freebayes
[23:51:53] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:51:53] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:51:53] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:51:53] Found vcfuniq - /usr/local/bin/vcfuniq
[23:51:53] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:51:53] Found gzip - /usr/bin/gzip
[23:51:53] Found vt - /usr/local/bin/vt
[23:51:53] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:51:53] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:51:53] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:51:53] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:51:53] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:51:53] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:51:53] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:51:53] Using reference: /data/Analysis/refe.gbk
[23:51:53] Treating reference as 'genbank' format.
[23:51:53] Will use 16 CPU cores.
[23:51:53] Using read file: /data/Analysis/HMS24052_S28_R1.fastq.gz
[23:51:53] Using read file: /data/Analysis/HMS24052_S28_R2.fastq.gz
[23:51:53] Creating folder: mysnps_HMS24052_S28
[23:51:53] Changing working directory: mysnps_HMS24052_S28
[23:51:53] Creating reference folder: reference
[23:51:53] Extracting FASTA and GFF from reference.
[23:51:55] Wrote 1 sequences to ref.fa
[23:51:55] Wrote 4429 features to ref.gff
[23:51:55] Creating reference/snpeff.config
[23:51:55] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:51:55] Using BAM RG (Read Group) ID: mysnps_HMS24052_S28
[23:51:55] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:51:55] Running: bwa index reference/ref.fa 2>> snps.log
[23:51:56] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:51:56] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:51:56] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:51:56] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:51:56] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:51:59] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HMS24052_S28\tSM:mysnps_HMS24052_S28' -t 16 reference/ref.fa /data/Analysis/HMS24052_S28_R1.fastq.gz /data/Analysis/HMS24052_S28_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 613970 sequences (160000327 bp)...
[M::process] read 615382 sequences (160000193 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 299720, 22, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (227, 286, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 626)
[M::mem_pestat] mean and std.dev: (297.04, 104.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 759)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1356, 2212, 2289)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4155)
[M::mem_pestat] mean and std.dev: (1770.57, 796.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5088)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (410, 1374, 1516)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3728)
[M::mem_pestat] mean and std.dev: (1131.18, 884.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4834)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 613970 reads in 49.111 CPU sec, 3.075 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 300381, 13, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (227, 285, 359)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 623)
[M::mem_pestat] mean and std.dev: (296.10, 104.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 755)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1333, 1377, 2329)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4321)
[M::mem_pestat] mean and std.dev: (1647.69, 642.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5317)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 615382 reads in 48.503 CPU sec, 3.024 real sec
[M::process] read 614488 sequences (160000150 bp)...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[23:51:53] This is snippy 4.6.0
[23:51:53] Written by Torsten Seemann
[23:51:53] Obtained from https://github.com/tseemann/snippy
[23:51:53] Detected operating system: linux
[23:51:53] Enabling bundled linux tools.
[23:51:53] Found bwa - /usr/local/bin/bwa
[23:51:53] Found bcftools - /usr/local/bin/bcftools
[23:51:53] Found samtools - /usr/local/bin/samtools
[23:51:53] Found java - /usr/local/bin/java
[23:51:53] Found snpEff - /usr/local/bin/snpEff
[23:51:53] Found samclip - /usr/local/bin/samclip
[23:51:53] Found seqtk - /usr/local/bin/seqtk
[23:51:53] Found parallel - /usr/local/bin/parallel
[23:51:53] Found freebayes - /usr/local/bin/freebayes
[23:51:53] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:51:53] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:51:53] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:51:53] Found vcfuniq - /usr/local/bin/vcfuniq
[23:51:53] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:51:53] Found gzip - /usr/bin/gzip
[23:51:53] Found vt - /usr/local/bin/vt
[23:51:53] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:51:53] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:51:53] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:51:53] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:51:53] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:51:53] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:51:53] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:51:53] Using reference: /data/Analysis/refe.gbk
[23:51:53] Treating reference as 'genbank' format.
[23:51:53] Will use 16 CPU cores.
[23:51:53] Using read file: /data/Analysis/HMS24052_S28_R1.fastq.gz
[23:51:53] Using read file: /data/Analysis/HMS24052_S28_R2.fastq.gz
[23:51:53] Creating folder: mysnps_HMS24052_S28
[23:51:53] Changing working directory: mysnps_HMS24052_S28
[23:51:53] Creating reference folder: reference
[23:51:53] Extracting FASTA and GFF from reference.
[23:51:55] Wrote 1 sequences to ref.fa
[23:51:55] Wrote 4429 features to ref.gff
[23:51:55] Creating reference/snpeff.config
[23:51:55] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:51:55] Using BAM RG (Read Group) ID: mysnps_HMS24052_S28
[23:51:55] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:51:55] Running: bwa index reference/ref.fa 2>> snps.log
[23:51:56] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:51:56] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:51:56] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:51:56] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:51:56] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:51:59] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HMS24052_S28\tSM:mysnps_HMS24052_S28' -t 16 reference/ref.fa /data/Analysis/HMS24052_S28_R1.fastq.gz /data/Analysis/HMS24052_S28_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 613970 sequences (160000327 bp)...
[M::process] read 615382 sequences (160000193 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 299720, 22, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (227, 286, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 626)
[M::mem_pestat] mean and std.dev: (297.04, 104.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 759)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1356, 2212, 2289)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4155)
[M::mem_pestat] mean and std.dev: (1770.57, 796.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5088)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (410, 1374, 1516)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3728)
[M::mem_pestat] mean and std.dev: (1131.18, 884.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4834)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 613970 reads in 49.111 CPU sec, 3.075 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 300381, 13, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (227, 285, 359)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 623)
[M::mem_pestat] mean and std.dev: (296.10, 104.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 755)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1333, 1377, 2329)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4321)
[M::mem_pestat] mean and std.dev: (1647.69, 642.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5317)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 615382 reads in 48.503 CPU sec, 3.024 real sec
[M::process] read 614488 sequences (160000150 bp)...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 299915, 20, 11)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (532, 1264, 1464)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3328)
[M::mem_pestat] mean and std.dev: (1152.21, 730.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4260)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 285, 359)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 625)
[M::mem_pestat] mean and std.dev: (296.16, 104.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 758)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (2064, 2192, 2279)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1634, 2709)
[M::mem_pestat] mean and std.dev: (2215.50, 112.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1419, 2924)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (393, 680, 1350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3264)
[M::mem_pestat] mean and std.dev: (784.91, 478.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4221)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 618126 sequences (160000338 bp)...
[M::mem_process_seqs] Processed 614488 reads in 51.498 CPU sec, 3.203 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[M::process] read 443764 sequences (115864325 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 301811, 15, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (225, 283, 355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 615)
[M::mem_pestat] mean and std.dev: (293.23, 102.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 745)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1351, 1438, 2210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3928)
[M::mem_pestat] mean and std.dev: (1604.93, 716.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4787)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 618126 reads in 49.061 CPU sec, 3.079 real sec
[samclip] Processed 1900000 records...
[samclip] Processed 2000000 records...
[samclip] Processed 2100000 records...
[23:51:53] This is snippy 4.6.0
[23:51:53] Written by Torsten Seemann
[23:51:53] Obtained from https://github.com/tseemann/snippy
[23:51:53] Detected operating system: linux
[23:51:53] Enabling bundled linux tools.
[23:51:53] Found bwa - /usr/local/bin/bwa
[23:51:53] Found bcftools - /usr/local/bin/bcftools
[23:51:53] Found samtools - /usr/local/bin/samtools
[23:51:53] Found java - /usr/local/bin/java
[23:51:53] Found snpEff - /usr/local/bin/snpEff
[23:51:53] Found samclip - /usr/local/bin/samclip
[23:51:53] Found seqtk - /usr/local/bin/seqtk
[23:51:53] Found parallel - /usr/local/bin/parallel
[23:51:53] Found freebayes - /usr/local/bin/freebayes
[23:51:53] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:51:53] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:51:53] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:51:53] Found vcfuniq - /usr/local/bin/vcfuniq
[23:51:53] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:51:53] Found gzip - /usr/bin/gzip
[23:51:53] Found vt - /usr/local/bin/vt
[23:51:53] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:51:53] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:51:53] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:51:53] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:51:53] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:51:53] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:51:53] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:51:53] Using reference: /data/Analysis/refe.gbk
[23:51:53] Treating reference as 'genbank' format.
[23:51:53] Will use 16 CPU cores.
[23:51:53] Using read file: /data/Analysis/HMS24052_S28_R1.fastq.gz
[23:51:53] Using read file: /data/Analysis/HMS24052_S28_R2.fastq.gz
[23:51:53] Creating folder: mysnps_HMS24052_S28
[23:51:53] Changing working directory: mysnps_HMS24052_S28
[23:51:53] Creating reference folder: reference
[23:51:53] Extracting FASTA and GFF from reference.
[23:51:55] Wrote 1 sequences to ref.fa
[23:51:55] Wrote 4429 features to ref.gff
[23:51:55] Creating reference/snpeff.config
[23:51:55] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:51:55] Using BAM RG (Read Group) ID: mysnps_HMS24052_S28
[23:51:55] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:51:55] Running: bwa index reference/ref.fa 2>> snps.log
[23:51:56] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:51:56] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:51:56] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:51:56] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:51:56] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:51:59] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HMS24052_S28\tSM:mysnps_HMS24052_S28' -t 16 reference/ref.fa /data/Analysis/HMS24052_S28_R1.fastq.gz /data/Analysis/HMS24052_S28_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 613970 sequences (160000327 bp)...
[M::process] read 615382 sequences (160000193 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 299720, 22, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (227, 286, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 626)
[M::mem_pestat] mean and std.dev: (297.04, 104.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 759)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1356, 2212, 2289)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4155)
[M::mem_pestat] mean and std.dev: (1770.57, 796.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5088)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (410, 1374, 1516)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3728)
[M::mem_pestat] mean and std.dev: (1131.18, 884.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4834)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 613970 reads in 49.111 CPU sec, 3.075 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 300381, 13, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (227, 285, 359)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 623)
[M::mem_pestat] mean and std.dev: (296.10, 104.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 755)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1333, 1377, 2329)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4321)
[M::mem_pestat] mean and std.dev: (1647.69, 642.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5317)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 615382 reads in 48.503 CPU sec, 3.024 real sec
[M::process] read 614488 sequences (160000150 bp)...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 299915, 20, 11)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (532, 1264, 1464)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3328)
[M::mem_pestat] mean and std.dev: (1152.21, 730.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4260)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 285, 359)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 625)
[M::mem_pestat] mean and std.dev: (296.16, 104.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 758)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (2064, 2192, 2279)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1634, 2709)
[M::mem_pestat] mean and std.dev: (2215.50, 112.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1419, 2924)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (393, 680, 1350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3264)
[M::mem_pestat] mean and std.dev: (784.91, 478.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4221)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 618126 sequences (160000338 bp)...
[M::mem_process_seqs] Processed 614488 reads in 51.498 CPU sec, 3.203 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[M::process] read 443764 sequences (115864325 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 301811, 15, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (225, 283, 355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 615)
[M::mem_pestat] mean and std.dev: (293.23, 102.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 745)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1351, 1438, 2210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3928)
[M::mem_pestat] mean and std.dev: (1604.93, 716.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4787)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 618126 reads in 49.061 CPU sec, 3.079 real sec
[samclip] Processed 1900000 records...
[samclip] Processed 2000000 records...
[samclip] Processed 2100000 records...
[samclip] Processed 2200000 records...
[samclip] Processed 2300000 records...
[samclip] Processed 2400000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 216692, 13, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 361)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 627)
[M::mem_pestat] mean and std.dev: (297.85, 104.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 760)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1318, 1404, 2349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4411)
[M::mem_pestat] mean and std.dev: (1483.58, 792.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5442)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (321, 1015, 1332)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3354)
[M::mem_pestat] mean and std.dev: (812.70, 485.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4365)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 443764 reads in 38.126 CPU sec, 2.428 real sec
[samclip] Processed 2500000 records...
[samclip] Processed 2600000 records...
[samclip] Processed 2700000 records...
[samclip] Processed 2800000 records...
[samclip] Processed 2900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HMS24052_S28\tSM:mysnps_HMS24052_S28 -t 16 reference/ref.fa /data/Analysis/HMS24052_S28_R1.fastq.gz /data/Analysis/HMS24052_S28_R2.fastq.gz
[main] Real time: 17.626 sec; CPU: 238.455 sec
[samclip] Total SAM records 2918405, removed 564335, allowed 156630, passed 2354070
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:51:53] This is snippy 4.6.0
[23:51:53] Written by Torsten Seemann
[23:51:53] Obtained from https://github.com/tseemann/snippy
[23:51:53] Detected operating system: linux
[23:51:53] Enabling bundled linux tools.
[23:51:53] Found bwa - /usr/local/bin/bwa
[23:51:53] Found bcftools - /usr/local/bin/bcftools
[23:51:53] Found samtools - /usr/local/bin/samtools
[23:51:53] Found java - /usr/local/bin/java
[23:51:53] Found snpEff - /usr/local/bin/snpEff
[23:51:53] Found samclip - /usr/local/bin/samclip
[23:51:53] Found seqtk - /usr/local/bin/seqtk
[23:51:53] Found parallel - /usr/local/bin/parallel
[23:51:53] Found freebayes - /usr/local/bin/freebayes
[23:51:53] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:51:53] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:51:53] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:51:53] Found vcfuniq - /usr/local/bin/vcfuniq
[23:51:53] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:51:53] Found gzip - /usr/bin/gzip
[23:51:53] Found vt - /usr/local/bin/vt
[23:51:53] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:51:53] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:51:53] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:51:53] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:51:53] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:51:53] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:51:53] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:51:53] Using reference: /data/Analysis/refe.gbk
[23:51:53] Treating reference as 'genbank' format.
[23:51:53] Will use 16 CPU cores.
[23:51:53] Using read file: /data/Analysis/HMS24052_S28_R1.fastq.gz
[23:51:53] Using read file: /data/Analysis/HMS24052_S28_R2.fastq.gz
[23:51:53] Creating folder: mysnps_HMS24052_S28
[23:51:53] Changing working directory: mysnps_HMS24052_S28
[23:51:53] Creating reference folder: reference
[23:51:53] Extracting FASTA and GFF from reference.
[23:51:55] Wrote 1 sequences to ref.fa
[23:51:55] Wrote 4429 features to ref.gff
[23:51:55] Creating reference/snpeff.config
[23:51:55] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:51:55] Using BAM RG (Read Group) ID: mysnps_HMS24052_S28
[23:51:55] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:51:55] Running: bwa index reference/ref.fa 2>> snps.log
[23:51:56] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:51:56] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:51:56] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:51:56] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:51:56] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:51:59] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HMS24052_S28\tSM:mysnps_HMS24052_S28' -t 16 reference/ref.fa /data/Analysis/HMS24052_S28_R1.fastq.gz /data/Analysis/HMS24052_S28_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 613970 sequences (160000327 bp)...
[M::process] read 615382 sequences (160000193 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 299720, 22, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (227, 286, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 626)
[M::mem_pestat] mean and std.dev: (297.04, 104.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 759)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1356, 2212, 2289)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4155)
[M::mem_pestat] mean and std.dev: (1770.57, 796.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5088)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (410, 1374, 1516)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3728)
[M::mem_pestat] mean and std.dev: (1131.18, 884.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4834)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 613970 reads in 49.111 CPU sec, 3.075 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 300381, 13, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (227, 285, 359)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 623)
[M::mem_pestat] mean and std.dev: (296.10, 104.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 755)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1333, 1377, 2329)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4321)
[M::mem_pestat] mean and std.dev: (1647.69, 642.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5317)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 615382 reads in 48.503 CPU sec, 3.024 real sec
[M::process] read 614488 sequences (160000150 bp)...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 299915, 20, 11)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (532, 1264, 1464)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3328)
[M::mem_pestat] mean and std.dev: (1152.21, 730.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4260)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 285, 359)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 625)
[M::mem_pestat] mean and std.dev: (296.16, 104.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 758)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (2064, 2192, 2279)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1634, 2709)
[M::mem_pestat] mean and std.dev: (2215.50, 112.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1419, 2924)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (393, 680, 1350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3264)
[M::mem_pestat] mean and std.dev: (784.91, 478.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4221)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 618126 sequences (160000338 bp)...
[M::mem_process_seqs] Processed 614488 reads in 51.498 CPU sec, 3.203 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[M::process] read 443764 sequences (115864325 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 301811, 15, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (225, 283, 355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 615)
[M::mem_pestat] mean and std.dev: (293.23, 102.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 745)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1351, 1438, 2210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3928)
[M::mem_pestat] mean and std.dev: (1604.93, 716.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4787)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 618126 reads in 49.061 CPU sec, 3.079 real sec
[samclip] Processed 1900000 records...
[samclip] Processed 2000000 records...
[samclip] Processed 2100000 records...
[samclip] Processed 2200000 records...
[samclip] Processed 2300000 records...
[samclip] Processed 2400000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 216692, 13, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 361)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 627)
[M::mem_pestat] mean and std.dev: (297.85, 104.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 760)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1318, 1404, 2349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4411)
[M::mem_pestat] mean and std.dev: (1483.58, 792.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5442)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (321, 1015, 1332)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3354)
[M::mem_pestat] mean and std.dev: (812.70, 485.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4365)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 443764 reads in 38.126 CPU sec, 2.428 real sec
[samclip] Processed 2500000 records...
[samclip] Processed 2600000 records...
[samclip] Processed 2700000 records...
[samclip] Processed 2800000 records...
[samclip] Processed 2900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HMS24052_S28\tSM:mysnps_HMS24052_S28 -t 16 reference/ref.fa /data/Analysis/HMS24052_S28_R1.fastq.gz /data/Analysis/HMS24052_S28_R2.fastq.gz
[main] Real time: 17.626 sec; CPU: 238.455 sec
[samclip] Total SAM records 2918405, removed 564335, allowed 156630, passed 2354070
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:52:23] Running: samtools index snps.bam 2>> snps.log
[23:52:24] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:52:24] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:51:53] This is snippy 4.6.0
[23:51:53] Written by Torsten Seemann
[23:51:53] Obtained from https://github.com/tseemann/snippy
[23:51:53] Detected operating system: linux
[23:51:53] Enabling bundled linux tools.
[23:51:53] Found bwa - /usr/local/bin/bwa
[23:51:53] Found bcftools - /usr/local/bin/bcftools
[23:51:53] Found samtools - /usr/local/bin/samtools
[23:51:53] Found java - /usr/local/bin/java
[23:51:53] Found snpEff - /usr/local/bin/snpEff
[23:51:53] Found samclip - /usr/local/bin/samclip
[23:51:53] Found seqtk - /usr/local/bin/seqtk
[23:51:53] Found parallel - /usr/local/bin/parallel
[23:51:53] Found freebayes - /usr/local/bin/freebayes
[23:51:53] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:51:53] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:51:53] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:51:53] Found vcfuniq - /usr/local/bin/vcfuniq
[23:51:53] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:51:53] Found gzip - /usr/bin/gzip
[23:51:53] Found vt - /usr/local/bin/vt
[23:51:53] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:51:53] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:51:53] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:51:53] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:51:53] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:51:53] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:51:53] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:51:53] Using reference: /data/Analysis/refe.gbk
[23:51:53] Treating reference as 'genbank' format.
[23:51:53] Will use 16 CPU cores.
[23:51:53] Using read file: /data/Analysis/HMS24052_S28_R1.fastq.gz
[23:51:53] Using read file: /data/Analysis/HMS24052_S28_R2.fastq.gz
[23:51:53] Creating folder: mysnps_HMS24052_S28
[23:51:53] Changing working directory: mysnps_HMS24052_S28
[23:51:53] Creating reference folder: reference
[23:51:53] Extracting FASTA and GFF from reference.
[23:51:55] Wrote 1 sequences to ref.fa
[23:51:55] Wrote 4429 features to ref.gff
[23:51:55] Creating reference/snpeff.config
[23:51:55] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:51:55] Using BAM RG (Read Group) ID: mysnps_HMS24052_S28
[23:51:55] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:51:55] Running: bwa index reference/ref.fa 2>> snps.log
[23:51:56] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:51:56] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:51:56] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:51:56] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:51:56] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:51:59] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HMS24052_S28\tSM:mysnps_HMS24052_S28' -t 16 reference/ref.fa /data/Analysis/HMS24052_S28_R1.fastq.gz /data/Analysis/HMS24052_S28_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 613970 sequences (160000327 bp)...
[M::process] read 615382 sequences (160000193 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 299720, 22, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (227, 286, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 626)
[M::mem_pestat] mean and std.dev: (297.04, 104.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 759)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1356, 2212, 2289)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4155)
[M::mem_pestat] mean and std.dev: (1770.57, 796.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5088)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (410, 1374, 1516)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3728)
[M::mem_pestat] mean and std.dev: (1131.18, 884.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4834)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 613970 reads in 49.111 CPU sec, 3.075 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 300381, 13, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (227, 285, 359)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 623)
[M::mem_pestat] mean and std.dev: (296.10, 104.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 755)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1333, 1377, 2329)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4321)
[M::mem_pestat] mean and std.dev: (1647.69, 642.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5317)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 615382 reads in 48.503 CPU sec, 3.024 real sec
[M::process] read 614488 sequences (160000150 bp)...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 299915, 20, 11)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (532, 1264, 1464)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3328)
[M::mem_pestat] mean and std.dev: (1152.21, 730.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4260)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 285, 359)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 625)
[M::mem_pestat] mean and std.dev: (296.16, 104.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 758)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (2064, 2192, 2279)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1634, 2709)
[M::mem_pestat] mean and std.dev: (2215.50, 112.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1419, 2924)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (393, 680, 1350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3264)
[M::mem_pestat] mean and std.dev: (784.91, 478.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4221)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 618126 sequences (160000338 bp)...
[M::mem_process_seqs] Processed 614488 reads in 51.498 CPU sec, 3.203 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[M::process] read 443764 sequences (115864325 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 301811, 15, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (225, 283, 355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 615)
[M::mem_pestat] mean and std.dev: (293.23, 102.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 745)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1351, 1438, 2210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3928)
[M::mem_pestat] mean and std.dev: (1604.93, 716.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4787)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 618126 reads in 49.061 CPU sec, 3.079 real sec
[samclip] Processed 1900000 records...
[samclip] Processed 2000000 records...
[samclip] Processed 2100000 records...
[samclip] Processed 2200000 records...
[samclip] Processed 2300000 records...
[samclip] Processed 2400000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 216692, 13, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 361)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 627)
[M::mem_pestat] mean and std.dev: (297.85, 104.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 760)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1318, 1404, 2349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4411)
[M::mem_pestat] mean and std.dev: (1483.58, 792.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5442)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (321, 1015, 1332)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3354)
[M::mem_pestat] mean and std.dev: (812.70, 485.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4365)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 443764 reads in 38.126 CPU sec, 2.428 real sec
[samclip] Processed 2500000 records...
[samclip] Processed 2600000 records...
[samclip] Processed 2700000 records...
[samclip] Processed 2800000 records...
[samclip] Processed 2900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HMS24052_S28\tSM:mysnps_HMS24052_S28 -t 16 reference/ref.fa /data/Analysis/HMS24052_S28_R1.fastq.gz /data/Analysis/HMS24052_S28_R2.fastq.gz
[main] Real time: 17.626 sec; CPU: 238.455 sec
[samclip] Total SAM records 2918405, removed 564335, allowed 156630, passed 2354070
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:52:23] Running: samtools index snps.bam 2>> snps.log
[23:52:24] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:52:24] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:52:29] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 16
          no. right trimmed                     : 214
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 234

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 234
       total no. variants observed              : 2385
       total no. reference observed             : 0

Time elapsed: 0.04s

[23:52:30] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:52:31] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:52:32] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:52:32] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:52:32] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:52:33] Running: bcftools consensus --sample mysnps_HMS24052_S28 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:52:33] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:52:33] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:52:33] Running: bcftools consensus --sample mysnps_HMS24052_S28 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:52:33] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:52:33] Running: samtools view -h -q 60 snps.bam | samtools sort -l 0 -T /tmp --threads 7 -m 1000M > /tmp/snippy.1.Q60.bam 2>> snps.log
[23:51:53] This is snippy 4.6.0
[23:51:53] Written by Torsten Seemann
[23:51:53] Obtained from https://github.com/tseemann/snippy
[23:51:53] Detected operating system: linux
[23:51:53] Enabling bundled linux tools.
[23:51:53] Found bwa - /usr/local/bin/bwa
[23:51:53] Found bcftools - /usr/local/bin/bcftools
[23:51:53] Found samtools - /usr/local/bin/samtools
[23:51:53] Found java - /usr/local/bin/java
[23:51:53] Found snpEff - /usr/local/bin/snpEff
[23:51:53] Found samclip - /usr/local/bin/samclip
[23:51:53] Found seqtk - /usr/local/bin/seqtk
[23:51:53] Found parallel - /usr/local/bin/parallel
[23:51:53] Found freebayes - /usr/local/bin/freebayes
[23:51:53] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:51:53] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:51:53] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:51:53] Found vcfuniq - /usr/local/bin/vcfuniq
[23:51:53] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:51:53] Found gzip - /usr/bin/gzip
[23:51:53] Found vt - /usr/local/bin/vt
[23:51:53] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:51:53] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:51:53] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:51:53] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:51:53] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:51:53] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:51:53] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:51:53] Using reference: /data/Analysis/refe.gbk
[23:51:53] Treating reference as 'genbank' format.
[23:51:53] Will use 16 CPU cores.
[23:51:53] Using read file: /data/Analysis/HMS24052_S28_R1.fastq.gz
[23:51:53] Using read file: /data/Analysis/HMS24052_S28_R2.fastq.gz
[23:51:53] Creating folder: mysnps_HMS24052_S28
[23:51:53] Changing working directory: mysnps_HMS24052_S28
[23:51:53] Creating reference folder: reference
[23:51:53] Extracting FASTA and GFF from reference.
[23:51:55] Wrote 1 sequences to ref.fa
[23:51:55] Wrote 4429 features to ref.gff
[23:51:55] Creating reference/snpeff.config
[23:51:55] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:51:55] Using BAM RG (Read Group) ID: mysnps_HMS24052_S28
[23:51:55] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:51:55] Running: bwa index reference/ref.fa 2>> snps.log
[23:51:56] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:51:56] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:51:56] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:51:56] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:51:56] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:51:59] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HMS24052_S28\tSM:mysnps_HMS24052_S28' -t 16 reference/ref.fa /data/Analysis/HMS24052_S28_R1.fastq.gz /data/Analysis/HMS24052_S28_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 613970 sequences (160000327 bp)...
[M::process] read 615382 sequences (160000193 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 299720, 22, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (227, 286, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 626)
[M::mem_pestat] mean and std.dev: (297.04, 104.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 759)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1356, 2212, 2289)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4155)
[M::mem_pestat] mean and std.dev: (1770.57, 796.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5088)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (410, 1374, 1516)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3728)
[M::mem_pestat] mean and std.dev: (1131.18, 884.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4834)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 613970 reads in 49.111 CPU sec, 3.075 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 300381, 13, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (227, 285, 359)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 623)
[M::mem_pestat] mean and std.dev: (296.10, 104.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 755)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1333, 1377, 2329)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4321)
[M::mem_pestat] mean and std.dev: (1647.69, 642.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5317)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 615382 reads in 48.503 CPU sec, 3.024 real sec
[M::process] read 614488 sequences (160000150 bp)...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 299915, 20, 11)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (532, 1264, 1464)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3328)
[M::mem_pestat] mean and std.dev: (1152.21, 730.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4260)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 285, 359)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 625)
[M::mem_pestat] mean and std.dev: (296.16, 104.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 758)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (2064, 2192, 2279)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1634, 2709)
[M::mem_pestat] mean and std.dev: (2215.50, 112.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1419, 2924)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (393, 680, 1350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3264)
[M::mem_pestat] mean and std.dev: (784.91, 478.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4221)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 618126 sequences (160000338 bp)...
[M::mem_process_seqs] Processed 614488 reads in 51.498 CPU sec, 3.203 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[M::process] read 443764 sequences (115864325 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 301811, 15, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (225, 283, 355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 615)
[M::mem_pestat] mean and std.dev: (293.23, 102.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 745)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1351, 1438, 2210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3928)
[M::mem_pestat] mean and std.dev: (1604.93, 716.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4787)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 618126 reads in 49.061 CPU sec, 3.079 real sec
[samclip] Processed 1900000 records...
[samclip] Processed 2000000 records...
[samclip] Processed 2100000 records...
[samclip] Processed 2200000 records...
[samclip] Processed 2300000 records...
[samclip] Processed 2400000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 216692, 13, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 361)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 627)
[M::mem_pestat] mean and std.dev: (297.85, 104.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 760)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1318, 1404, 2349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4411)
[M::mem_pestat] mean and std.dev: (1483.58, 792.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5442)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (321, 1015, 1332)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3354)
[M::mem_pestat] mean and std.dev: (812.70, 485.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4365)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 443764 reads in 38.126 CPU sec, 2.428 real sec
[samclip] Processed 2500000 records...
[samclip] Processed 2600000 records...
[samclip] Processed 2700000 records...
[samclip] Processed 2800000 records...
[samclip] Processed 2900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HMS24052_S28\tSM:mysnps_HMS24052_S28 -t 16 reference/ref.fa /data/Analysis/HMS24052_S28_R1.fastq.gz /data/Analysis/HMS24052_S28_R2.fastq.gz
[main] Real time: 17.626 sec; CPU: 238.455 sec
[samclip] Total SAM records 2918405, removed 564335, allowed 156630, passed 2354070
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:52:23] Running: samtools index snps.bam 2>> snps.log
[23:52:24] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:52:24] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:52:29] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 16
          no. right trimmed                     : 214
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 234

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 234
       total no. variants observed              : 2385
       total no. reference observed             : 0

Time elapsed: 0.04s

[23:52:30] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:52:31] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:52:32] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:52:32] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:52:32] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:52:33] Running: bcftools consensus --sample mysnps_HMS24052_S28 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:52:33] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:52:33] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:52:33] Running: bcftools consensus --sample mysnps_HMS24052_S28 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:52:33] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:52:33] Running: samtools view -h -q 60 snps.bam | samtools sort -l 0 -T /tmp --threads 7 -m 1000M > /tmp/snippy.1.Q60.bam 2>> snps.log
[23:52:36] Running: samtools index /tmp/snippy.1.Q60.bam 2>> snps.log
[23:52:36] Running: /usr/local/bin/snippy-vcf_report --cpus 16 --bam /tmp/snippy.1.Q60.bam --ref reference/ref.fa --vcf snps.vcf > snps.report.txt 2>> snps.log
[23:51:53] This is snippy 4.6.0
[23:51:53] Written by Torsten Seemann
[23:51:53] Obtained from https://github.com/tseemann/snippy
[23:51:53] Detected operating system: linux
[23:51:53] Enabling bundled linux tools.
[23:51:53] Found bwa - /usr/local/bin/bwa
[23:51:53] Found bcftools - /usr/local/bin/bcftools
[23:51:53] Found samtools - /usr/local/bin/samtools
[23:51:53] Found java - /usr/local/bin/java
[23:51:53] Found snpEff - /usr/local/bin/snpEff
[23:51:53] Found samclip - /usr/local/bin/samclip
[23:51:53] Found seqtk - /usr/local/bin/seqtk
[23:51:53] Found parallel - /usr/local/bin/parallel
[23:51:53] Found freebayes - /usr/local/bin/freebayes
[23:51:53] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:51:53] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:51:53] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:51:53] Found vcfuniq - /usr/local/bin/vcfuniq
[23:51:53] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:51:53] Found gzip - /usr/bin/gzip
[23:51:53] Found vt - /usr/local/bin/vt
[23:51:53] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:51:53] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:51:53] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:51:53] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:51:53] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:51:53] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:51:53] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:51:53] Using reference: /data/Analysis/refe.gbk
[23:51:53] Treating reference as 'genbank' format.
[23:51:53] Will use 16 CPU cores.
[23:51:53] Using read file: /data/Analysis/HMS24052_S28_R1.fastq.gz
[23:51:53] Using read file: /data/Analysis/HMS24052_S28_R2.fastq.gz
[23:51:53] Creating folder: mysnps_HMS24052_S28
[23:51:53] Changing working directory: mysnps_HMS24052_S28
[23:51:53] Creating reference folder: reference
[23:51:53] Extracting FASTA and GFF from reference.
[23:51:55] Wrote 1 sequences to ref.fa
[23:51:55] Wrote 4429 features to ref.gff
[23:51:55] Creating reference/snpeff.config
[23:51:55] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:51:55] Using BAM RG (Read Group) ID: mysnps_HMS24052_S28
[23:51:55] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:51:55] Running: bwa index reference/ref.fa 2>> snps.log
[23:51:56] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:51:56] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:51:56] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:51:56] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:51:56] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:51:59] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HMS24052_S28\tSM:mysnps_HMS24052_S28' -t 16 reference/ref.fa /data/Analysis/HMS24052_S28_R1.fastq.gz /data/Analysis/HMS24052_S28_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 613970 sequences (160000327 bp)...
[M::process] read 615382 sequences (160000193 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 299720, 22, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (227, 286, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 626)
[M::mem_pestat] mean and std.dev: (297.04, 104.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 759)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1356, 2212, 2289)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4155)
[M::mem_pestat] mean and std.dev: (1770.57, 796.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5088)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (410, 1374, 1516)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3728)
[M::mem_pestat] mean and std.dev: (1131.18, 884.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4834)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 613970 reads in 49.111 CPU sec, 3.075 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 300381, 13, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (227, 285, 359)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 623)
[M::mem_pestat] mean and std.dev: (296.10, 104.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 755)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1333, 1377, 2329)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4321)
[M::mem_pestat] mean and std.dev: (1647.69, 642.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5317)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 615382 reads in 48.503 CPU sec, 3.024 real sec
[M::process] read 614488 sequences (160000150 bp)...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 299915, 20, 11)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (532, 1264, 1464)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3328)
[M::mem_pestat] mean and std.dev: (1152.21, 730.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4260)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 285, 359)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 625)
[M::mem_pestat] mean and std.dev: (296.16, 104.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 758)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (2064, 2192, 2279)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1634, 2709)
[M::mem_pestat] mean and std.dev: (2215.50, 112.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1419, 2924)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (393, 680, 1350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3264)
[M::mem_pestat] mean and std.dev: (784.91, 478.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4221)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 618126 sequences (160000338 bp)...
[M::mem_process_seqs] Processed 614488 reads in 51.498 CPU sec, 3.203 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[M::process] read 443764 sequences (115864325 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 301811, 15, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (225, 283, 355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 615)
[M::mem_pestat] mean and std.dev: (293.23, 102.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 745)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1351, 1438, 2210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3928)
[M::mem_pestat] mean and std.dev: (1604.93, 716.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4787)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 618126 reads in 49.061 CPU sec, 3.079 real sec
[samclip] Processed 1900000 records...
[samclip] Processed 2000000 records...
[samclip] Processed 2100000 records...
[samclip] Processed 2200000 records...
[samclip] Processed 2300000 records...
[samclip] Processed 2400000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 216692, 13, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 361)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 627)
[M::mem_pestat] mean and std.dev: (297.85, 104.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 760)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1318, 1404, 2349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4411)
[M::mem_pestat] mean and std.dev: (1483.58, 792.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5442)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (321, 1015, 1332)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3354)
[M::mem_pestat] mean and std.dev: (812.70, 485.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4365)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 443764 reads in 38.126 CPU sec, 2.428 real sec
[samclip] Processed 2500000 records...
[samclip] Processed 2600000 records...
[samclip] Processed 2700000 records...
[samclip] Processed 2800000 records...
[samclip] Processed 2900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HMS24052_S28\tSM:mysnps_HMS24052_S28 -t 16 reference/ref.fa /data/Analysis/HMS24052_S28_R1.fastq.gz /data/Analysis/HMS24052_S28_R2.fastq.gz
[main] Real time: 17.626 sec; CPU: 238.455 sec
[samclip] Total SAM records 2918405, removed 564335, allowed 156630, passed 2354070
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:52:23] Running: samtools index snps.bam 2>> snps.log
[23:52:24] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:52:24] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:52:29] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 16
          no. right trimmed                     : 214
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 234

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 234
       total no. variants observed              : 2385
       total no. reference observed             : 0

Time elapsed: 0.04s

[23:52:30] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:52:31] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:52:32] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:52:32] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:52:32] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:52:33] Running: bcftools consensus --sample mysnps_HMS24052_S28 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:52:33] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:52:33] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:52:33] Running: bcftools consensus --sample mysnps_HMS24052_S28 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:52:33] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:52:33] Running: samtools view -h -q 60 snps.bam | samtools sort -l 0 -T /tmp --threads 7 -m 1000M > /tmp/snippy.1.Q60.bam 2>> snps.log
[23:52:36] Running: samtools index /tmp/snippy.1.Q60.bam 2>> snps.log
[23:52:36] Running: /usr/local/bin/snippy-vcf_report --cpus 16 --bam /tmp/snippy.1.Q60.bam --ref reference/ref.fa --vcf snps.vcf > snps.report.txt 2>> snps.log
[23:51:53] This is snippy 4.6.0
[23:51:53] Written by Torsten Seemann
[23:51:53] Obtained from https://github.com/tseemann/snippy
[23:51:53] Detected operating system: linux
[23:51:53] Enabling bundled linux tools.
[23:51:53] Found bwa - /usr/local/bin/bwa
[23:51:53] Found bcftools - /usr/local/bin/bcftools
[23:51:53] Found samtools - /usr/local/bin/samtools
[23:51:53] Found java - /usr/local/bin/java
[23:51:53] Found snpEff - /usr/local/bin/snpEff
[23:51:53] Found samclip - /usr/local/bin/samclip
[23:51:53] Found seqtk - /usr/local/bin/seqtk
[23:51:53] Found parallel - /usr/local/bin/parallel
[23:51:53] Found freebayes - /usr/local/bin/freebayes
[23:51:53] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:51:53] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:51:53] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:51:53] Found vcfuniq - /usr/local/bin/vcfuniq
[23:51:53] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:51:53] Found gzip - /usr/bin/gzip
[23:51:53] Found vt - /usr/local/bin/vt
[23:51:53] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:51:53] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:51:53] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:51:53] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:51:53] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:51:53] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:51:53] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:51:53] Using reference: /data/Analysis/refe.gbk
[23:51:53] Treating reference as 'genbank' format.
[23:51:53] Will use 16 CPU cores.
[23:51:53] Using read file: /data/Analysis/HMS24052_S28_R1.fastq.gz
[23:51:53] Using read file: /data/Analysis/HMS24052_S28_R2.fastq.gz
[23:51:53] Creating folder: mysnps_HMS24052_S28
[23:51:53] Changing working directory: mysnps_HMS24052_S28
[23:51:53] Creating reference folder: reference
[23:51:53] Extracting FASTA and GFF from reference.
[23:51:55] Wrote 1 sequences to ref.fa
[23:51:55] Wrote 4429 features to ref.gff
[23:51:55] Creating reference/snpeff.config
[23:51:55] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:51:55] Using BAM RG (Read Group) ID: mysnps_HMS24052_S28
[23:51:55] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:51:55] Running: bwa index reference/ref.fa 2>> snps.log
[23:51:56] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:51:56] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:51:56] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:51:56] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:51:56] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:51:59] Running: bwa mem  -Y -M -R '@RG\tID:mysnps_HMS24052_S28\tSM:mysnps_HMS24052_S28' -t 16 reference/ref.fa /data/Analysis/HMS24052_S28_R1.fastq.gz /data/Analysis/HMS24052_S28_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 613970 sequences (160000327 bp)...
[M::process] read 615382 sequences (160000193 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 299720, 22, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (227, 286, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 626)
[M::mem_pestat] mean and std.dev: (297.04, 104.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 759)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1356, 2212, 2289)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4155)
[M::mem_pestat] mean and std.dev: (1770.57, 796.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5088)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (410, 1374, 1516)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3728)
[M::mem_pestat] mean and std.dev: (1131.18, 884.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4834)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 613970 reads in 49.111 CPU sec, 3.075 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 300381, 13, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (227, 285, 359)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 623)
[M::mem_pestat] mean and std.dev: (296.10, 104.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 755)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1333, 1377, 2329)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4321)
[M::mem_pestat] mean and std.dev: (1647.69, 642.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5317)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 615382 reads in 48.503 CPU sec, 3.024 real sec
[M::process] read 614488 sequences (160000150 bp)...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 299915, 20, 11)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (532, 1264, 1464)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3328)
[M::mem_pestat] mean and std.dev: (1152.21, 730.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4260)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 285, 359)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 625)
[M::mem_pestat] mean and std.dev: (296.16, 104.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 758)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (2064, 2192, 2279)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1634, 2709)
[M::mem_pestat] mean and std.dev: (2215.50, 112.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1419, 2924)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (393, 680, 1350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3264)
[M::mem_pestat] mean and std.dev: (784.91, 478.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4221)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 618126 sequences (160000338 bp)...
[M::mem_process_seqs] Processed 614488 reads in 51.498 CPU sec, 3.203 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[M::process] read 443764 sequences (115864325 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 301811, 15, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (225, 283, 355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 615)
[M::mem_pestat] mean and std.dev: (293.23, 102.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 745)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1351, 1438, 2210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3928)
[M::mem_pestat] mean and std.dev: (1604.93, 716.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4787)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 618126 reads in 49.061 CPU sec, 3.079 real sec
[samclip] Processed 1900000 records...
[samclip] Processed 2000000 records...
[samclip] Processed 2100000 records...
[samclip] Processed 2200000 records...
[samclip] Processed 2300000 records...
[samclip] Processed 2400000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 216692, 13, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 361)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 627)
[M::mem_pestat] mean and std.dev: (297.85, 104.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 760)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1318, 1404, 2349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4411)
[M::mem_pestat] mean and std.dev: (1483.58, 792.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5442)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (321, 1015, 1332)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3354)
[M::mem_pestat] mean and std.dev: (812.70, 485.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4365)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 443764 reads in 38.126 CPU sec, 2.428 real sec
[samclip] Processed 2500000 records...
[samclip] Processed 2600000 records...
[samclip] Processed 2700000 records...
[samclip] Processed 2800000 records...
[samclip] Processed 2900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:mysnps_HMS24052_S28\tSM:mysnps_HMS24052_S28 -t 16 reference/ref.fa /data/Analysis/HMS24052_S28_R1.fastq.gz /data/Analysis/HMS24052_S28_R2.fastq.gz
[main] Real time: 17.626 sec; CPU: 238.455 sec
[samclip] Total SAM records 2918405, removed 564335, allowed 156630, passed 2354070
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:52:23] Running: samtools index snps.bam 2>> snps.log
[23:52:24] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:52:24] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:52:29] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 16
          no. right trimmed                     : 214
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 234

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 234
       total no. variants observed              : 2385
       total no. reference observed             : 0

Time elapsed: 0.04s

[23:52:30] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:52:31] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:52:32] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:52:32] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:52:32] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:52:33] Running: bcftools consensus --sample mysnps_HMS24052_S28 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:52:33] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:52:33] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:52:33] Running: bcftools consensus --sample mysnps_HMS24052_S28 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:52:33] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:52:33] Running: samtools view -h -q 60 snps.bam | samtools sort -l 0 -T /tmp --threads 7 -m 1000M > /tmp/snippy.1.Q60.bam 2>> snps.log
[23:52:36] Running: samtools index /tmp/snippy.1.Q60.bam 2>> snps.log
[23:52:36] Running: /usr/local/bin/snippy-vcf_report --cpus 16 --bam /tmp/snippy.1.Q60.bam --ref reference/ref.fa --vcf snps.vcf > snps.report.txt 2>> snps.log
[23:52:50] Running: rm -f /tmp/snippy.1.Q60.bam /tmp/snippy.1.Q60.bam.bai 2>> snps.log
[23:52:50] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:52:53] Marked 1307 heterozygous sites with 'n'
[23:52:53] Creating extra output files: BED GFF CSV TXT HTML
[23:52:53] Identified 2385 variants.
[23:52:53] Result folder: mysnps_HMS24052_S28
[23:52:53] Result files:
[23:52:53] * mysnps_HMS24052_S28/snps.aligned.fa
[23:52:53] * mysnps_HMS24052_S28/snps.bam
[23:52:53] * mysnps_HMS24052_S28/snps.bam.bai
[23:52:53] * mysnps_HMS24052_S28/snps.bed
[23:52:53] * mysnps_HMS24052_S28/snps.consensus.fa
[23:52:53] * mysnps_HMS24052_S28/snps.consensus.subs.fa
[23:52:53] * mysnps_HMS24052_S28/snps.csv
[23:52:53] * mysnps_HMS24052_S28/snps.filt.vcf
[23:52:53] * mysnps_HMS24052_S28/snps.gff
[23:52:53] * mysnps_HMS24052_S28/snps.html
[23:52:53] * mysnps_HMS24052_S28/snps.log
[23:52:53] * mysnps_HMS24052_S28/snps.raw.vcf
[23:52:53] * mysnps_HMS24052_S28/snps.report.txt
[23:52:53] * mysnps_HMS24052_S28/snps.subs.vcf
[23:52:53] * mysnps_HMS24052_S28/snps.tab
[23:52:53] * mysnps_HMS24052_S28/snps.txt
[23:52:53] * mysnps_HMS24052_S28/snps.vcf
[23:52:53] * mysnps_HMS24052_S28/snps.vcf.gz
[23:52:53] * mysnps_HMS24052_S28/snps.vcf.gz.csi
[23:52:53] Walltime used: 1 minute, 0 seconds
[23:52:53] Wishing you a life free of homopolymer errors.
[23:52:53] Done.
snippy_container

<INFO>	[2025-06-13 01:52:59]	Running snippy-multi. Results of each sample will be stored in a folder with its name, located in /home/cgerediaga/Analysis.
c88b239daba05d32c2ede6246474aafe8e7eb1b03bd12603d5dbca2f7c8cce9a
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:55] Marked 8955 heterozygous sites with 'n'
[23:53:55] Creating extra output files: BED GFF CSV TXT HTML
[23:53:55] Identified 2484 variants.
[23:53:55] Result folder: HCU24002_S2
[23:53:55] Result files:
[23:53:55] * HCU24002_S2/snps.aligned.fa
[23:53:55] * HCU24002_S2/snps.bam
[23:53:55] * HCU24002_S2/snps.bam.bai
[23:53:55] * HCU24002_S2/snps.bed
[23:53:55] * HCU24002_S2/snps.consensus.fa
[23:53:55] * HCU24002_S2/snps.consensus.subs.fa
[23:53:55] * HCU24002_S2/snps.csv
[23:53:55] * HCU24002_S2/snps.filt.vcf
[23:53:55] * HCU24002_S2/snps.gff
[23:53:55] * HCU24002_S2/snps.html
[23:53:55] * HCU24002_S2/snps.log
[23:53:55] * HCU24002_S2/snps.raw.vcf
[23:53:55] * HCU24002_S2/snps.subs.vcf
[23:53:55] * HCU24002_S2/snps.tab
[23:53:55] * HCU24002_S2/snps.txt
[23:53:55] * HCU24002_S2/snps.vcf
[23:53:55] * HCU24002_S2/snps.vcf.gz
[23:53:55] * HCU24002_S2/snps.vcf.gz.csi
[23:53:55] Walltime used: 24 seconds
[23:53:55] Wishing you a life free of homopolymer errors.
[23:53:55] Done.
[23:53:55] This is snippy 4.6.0
[23:53:55] Written by Torsten Seemann
[23:53:55] Obtained from https://github.com/tseemann/snippy
[23:53:55] Detected operating system: linux
[23:53:55] Enabling bundled linux tools.
[23:53:55] Found bwa - /usr/local/bin/bwa
[23:53:55] Found bcftools - /usr/local/bin/bcftools
[23:53:55] Found samtools - /usr/local/bin/samtools
[23:53:55] Found java - /usr/local/bin/java
[23:53:55] Found snpEff - /usr/local/bin/snpEff
[23:53:55] Found samclip - /usr/local/bin/samclip
[23:53:55] Found seqtk - /usr/local/bin/seqtk
[23:53:55] Found parallel - /usr/local/bin/parallel
[23:53:55] Found freebayes - /usr/local/bin/freebayes
[23:53:55] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:55] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:55] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:55] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:55] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:55] Found gzip - /usr/bin/gzip
[23:53:55] Found vt - /usr/local/bin/vt
[23:53:55] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:55] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:55] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:55] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:55] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:55] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:55] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:55] Using reference: /data/Analysis/refe.gbk
[23:53:56] Treating reference as 'genbank' format.
[23:53:56] Will use 16 CPU cores.
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:53:56] Creating folder: HCU24010_S6
[23:53:56] Changing working directory: HCU24010_S6
[23:53:56] Creating reference folder: reference
[23:53:56] Extracting FASTA and GFF from reference.
[23:53:57] Wrote 1 sequences to ref.fa
[23:53:57] Wrote 4429 features to ref.gff
[23:53:57] Creating reference/snpeff.config
[23:53:57] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:57] Using BAM RG (Read Group) ID: HCU24010_S6
[23:53:57] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:57] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:58] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:58] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:58] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:55] Marked 8955 heterozygous sites with 'n'
[23:53:55] Creating extra output files: BED GFF CSV TXT HTML
[23:53:55] Identified 2484 variants.
[23:53:55] Result folder: HCU24002_S2
[23:53:55] Result files:
[23:53:55] * HCU24002_S2/snps.aligned.fa
[23:53:55] * HCU24002_S2/snps.bam
[23:53:55] * HCU24002_S2/snps.bam.bai
[23:53:55] * HCU24002_S2/snps.bed
[23:53:55] * HCU24002_S2/snps.consensus.fa
[23:53:55] * HCU24002_S2/snps.consensus.subs.fa
[23:53:55] * HCU24002_S2/snps.csv
[23:53:55] * HCU24002_S2/snps.filt.vcf
[23:53:55] * HCU24002_S2/snps.gff
[23:53:55] * HCU24002_S2/snps.html
[23:53:55] * HCU24002_S2/snps.log
[23:53:55] * HCU24002_S2/snps.raw.vcf
[23:53:55] * HCU24002_S2/snps.subs.vcf
[23:53:55] * HCU24002_S2/snps.tab
[23:53:55] * HCU24002_S2/snps.txt
[23:53:55] * HCU24002_S2/snps.vcf
[23:53:55] * HCU24002_S2/snps.vcf.gz
[23:53:55] * HCU24002_S2/snps.vcf.gz.csi
[23:53:55] Walltime used: 24 seconds
[23:53:55] Wishing you a life free of homopolymer errors.
[23:53:55] Done.
[23:53:55] This is snippy 4.6.0
[23:53:55] Written by Torsten Seemann
[23:53:55] Obtained from https://github.com/tseemann/snippy
[23:53:55] Detected operating system: linux
[23:53:55] Enabling bundled linux tools.
[23:53:55] Found bwa - /usr/local/bin/bwa
[23:53:55] Found bcftools - /usr/local/bin/bcftools
[23:53:55] Found samtools - /usr/local/bin/samtools
[23:53:55] Found java - /usr/local/bin/java
[23:53:55] Found snpEff - /usr/local/bin/snpEff
[23:53:55] Found samclip - /usr/local/bin/samclip
[23:53:55] Found seqtk - /usr/local/bin/seqtk
[23:53:55] Found parallel - /usr/local/bin/parallel
[23:53:55] Found freebayes - /usr/local/bin/freebayes
[23:53:55] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:55] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:55] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:55] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:55] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:55] Found gzip - /usr/bin/gzip
[23:53:55] Found vt - /usr/local/bin/vt
[23:53:55] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:55] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:55] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:55] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:55] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:55] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:55] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:55] Using reference: /data/Analysis/refe.gbk
[23:53:56] Treating reference as 'genbank' format.
[23:53:56] Will use 16 CPU cores.
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:53:56] Creating folder: HCU24010_S6
[23:53:56] Changing working directory: HCU24010_S6
[23:53:56] Creating reference folder: reference
[23:53:56] Extracting FASTA and GFF from reference.
[23:53:57] Wrote 1 sequences to ref.fa
[23:53:57] Wrote 4429 features to ref.gff
[23:53:57] Creating reference/snpeff.config
[23:53:57] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:57] Using BAM RG (Read Group) ID: HCU24010_S6
[23:53:57] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:57] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:58] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:58] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:58] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:02] Running: bwa mem  -Y -M -R '@RG\tID:HCU24010_S6\tSM:HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.716 CPU sec, 3.057 real sec
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:55] Marked 8955 heterozygous sites with 'n'
[23:53:55] Creating extra output files: BED GFF CSV TXT HTML
[23:53:55] Identified 2484 variants.
[23:53:55] Result folder: HCU24002_S2
[23:53:55] Result files:
[23:53:55] * HCU24002_S2/snps.aligned.fa
[23:53:55] * HCU24002_S2/snps.bam
[23:53:55] * HCU24002_S2/snps.bam.bai
[23:53:55] * HCU24002_S2/snps.bed
[23:53:55] * HCU24002_S2/snps.consensus.fa
[23:53:55] * HCU24002_S2/snps.consensus.subs.fa
[23:53:55] * HCU24002_S2/snps.csv
[23:53:55] * HCU24002_S2/snps.filt.vcf
[23:53:55] * HCU24002_S2/snps.gff
[23:53:55] * HCU24002_S2/snps.html
[23:53:55] * HCU24002_S2/snps.log
[23:53:55] * HCU24002_S2/snps.raw.vcf
[23:53:55] * HCU24002_S2/snps.subs.vcf
[23:53:55] * HCU24002_S2/snps.tab
[23:53:55] * HCU24002_S2/snps.txt
[23:53:55] * HCU24002_S2/snps.vcf
[23:53:55] * HCU24002_S2/snps.vcf.gz
[23:53:55] * HCU24002_S2/snps.vcf.gz.csi
[23:53:55] Walltime used: 24 seconds
[23:53:55] Wishing you a life free of homopolymer errors.
[23:53:55] Done.
[23:53:55] This is snippy 4.6.0
[23:53:55] Written by Torsten Seemann
[23:53:55] Obtained from https://github.com/tseemann/snippy
[23:53:55] Detected operating system: linux
[23:53:55] Enabling bundled linux tools.
[23:53:55] Found bwa - /usr/local/bin/bwa
[23:53:55] Found bcftools - /usr/local/bin/bcftools
[23:53:55] Found samtools - /usr/local/bin/samtools
[23:53:55] Found java - /usr/local/bin/java
[23:53:55] Found snpEff - /usr/local/bin/snpEff
[23:53:55] Found samclip - /usr/local/bin/samclip
[23:53:55] Found seqtk - /usr/local/bin/seqtk
[23:53:55] Found parallel - /usr/local/bin/parallel
[23:53:55] Found freebayes - /usr/local/bin/freebayes
[23:53:55] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:55] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:55] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:55] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:55] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:55] Found gzip - /usr/bin/gzip
[23:53:55] Found vt - /usr/local/bin/vt
[23:53:55] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:55] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:55] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:55] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:55] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:55] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:55] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:55] Using reference: /data/Analysis/refe.gbk
[23:53:56] Treating reference as 'genbank' format.
[23:53:56] Will use 16 CPU cores.
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:53:56] Creating folder: HCU24010_S6
[23:53:56] Changing working directory: HCU24010_S6
[23:53:56] Creating reference folder: reference
[23:53:56] Extracting FASTA and GFF from reference.
[23:53:57] Wrote 1 sequences to ref.fa
[23:53:57] Wrote 4429 features to ref.gff
[23:53:57] Creating reference/snpeff.config
[23:53:57] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:57] Using BAM RG (Read Group) ID: HCU24010_S6
[23:53:57] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:57] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:58] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:58] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:58] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:02] Running: bwa mem  -Y -M -R '@RG\tID:HCU24010_S6\tSM:HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.716 CPU sec, 3.057 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.756 CPU sec, 3.219 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 49.486 CPU sec, 3.143 real sec
[samclip] Processed 1300000 records...
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:55] Marked 8955 heterozygous sites with 'n'
[23:53:55] Creating extra output files: BED GFF CSV TXT HTML
[23:53:55] Identified 2484 variants.
[23:53:55] Result folder: HCU24002_S2
[23:53:55] Result files:
[23:53:55] * HCU24002_S2/snps.aligned.fa
[23:53:55] * HCU24002_S2/snps.bam
[23:53:55] * HCU24002_S2/snps.bam.bai
[23:53:55] * HCU24002_S2/snps.bed
[23:53:55] * HCU24002_S2/snps.consensus.fa
[23:53:55] * HCU24002_S2/snps.consensus.subs.fa
[23:53:55] * HCU24002_S2/snps.csv
[23:53:55] * HCU24002_S2/snps.filt.vcf
[23:53:55] * HCU24002_S2/snps.gff
[23:53:55] * HCU24002_S2/snps.html
[23:53:55] * HCU24002_S2/snps.log
[23:53:55] * HCU24002_S2/snps.raw.vcf
[23:53:55] * HCU24002_S2/snps.subs.vcf
[23:53:55] * HCU24002_S2/snps.tab
[23:53:55] * HCU24002_S2/snps.txt
[23:53:55] * HCU24002_S2/snps.vcf
[23:53:55] * HCU24002_S2/snps.vcf.gz
[23:53:55] * HCU24002_S2/snps.vcf.gz.csi
[23:53:55] Walltime used: 24 seconds
[23:53:55] Wishing you a life free of homopolymer errors.
[23:53:55] Done.
[23:53:55] This is snippy 4.6.0
[23:53:55] Written by Torsten Seemann
[23:53:55] Obtained from https://github.com/tseemann/snippy
[23:53:55] Detected operating system: linux
[23:53:55] Enabling bundled linux tools.
[23:53:55] Found bwa - /usr/local/bin/bwa
[23:53:55] Found bcftools - /usr/local/bin/bcftools
[23:53:55] Found samtools - /usr/local/bin/samtools
[23:53:55] Found java - /usr/local/bin/java
[23:53:55] Found snpEff - /usr/local/bin/snpEff
[23:53:55] Found samclip - /usr/local/bin/samclip
[23:53:55] Found seqtk - /usr/local/bin/seqtk
[23:53:55] Found parallel - /usr/local/bin/parallel
[23:53:55] Found freebayes - /usr/local/bin/freebayes
[23:53:55] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:55] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:55] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:55] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:55] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:55] Found gzip - /usr/bin/gzip
[23:53:55] Found vt - /usr/local/bin/vt
[23:53:55] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:55] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:55] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:55] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:55] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:55] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:55] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:55] Using reference: /data/Analysis/refe.gbk
[23:53:56] Treating reference as 'genbank' format.
[23:53:56] Will use 16 CPU cores.
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:53:56] Creating folder: HCU24010_S6
[23:53:56] Changing working directory: HCU24010_S6
[23:53:56] Creating reference folder: reference
[23:53:56] Extracting FASTA and GFF from reference.
[23:53:57] Wrote 1 sequences to ref.fa
[23:53:57] Wrote 4429 features to ref.gff
[23:53:57] Creating reference/snpeff.config
[23:53:57] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:57] Using BAM RG (Read Group) ID: HCU24010_S6
[23:53:57] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:57] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:58] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:58] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:58] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:02] Running: bwa mem  -Y -M -R '@RG\tID:HCU24010_S6\tSM:HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.716 CPU sec, 3.057 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.756 CPU sec, 3.219 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 49.486 CPU sec, 3.143 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 15.338 CPU sec, 0.965 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24010_S6\tSM:HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.889 sec; CPU: 167.280 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:18] Running: samtools index snps.bam 2>> snps.log
[23:54:19] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:19] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:55] Marked 8955 heterozygous sites with 'n'
[23:53:55] Creating extra output files: BED GFF CSV TXT HTML
[23:53:55] Identified 2484 variants.
[23:53:55] Result folder: HCU24002_S2
[23:53:55] Result files:
[23:53:55] * HCU24002_S2/snps.aligned.fa
[23:53:55] * HCU24002_S2/snps.bam
[23:53:55] * HCU24002_S2/snps.bam.bai
[23:53:55] * HCU24002_S2/snps.bed
[23:53:55] * HCU24002_S2/snps.consensus.fa
[23:53:55] * HCU24002_S2/snps.consensus.subs.fa
[23:53:55] * HCU24002_S2/snps.csv
[23:53:55] * HCU24002_S2/snps.filt.vcf
[23:53:55] * HCU24002_S2/snps.gff
[23:53:55] * HCU24002_S2/snps.html
[23:53:55] * HCU24002_S2/snps.log
[23:53:55] * HCU24002_S2/snps.raw.vcf
[23:53:55] * HCU24002_S2/snps.subs.vcf
[23:53:55] * HCU24002_S2/snps.tab
[23:53:55] * HCU24002_S2/snps.txt
[23:53:55] * HCU24002_S2/snps.vcf
[23:53:55] * HCU24002_S2/snps.vcf.gz
[23:53:55] * HCU24002_S2/snps.vcf.gz.csi
[23:53:55] Walltime used: 24 seconds
[23:53:55] Wishing you a life free of homopolymer errors.
[23:53:55] Done.
[23:53:55] This is snippy 4.6.0
[23:53:55] Written by Torsten Seemann
[23:53:55] Obtained from https://github.com/tseemann/snippy
[23:53:55] Detected operating system: linux
[23:53:55] Enabling bundled linux tools.
[23:53:55] Found bwa - /usr/local/bin/bwa
[23:53:55] Found bcftools - /usr/local/bin/bcftools
[23:53:55] Found samtools - /usr/local/bin/samtools
[23:53:55] Found java - /usr/local/bin/java
[23:53:55] Found snpEff - /usr/local/bin/snpEff
[23:53:55] Found samclip - /usr/local/bin/samclip
[23:53:55] Found seqtk - /usr/local/bin/seqtk
[23:53:55] Found parallel - /usr/local/bin/parallel
[23:53:55] Found freebayes - /usr/local/bin/freebayes
[23:53:55] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:55] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:55] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:55] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:55] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:55] Found gzip - /usr/bin/gzip
[23:53:55] Found vt - /usr/local/bin/vt
[23:53:55] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:55] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:55] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:55] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:55] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:55] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:55] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:55] Using reference: /data/Analysis/refe.gbk
[23:53:56] Treating reference as 'genbank' format.
[23:53:56] Will use 16 CPU cores.
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:53:56] Creating folder: HCU24010_S6
[23:53:56] Changing working directory: HCU24010_S6
[23:53:56] Creating reference folder: reference
[23:53:56] Extracting FASTA and GFF from reference.
[23:53:57] Wrote 1 sequences to ref.fa
[23:53:57] Wrote 4429 features to ref.gff
[23:53:57] Creating reference/snpeff.config
[23:53:57] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:57] Using BAM RG (Read Group) ID: HCU24010_S6
[23:53:57] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:57] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:58] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:58] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:58] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:02] Running: bwa mem  -Y -M -R '@RG\tID:HCU24010_S6\tSM:HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.716 CPU sec, 3.057 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.756 CPU sec, 3.219 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 49.486 CPU sec, 3.143 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 15.338 CPU sec, 0.965 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24010_S6\tSM:HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.889 sec; CPU: 167.280 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:18] Running: samtools index snps.bam 2>> snps.log
[23:54:19] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:19] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:23] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 9
          no. right trimmed                     : 88
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 101

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 101
       total no. variants observed              : 941
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:54:23] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:24] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:26] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:55] Marked 8955 heterozygous sites with 'n'
[23:53:55] Creating extra output files: BED GFF CSV TXT HTML
[23:53:55] Identified 2484 variants.
[23:53:55] Result folder: HCU24002_S2
[23:53:55] Result files:
[23:53:55] * HCU24002_S2/snps.aligned.fa
[23:53:55] * HCU24002_S2/snps.bam
[23:53:55] * HCU24002_S2/snps.bam.bai
[23:53:55] * HCU24002_S2/snps.bed
[23:53:55] * HCU24002_S2/snps.consensus.fa
[23:53:55] * HCU24002_S2/snps.consensus.subs.fa
[23:53:55] * HCU24002_S2/snps.csv
[23:53:55] * HCU24002_S2/snps.filt.vcf
[23:53:55] * HCU24002_S2/snps.gff
[23:53:55] * HCU24002_S2/snps.html
[23:53:55] * HCU24002_S2/snps.log
[23:53:55] * HCU24002_S2/snps.raw.vcf
[23:53:55] * HCU24002_S2/snps.subs.vcf
[23:53:55] * HCU24002_S2/snps.tab
[23:53:55] * HCU24002_S2/snps.txt
[23:53:55] * HCU24002_S2/snps.vcf
[23:53:55] * HCU24002_S2/snps.vcf.gz
[23:53:55] * HCU24002_S2/snps.vcf.gz.csi
[23:53:55] Walltime used: 24 seconds
[23:53:55] Wishing you a life free of homopolymer errors.
[23:53:55] Done.
[23:53:55] This is snippy 4.6.0
[23:53:55] Written by Torsten Seemann
[23:53:55] Obtained from https://github.com/tseemann/snippy
[23:53:55] Detected operating system: linux
[23:53:55] Enabling bundled linux tools.
[23:53:55] Found bwa - /usr/local/bin/bwa
[23:53:55] Found bcftools - /usr/local/bin/bcftools
[23:53:55] Found samtools - /usr/local/bin/samtools
[23:53:55] Found java - /usr/local/bin/java
[23:53:55] Found snpEff - /usr/local/bin/snpEff
[23:53:55] Found samclip - /usr/local/bin/samclip
[23:53:55] Found seqtk - /usr/local/bin/seqtk
[23:53:55] Found parallel - /usr/local/bin/parallel
[23:53:55] Found freebayes - /usr/local/bin/freebayes
[23:53:55] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:55] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:55] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:55] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:55] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:55] Found gzip - /usr/bin/gzip
[23:53:55] Found vt - /usr/local/bin/vt
[23:53:55] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:55] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:55] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:55] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:55] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:55] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:55] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:55] Using reference: /data/Analysis/refe.gbk
[23:53:56] Treating reference as 'genbank' format.
[23:53:56] Will use 16 CPU cores.
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:53:56] Creating folder: HCU24010_S6
[23:53:56] Changing working directory: HCU24010_S6
[23:53:56] Creating reference folder: reference
[23:53:56] Extracting FASTA and GFF from reference.
[23:53:57] Wrote 1 sequences to ref.fa
[23:53:57] Wrote 4429 features to ref.gff
[23:53:57] Creating reference/snpeff.config
[23:53:57] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:57] Using BAM RG (Read Group) ID: HCU24010_S6
[23:53:57] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:57] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:58] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:58] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:58] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:02] Running: bwa mem  -Y -M -R '@RG\tID:HCU24010_S6\tSM:HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.716 CPU sec, 3.057 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.756 CPU sec, 3.219 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 49.486 CPU sec, 3.143 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 15.338 CPU sec, 0.965 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24010_S6\tSM:HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.889 sec; CPU: 167.280 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:18] Running: samtools index snps.bam 2>> snps.log
[23:54:19] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:19] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:23] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 9
          no. right trimmed                     : 88
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 101

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 101
       total no. variants observed              : 941
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:54:23] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:24] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:26] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:26] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:28] Marked 1145 heterozygous sites with 'n'
[23:54:28] Creating extra output files: BED GFF CSV TXT HTML
[23:54:28] Identified 941 variants.
[23:54:28] Result folder: HCU24010_S6
[23:54:28] Result files:
[23:54:28] * HCU24010_S6/snps.aligned.fa
[23:54:28] * HCU24010_S6/snps.bam
[23:54:28] * HCU24010_S6/snps.bam.bai
[23:54:28] * HCU24010_S6/snps.bed
[23:54:28] * HCU24010_S6/snps.consensus.fa
[23:54:28] * HCU24010_S6/snps.consensus.subs.fa
[23:54:28] * HCU24010_S6/snps.csv
[23:54:28] * HCU24010_S6/snps.filt.vcf
[23:54:28] * HCU24010_S6/snps.gff
[23:54:28] * HCU24010_S6/snps.html
[23:54:28] * HCU24010_S6/snps.log
[23:54:28] * HCU24010_S6/snps.raw.vcf
[23:54:28] * HCU24010_S6/snps.subs.vcf
[23:54:28] * HCU24010_S6/snps.tab
[23:54:28] * HCU24010_S6/snps.txt
[23:54:28] * HCU24010_S6/snps.vcf
[23:54:28] * HCU24010_S6/snps.vcf.gz
[23:54:28] * HCU24010_S6/snps.vcf.gz.csi
[23:54:28] Walltime used: 33 seconds
[23:54:28] Wishing you a life free of homopolymer errors.
[23:54:28] Done.
[23:54:29] This is snippy 4.6.0
[23:54:29] Written by Torsten Seemann
[23:54:29] Obtained from https://github.com/tseemann/snippy
[23:54:29] Detected operating system: linux
[23:54:29] Enabling bundled linux tools.
[23:54:29] Found bwa - /usr/local/bin/bwa
[23:54:29] Found bcftools - /usr/local/bin/bcftools
[23:54:29] Found samtools - /usr/local/bin/samtools
[23:54:29] Found java - /usr/local/bin/java
[23:54:29] Found snpEff - /usr/local/bin/snpEff
[23:54:29] Found samclip - /usr/local/bin/samclip
[23:54:29] Found seqtk - /usr/local/bin/seqtk
[23:54:29] Found parallel - /usr/local/bin/parallel
[23:54:29] Found freebayes - /usr/local/bin/freebayes
[23:54:29] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:29] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:29] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:29] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:29] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:29] Found gzip - /usr/bin/gzip
[23:54:29] Found vt - /usr/local/bin/vt
[23:54:29] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:29] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:29] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:29] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:29] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:29] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:29] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:29] Using reference: /data/Analysis/refe.gbk
[23:54:29] Treating reference as 'genbank' format.
[23:54:29] Will use 16 CPU cores.
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:54:29] Creating folder: HCU24011_S7
[23:54:29] Changing working directory: HCU24011_S7
[23:54:29] Creating reference folder: reference
[23:54:29] Extracting FASTA and GFF from reference.
[23:54:30] Wrote 1 sequences to ref.fa
[23:54:30] Wrote 4429 features to ref.gff
[23:54:30] Creating reference/snpeff.config
[23:54:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:30] Using BAM RG (Read Group) ID: HCU24011_S7
[23:54:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:32] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:55] Marked 8955 heterozygous sites with 'n'
[23:53:55] Creating extra output files: BED GFF CSV TXT HTML
[23:53:55] Identified 2484 variants.
[23:53:55] Result folder: HCU24002_S2
[23:53:55] Result files:
[23:53:55] * HCU24002_S2/snps.aligned.fa
[23:53:55] * HCU24002_S2/snps.bam
[23:53:55] * HCU24002_S2/snps.bam.bai
[23:53:55] * HCU24002_S2/snps.bed
[23:53:55] * HCU24002_S2/snps.consensus.fa
[23:53:55] * HCU24002_S2/snps.consensus.subs.fa
[23:53:55] * HCU24002_S2/snps.csv
[23:53:55] * HCU24002_S2/snps.filt.vcf
[23:53:55] * HCU24002_S2/snps.gff
[23:53:55] * HCU24002_S2/snps.html
[23:53:55] * HCU24002_S2/snps.log
[23:53:55] * HCU24002_S2/snps.raw.vcf
[23:53:55] * HCU24002_S2/snps.subs.vcf
[23:53:55] * HCU24002_S2/snps.tab
[23:53:55] * HCU24002_S2/snps.txt
[23:53:55] * HCU24002_S2/snps.vcf
[23:53:55] * HCU24002_S2/snps.vcf.gz
[23:53:55] * HCU24002_S2/snps.vcf.gz.csi
[23:53:55] Walltime used: 24 seconds
[23:53:55] Wishing you a life free of homopolymer errors.
[23:53:55] Done.
[23:53:55] This is snippy 4.6.0
[23:53:55] Written by Torsten Seemann
[23:53:55] Obtained from https://github.com/tseemann/snippy
[23:53:55] Detected operating system: linux
[23:53:55] Enabling bundled linux tools.
[23:53:55] Found bwa - /usr/local/bin/bwa
[23:53:55] Found bcftools - /usr/local/bin/bcftools
[23:53:55] Found samtools - /usr/local/bin/samtools
[23:53:55] Found java - /usr/local/bin/java
[23:53:55] Found snpEff - /usr/local/bin/snpEff
[23:53:55] Found samclip - /usr/local/bin/samclip
[23:53:55] Found seqtk - /usr/local/bin/seqtk
[23:53:55] Found parallel - /usr/local/bin/parallel
[23:53:55] Found freebayes - /usr/local/bin/freebayes
[23:53:55] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:55] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:55] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:55] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:55] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:55] Found gzip - /usr/bin/gzip
[23:53:55] Found vt - /usr/local/bin/vt
[23:53:55] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:55] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:55] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:55] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:55] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:55] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:55] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:55] Using reference: /data/Analysis/refe.gbk
[23:53:56] Treating reference as 'genbank' format.
[23:53:56] Will use 16 CPU cores.
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:53:56] Creating folder: HCU24010_S6
[23:53:56] Changing working directory: HCU24010_S6
[23:53:56] Creating reference folder: reference
[23:53:56] Extracting FASTA and GFF from reference.
[23:53:57] Wrote 1 sequences to ref.fa
[23:53:57] Wrote 4429 features to ref.gff
[23:53:57] Creating reference/snpeff.config
[23:53:57] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:57] Using BAM RG (Read Group) ID: HCU24010_S6
[23:53:57] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:57] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:58] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:58] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:58] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:02] Running: bwa mem  -Y -M -R '@RG\tID:HCU24010_S6\tSM:HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.716 CPU sec, 3.057 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.756 CPU sec, 3.219 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 49.486 CPU sec, 3.143 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 15.338 CPU sec, 0.965 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24010_S6\tSM:HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.889 sec; CPU: 167.280 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:18] Running: samtools index snps.bam 2>> snps.log
[23:54:19] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:19] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:23] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 9
          no. right trimmed                     : 88
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 101

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 101
       total no. variants observed              : 941
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:54:23] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:24] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:26] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:26] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:28] Marked 1145 heterozygous sites with 'n'
[23:54:28] Creating extra output files: BED GFF CSV TXT HTML
[23:54:28] Identified 941 variants.
[23:54:28] Result folder: HCU24010_S6
[23:54:28] Result files:
[23:54:28] * HCU24010_S6/snps.aligned.fa
[23:54:28] * HCU24010_S6/snps.bam
[23:54:28] * HCU24010_S6/snps.bam.bai
[23:54:28] * HCU24010_S6/snps.bed
[23:54:28] * HCU24010_S6/snps.consensus.fa
[23:54:28] * HCU24010_S6/snps.consensus.subs.fa
[23:54:28] * HCU24010_S6/snps.csv
[23:54:28] * HCU24010_S6/snps.filt.vcf
[23:54:28] * HCU24010_S6/snps.gff
[23:54:28] * HCU24010_S6/snps.html
[23:54:28] * HCU24010_S6/snps.log
[23:54:28] * HCU24010_S6/snps.raw.vcf
[23:54:28] * HCU24010_S6/snps.subs.vcf
[23:54:28] * HCU24010_S6/snps.tab
[23:54:28] * HCU24010_S6/snps.txt
[23:54:28] * HCU24010_S6/snps.vcf
[23:54:28] * HCU24010_S6/snps.vcf.gz
[23:54:28] * HCU24010_S6/snps.vcf.gz.csi
[23:54:28] Walltime used: 33 seconds
[23:54:28] Wishing you a life free of homopolymer errors.
[23:54:28] Done.
[23:54:29] This is snippy 4.6.0
[23:54:29] Written by Torsten Seemann
[23:54:29] Obtained from https://github.com/tseemann/snippy
[23:54:29] Detected operating system: linux
[23:54:29] Enabling bundled linux tools.
[23:54:29] Found bwa - /usr/local/bin/bwa
[23:54:29] Found bcftools - /usr/local/bin/bcftools
[23:54:29] Found samtools - /usr/local/bin/samtools
[23:54:29] Found java - /usr/local/bin/java
[23:54:29] Found snpEff - /usr/local/bin/snpEff
[23:54:29] Found samclip - /usr/local/bin/samclip
[23:54:29] Found seqtk - /usr/local/bin/seqtk
[23:54:29] Found parallel - /usr/local/bin/parallel
[23:54:29] Found freebayes - /usr/local/bin/freebayes
[23:54:29] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:29] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:29] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:29] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:29] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:29] Found gzip - /usr/bin/gzip
[23:54:29] Found vt - /usr/local/bin/vt
[23:54:29] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:29] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:29] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:29] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:29] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:29] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:29] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:29] Using reference: /data/Analysis/refe.gbk
[23:54:29] Treating reference as 'genbank' format.
[23:54:29] Will use 16 CPU cores.
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:54:29] Creating folder: HCU24011_S7
[23:54:29] Changing working directory: HCU24011_S7
[23:54:29] Creating reference folder: reference
[23:54:29] Extracting FASTA and GFF from reference.
[23:54:30] Wrote 1 sequences to ref.fa
[23:54:30] Wrote 4429 features to ref.gff
[23:54:30] Creating reference/snpeff.config
[23:54:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:30] Using BAM RG (Read Group) ID: HCU24011_S7
[23:54:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:32] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:35] Running: bwa mem  -Y -M -R '@RG\tID:HCU24011_S7\tSM:HCU24011_S7' -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 510314 sequences (133277700 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (52, 248478, 18, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (320, 504, 939)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2177)
[M::mem_pestat] mean and std.dev: (524.39, 308.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2796)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 281, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 610)
[M::mem_pestat] mean and std.dev: (292.95, 100.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 738)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 664, 1334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3814)
[M::mem_pestat] mean and std.dev: (839.61, 800.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5054)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (302, 521, 1337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3407)
[M::mem_pestat] mean and std.dev: (743.44, 552.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4442)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:55] Marked 8955 heterozygous sites with 'n'
[23:53:55] Creating extra output files: BED GFF CSV TXT HTML
[23:53:55] Identified 2484 variants.
[23:53:55] Result folder: HCU24002_S2
[23:53:55] Result files:
[23:53:55] * HCU24002_S2/snps.aligned.fa
[23:53:55] * HCU24002_S2/snps.bam
[23:53:55] * HCU24002_S2/snps.bam.bai
[23:53:55] * HCU24002_S2/snps.bed
[23:53:55] * HCU24002_S2/snps.consensus.fa
[23:53:55] * HCU24002_S2/snps.consensus.subs.fa
[23:53:55] * HCU24002_S2/snps.csv
[23:53:55] * HCU24002_S2/snps.filt.vcf
[23:53:55] * HCU24002_S2/snps.gff
[23:53:55] * HCU24002_S2/snps.html
[23:53:55] * HCU24002_S2/snps.log
[23:53:55] * HCU24002_S2/snps.raw.vcf
[23:53:55] * HCU24002_S2/snps.subs.vcf
[23:53:55] * HCU24002_S2/snps.tab
[23:53:55] * HCU24002_S2/snps.txt
[23:53:55] * HCU24002_S2/snps.vcf
[23:53:55] * HCU24002_S2/snps.vcf.gz
[23:53:55] * HCU24002_S2/snps.vcf.gz.csi
[23:53:55] Walltime used: 24 seconds
[23:53:55] Wishing you a life free of homopolymer errors.
[23:53:55] Done.
[23:53:55] This is snippy 4.6.0
[23:53:55] Written by Torsten Seemann
[23:53:55] Obtained from https://github.com/tseemann/snippy
[23:53:55] Detected operating system: linux
[23:53:55] Enabling bundled linux tools.
[23:53:55] Found bwa - /usr/local/bin/bwa
[23:53:55] Found bcftools - /usr/local/bin/bcftools
[23:53:55] Found samtools - /usr/local/bin/samtools
[23:53:55] Found java - /usr/local/bin/java
[23:53:55] Found snpEff - /usr/local/bin/snpEff
[23:53:55] Found samclip - /usr/local/bin/samclip
[23:53:55] Found seqtk - /usr/local/bin/seqtk
[23:53:55] Found parallel - /usr/local/bin/parallel
[23:53:55] Found freebayes - /usr/local/bin/freebayes
[23:53:55] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:55] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:55] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:55] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:55] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:55] Found gzip - /usr/bin/gzip
[23:53:55] Found vt - /usr/local/bin/vt
[23:53:55] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:55] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:55] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:55] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:55] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:55] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:55] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:55] Using reference: /data/Analysis/refe.gbk
[23:53:56] Treating reference as 'genbank' format.
[23:53:56] Will use 16 CPU cores.
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:53:56] Creating folder: HCU24010_S6
[23:53:56] Changing working directory: HCU24010_S6
[23:53:56] Creating reference folder: reference
[23:53:56] Extracting FASTA and GFF from reference.
[23:53:57] Wrote 1 sequences to ref.fa
[23:53:57] Wrote 4429 features to ref.gff
[23:53:57] Creating reference/snpeff.config
[23:53:57] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:57] Using BAM RG (Read Group) ID: HCU24010_S6
[23:53:57] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:57] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:58] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:58] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:58] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:02] Running: bwa mem  -Y -M -R '@RG\tID:HCU24010_S6\tSM:HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.716 CPU sec, 3.057 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.756 CPU sec, 3.219 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 49.486 CPU sec, 3.143 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 15.338 CPU sec, 0.965 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24010_S6\tSM:HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.889 sec; CPU: 167.280 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:18] Running: samtools index snps.bam 2>> snps.log
[23:54:19] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:19] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:23] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 9
          no. right trimmed                     : 88
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 101

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 101
       total no. variants observed              : 941
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:54:23] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:24] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:26] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:26] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:28] Marked 1145 heterozygous sites with 'n'
[23:54:28] Creating extra output files: BED GFF CSV TXT HTML
[23:54:28] Identified 941 variants.
[23:54:28] Result folder: HCU24010_S6
[23:54:28] Result files:
[23:54:28] * HCU24010_S6/snps.aligned.fa
[23:54:28] * HCU24010_S6/snps.bam
[23:54:28] * HCU24010_S6/snps.bam.bai
[23:54:28] * HCU24010_S6/snps.bed
[23:54:28] * HCU24010_S6/snps.consensus.fa
[23:54:28] * HCU24010_S6/snps.consensus.subs.fa
[23:54:28] * HCU24010_S6/snps.csv
[23:54:28] * HCU24010_S6/snps.filt.vcf
[23:54:28] * HCU24010_S6/snps.gff
[23:54:28] * HCU24010_S6/snps.html
[23:54:28] * HCU24010_S6/snps.log
[23:54:28] * HCU24010_S6/snps.raw.vcf
[23:54:28] * HCU24010_S6/snps.subs.vcf
[23:54:28] * HCU24010_S6/snps.tab
[23:54:28] * HCU24010_S6/snps.txt
[23:54:28] * HCU24010_S6/snps.vcf
[23:54:28] * HCU24010_S6/snps.vcf.gz
[23:54:28] * HCU24010_S6/snps.vcf.gz.csi
[23:54:28] Walltime used: 33 seconds
[23:54:28] Wishing you a life free of homopolymer errors.
[23:54:28] Done.
[23:54:29] This is snippy 4.6.0
[23:54:29] Written by Torsten Seemann
[23:54:29] Obtained from https://github.com/tseemann/snippy
[23:54:29] Detected operating system: linux
[23:54:29] Enabling bundled linux tools.
[23:54:29] Found bwa - /usr/local/bin/bwa
[23:54:29] Found bcftools - /usr/local/bin/bcftools
[23:54:29] Found samtools - /usr/local/bin/samtools
[23:54:29] Found java - /usr/local/bin/java
[23:54:29] Found snpEff - /usr/local/bin/snpEff
[23:54:29] Found samclip - /usr/local/bin/samclip
[23:54:29] Found seqtk - /usr/local/bin/seqtk
[23:54:29] Found parallel - /usr/local/bin/parallel
[23:54:29] Found freebayes - /usr/local/bin/freebayes
[23:54:29] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:29] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:29] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:29] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:29] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:29] Found gzip - /usr/bin/gzip
[23:54:29] Found vt - /usr/local/bin/vt
[23:54:29] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:29] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:29] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:29] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:29] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:29] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:29] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:29] Using reference: /data/Analysis/refe.gbk
[23:54:29] Treating reference as 'genbank' format.
[23:54:29] Will use 16 CPU cores.
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:54:29] Creating folder: HCU24011_S7
[23:54:29] Changing working directory: HCU24011_S7
[23:54:29] Creating reference folder: reference
[23:54:29] Extracting FASTA and GFF from reference.
[23:54:30] Wrote 1 sequences to ref.fa
[23:54:30] Wrote 4429 features to ref.gff
[23:54:30] Creating reference/snpeff.config
[23:54:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:30] Using BAM RG (Read Group) ID: HCU24011_S7
[23:54:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:32] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:35] Running: bwa mem  -Y -M -R '@RG\tID:HCU24011_S7\tSM:HCU24011_S7' -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 510314 sequences (133277700 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (52, 248478, 18, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (320, 504, 939)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2177)
[M::mem_pestat] mean and std.dev: (524.39, 308.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2796)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 281, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 610)
[M::mem_pestat] mean and std.dev: (292.95, 100.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 738)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 664, 1334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3814)
[M::mem_pestat] mean and std.dev: (839.61, 800.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5054)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (302, 521, 1337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3407)
[M::mem_pestat] mean and std.dev: (743.44, 552.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4442)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 510314 reads in 47.585 CPU sec, 3.060 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24011_S7\tSM:HCU24011_S7 -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz
[main] Real time: 5.537 sec; CPU: 49.200 sec
[samclip] Total SAM records 513584, removed 116348, allowed 35199, passed 397236
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:41] Running: samtools index snps.bam 2>> snps.log
[23:54:42] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:42] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:43] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 37
          no. right trimmed                     : 179
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 219

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 219
       total no. variants observed              : 2202
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:54:44] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:44] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:55] Marked 8955 heterozygous sites with 'n'
[23:53:55] Creating extra output files: BED GFF CSV TXT HTML
[23:53:55] Identified 2484 variants.
[23:53:55] Result folder: HCU24002_S2
[23:53:55] Result files:
[23:53:55] * HCU24002_S2/snps.aligned.fa
[23:53:55] * HCU24002_S2/snps.bam
[23:53:55] * HCU24002_S2/snps.bam.bai
[23:53:55] * HCU24002_S2/snps.bed
[23:53:55] * HCU24002_S2/snps.consensus.fa
[23:53:55] * HCU24002_S2/snps.consensus.subs.fa
[23:53:55] * HCU24002_S2/snps.csv
[23:53:55] * HCU24002_S2/snps.filt.vcf
[23:53:55] * HCU24002_S2/snps.gff
[23:53:55] * HCU24002_S2/snps.html
[23:53:55] * HCU24002_S2/snps.log
[23:53:55] * HCU24002_S2/snps.raw.vcf
[23:53:55] * HCU24002_S2/snps.subs.vcf
[23:53:55] * HCU24002_S2/snps.tab
[23:53:55] * HCU24002_S2/snps.txt
[23:53:55] * HCU24002_S2/snps.vcf
[23:53:55] * HCU24002_S2/snps.vcf.gz
[23:53:55] * HCU24002_S2/snps.vcf.gz.csi
[23:53:55] Walltime used: 24 seconds
[23:53:55] Wishing you a life free of homopolymer errors.
[23:53:55] Done.
[23:53:55] This is snippy 4.6.0
[23:53:55] Written by Torsten Seemann
[23:53:55] Obtained from https://github.com/tseemann/snippy
[23:53:55] Detected operating system: linux
[23:53:55] Enabling bundled linux tools.
[23:53:55] Found bwa - /usr/local/bin/bwa
[23:53:55] Found bcftools - /usr/local/bin/bcftools
[23:53:55] Found samtools - /usr/local/bin/samtools
[23:53:55] Found java - /usr/local/bin/java
[23:53:55] Found snpEff - /usr/local/bin/snpEff
[23:53:55] Found samclip - /usr/local/bin/samclip
[23:53:55] Found seqtk - /usr/local/bin/seqtk
[23:53:55] Found parallel - /usr/local/bin/parallel
[23:53:55] Found freebayes - /usr/local/bin/freebayes
[23:53:55] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:55] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:55] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:55] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:55] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:55] Found gzip - /usr/bin/gzip
[23:53:55] Found vt - /usr/local/bin/vt
[23:53:55] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:55] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:55] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:55] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:55] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:55] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:55] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:55] Using reference: /data/Analysis/refe.gbk
[23:53:56] Treating reference as 'genbank' format.
[23:53:56] Will use 16 CPU cores.
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:53:56] Creating folder: HCU24010_S6
[23:53:56] Changing working directory: HCU24010_S6
[23:53:56] Creating reference folder: reference
[23:53:56] Extracting FASTA and GFF from reference.
[23:53:57] Wrote 1 sequences to ref.fa
[23:53:57] Wrote 4429 features to ref.gff
[23:53:57] Creating reference/snpeff.config
[23:53:57] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:57] Using BAM RG (Read Group) ID: HCU24010_S6
[23:53:57] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:57] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:58] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:58] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:58] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:02] Running: bwa mem  -Y -M -R '@RG\tID:HCU24010_S6\tSM:HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.716 CPU sec, 3.057 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.756 CPU sec, 3.219 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 49.486 CPU sec, 3.143 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 15.338 CPU sec, 0.965 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24010_S6\tSM:HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.889 sec; CPU: 167.280 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:18] Running: samtools index snps.bam 2>> snps.log
[23:54:19] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:19] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:23] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 9
          no. right trimmed                     : 88
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 101

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 101
       total no. variants observed              : 941
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:54:23] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:24] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:26] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:26] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:28] Marked 1145 heterozygous sites with 'n'
[23:54:28] Creating extra output files: BED GFF CSV TXT HTML
[23:54:28] Identified 941 variants.
[23:54:28] Result folder: HCU24010_S6
[23:54:28] Result files:
[23:54:28] * HCU24010_S6/snps.aligned.fa
[23:54:28] * HCU24010_S6/snps.bam
[23:54:28] * HCU24010_S6/snps.bam.bai
[23:54:28] * HCU24010_S6/snps.bed
[23:54:28] * HCU24010_S6/snps.consensus.fa
[23:54:28] * HCU24010_S6/snps.consensus.subs.fa
[23:54:28] * HCU24010_S6/snps.csv
[23:54:28] * HCU24010_S6/snps.filt.vcf
[23:54:28] * HCU24010_S6/snps.gff
[23:54:28] * HCU24010_S6/snps.html
[23:54:28] * HCU24010_S6/snps.log
[23:54:28] * HCU24010_S6/snps.raw.vcf
[23:54:28] * HCU24010_S6/snps.subs.vcf
[23:54:28] * HCU24010_S6/snps.tab
[23:54:28] * HCU24010_S6/snps.txt
[23:54:28] * HCU24010_S6/snps.vcf
[23:54:28] * HCU24010_S6/snps.vcf.gz
[23:54:28] * HCU24010_S6/snps.vcf.gz.csi
[23:54:28] Walltime used: 33 seconds
[23:54:28] Wishing you a life free of homopolymer errors.
[23:54:28] Done.
[23:54:29] This is snippy 4.6.0
[23:54:29] Written by Torsten Seemann
[23:54:29] Obtained from https://github.com/tseemann/snippy
[23:54:29] Detected operating system: linux
[23:54:29] Enabling bundled linux tools.
[23:54:29] Found bwa - /usr/local/bin/bwa
[23:54:29] Found bcftools - /usr/local/bin/bcftools
[23:54:29] Found samtools - /usr/local/bin/samtools
[23:54:29] Found java - /usr/local/bin/java
[23:54:29] Found snpEff - /usr/local/bin/snpEff
[23:54:29] Found samclip - /usr/local/bin/samclip
[23:54:29] Found seqtk - /usr/local/bin/seqtk
[23:54:29] Found parallel - /usr/local/bin/parallel
[23:54:29] Found freebayes - /usr/local/bin/freebayes
[23:54:29] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:29] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:29] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:29] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:29] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:29] Found gzip - /usr/bin/gzip
[23:54:29] Found vt - /usr/local/bin/vt
[23:54:29] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:29] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:29] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:29] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:29] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:29] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:29] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:29] Using reference: /data/Analysis/refe.gbk
[23:54:29] Treating reference as 'genbank' format.
[23:54:29] Will use 16 CPU cores.
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:54:29] Creating folder: HCU24011_S7
[23:54:29] Changing working directory: HCU24011_S7
[23:54:29] Creating reference folder: reference
[23:54:29] Extracting FASTA and GFF from reference.
[23:54:30] Wrote 1 sequences to ref.fa
[23:54:30] Wrote 4429 features to ref.gff
[23:54:30] Creating reference/snpeff.config
[23:54:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:30] Using BAM RG (Read Group) ID: HCU24011_S7
[23:54:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:32] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:35] Running: bwa mem  -Y -M -R '@RG\tID:HCU24011_S7\tSM:HCU24011_S7' -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 510314 sequences (133277700 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (52, 248478, 18, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (320, 504, 939)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2177)
[M::mem_pestat] mean and std.dev: (524.39, 308.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2796)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 281, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 610)
[M::mem_pestat] mean and std.dev: (292.95, 100.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 738)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 664, 1334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3814)
[M::mem_pestat] mean and std.dev: (839.61, 800.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5054)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (302, 521, 1337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3407)
[M::mem_pestat] mean and std.dev: (743.44, 552.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4442)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 510314 reads in 47.585 CPU sec, 3.060 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24011_S7\tSM:HCU24011_S7 -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz
[main] Real time: 5.537 sec; CPU: 49.200 sec
[samclip] Total SAM records 513584, removed 116348, allowed 35199, passed 397236
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:41] Running: samtools index snps.bam 2>> snps.log
[23:54:42] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:42] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:43] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 37
          no. right trimmed                     : 179
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 219

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 219
       total no. variants observed              : 2202
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:54:44] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:44] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:46] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:46] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:46] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:46] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:47] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:47] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:49] Marked 7775 heterozygous sites with 'n'
[23:54:49] Creating extra output files: BED GFF CSV TXT HTML
[23:54:49] Identified 2202 variants.
[23:54:49] Result folder: HCU24011_S7
[23:54:49] Result files:
[23:54:49] * HCU24011_S7/snps.aligned.fa
[23:54:49] * HCU24011_S7/snps.bam
[23:54:49] * HCU24011_S7/snps.bam.bai
[23:54:49] * HCU24011_S7/snps.bed
[23:54:49] * HCU24011_S7/snps.consensus.fa
[23:54:49] * HCU24011_S7/snps.consensus.subs.fa
[23:54:49] * HCU24011_S7/snps.csv
[23:54:49] * HCU24011_S7/snps.filt.vcf
[23:54:49] * HCU24011_S7/snps.gff
[23:54:49] * HCU24011_S7/snps.html
[23:54:49] * HCU24011_S7/snps.log
[23:54:49] * HCU24011_S7/snps.raw.vcf
[23:54:49] * HCU24011_S7/snps.subs.vcf
[23:54:49] * HCU24011_S7/snps.tab
[23:54:49] * HCU24011_S7/snps.txt
[23:54:49] * HCU24011_S7/snps.vcf
[23:54:49] * HCU24011_S7/snps.vcf.gz
[23:54:49] * HCU24011_S7/snps.vcf.gz.csi
[23:54:49] Walltime used: 20 seconds
[23:54:49] Wishing you a life free of homopolymer errors.
[23:54:49] Done.
[23:54:49] This is snippy 4.6.0
[23:54:49] Written by Torsten Seemann
[23:54:49] Obtained from https://github.com/tseemann/snippy
[23:54:49] Detected operating system: linux
[23:54:49] Enabling bundled linux tools.
[23:54:49] Found bwa - /usr/local/bin/bwa
[23:54:49] Found bcftools - /usr/local/bin/bcftools
[23:54:49] Found samtools - /usr/local/bin/samtools
[23:54:49] Found java - /usr/local/bin/java
[23:54:49] Found snpEff - /usr/local/bin/snpEff
[23:54:49] Found samclip - /usr/local/bin/samclip
[23:54:49] Found seqtk - /usr/local/bin/seqtk
[23:54:49] Found parallel - /usr/local/bin/parallel
[23:54:49] Found freebayes - /usr/local/bin/freebayes
[23:54:49] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:49] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:49] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:49] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:49] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:49] Found gzip - /usr/bin/gzip
[23:54:49] Found vt - /usr/local/bin/vt
[23:54:49] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:49] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:49] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:49] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:49] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:49] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:49] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:49] Using reference: /data/Analysis/refe.gbk
[23:54:49] Treating reference as 'genbank' format.
[23:54:49] Will use 16 CPU cores.
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R1.fastq.gz
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R2.fastq.gz
[23:54:49] Creating folder: HMS24017_S15
[23:54:49] Changing working directory: HMS24017_S15
[23:54:49] Creating reference folder: reference
[23:54:49] Extracting FASTA and GFF from reference.
[23:54:51] Wrote 1 sequences to ref.fa
[23:54:51] Wrote 4429 features to ref.gff
[23:54:51] Creating reference/snpeff.config
[23:54:51] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:51] Using BAM RG (Read Group) ID: HMS24017_S15
[23:54:51] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:51] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:52] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:52] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:52] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:55] Marked 8955 heterozygous sites with 'n'
[23:53:55] Creating extra output files: BED GFF CSV TXT HTML
[23:53:55] Identified 2484 variants.
[23:53:55] Result folder: HCU24002_S2
[23:53:55] Result files:
[23:53:55] * HCU24002_S2/snps.aligned.fa
[23:53:55] * HCU24002_S2/snps.bam
[23:53:55] * HCU24002_S2/snps.bam.bai
[23:53:55] * HCU24002_S2/snps.bed
[23:53:55] * HCU24002_S2/snps.consensus.fa
[23:53:55] * HCU24002_S2/snps.consensus.subs.fa
[23:53:55] * HCU24002_S2/snps.csv
[23:53:55] * HCU24002_S2/snps.filt.vcf
[23:53:55] * HCU24002_S2/snps.gff
[23:53:55] * HCU24002_S2/snps.html
[23:53:55] * HCU24002_S2/snps.log
[23:53:55] * HCU24002_S2/snps.raw.vcf
[23:53:55] * HCU24002_S2/snps.subs.vcf
[23:53:55] * HCU24002_S2/snps.tab
[23:53:55] * HCU24002_S2/snps.txt
[23:53:55] * HCU24002_S2/snps.vcf
[23:53:55] * HCU24002_S2/snps.vcf.gz
[23:53:55] * HCU24002_S2/snps.vcf.gz.csi
[23:53:55] Walltime used: 24 seconds
[23:53:55] Wishing you a life free of homopolymer errors.
[23:53:55] Done.
[23:53:55] This is snippy 4.6.0
[23:53:55] Written by Torsten Seemann
[23:53:55] Obtained from https://github.com/tseemann/snippy
[23:53:55] Detected operating system: linux
[23:53:55] Enabling bundled linux tools.
[23:53:55] Found bwa - /usr/local/bin/bwa
[23:53:55] Found bcftools - /usr/local/bin/bcftools
[23:53:55] Found samtools - /usr/local/bin/samtools
[23:53:55] Found java - /usr/local/bin/java
[23:53:55] Found snpEff - /usr/local/bin/snpEff
[23:53:55] Found samclip - /usr/local/bin/samclip
[23:53:55] Found seqtk - /usr/local/bin/seqtk
[23:53:55] Found parallel - /usr/local/bin/parallel
[23:53:55] Found freebayes - /usr/local/bin/freebayes
[23:53:55] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:55] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:55] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:55] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:55] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:55] Found gzip - /usr/bin/gzip
[23:53:55] Found vt - /usr/local/bin/vt
[23:53:55] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:55] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:55] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:55] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:55] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:55] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:55] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:55] Using reference: /data/Analysis/refe.gbk
[23:53:56] Treating reference as 'genbank' format.
[23:53:56] Will use 16 CPU cores.
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:53:56] Creating folder: HCU24010_S6
[23:53:56] Changing working directory: HCU24010_S6
[23:53:56] Creating reference folder: reference
[23:53:56] Extracting FASTA and GFF from reference.
[23:53:57] Wrote 1 sequences to ref.fa
[23:53:57] Wrote 4429 features to ref.gff
[23:53:57] Creating reference/snpeff.config
[23:53:57] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:57] Using BAM RG (Read Group) ID: HCU24010_S6
[23:53:57] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:57] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:58] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:58] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:58] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:02] Running: bwa mem  -Y -M -R '@RG\tID:HCU24010_S6\tSM:HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.716 CPU sec, 3.057 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.756 CPU sec, 3.219 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 49.486 CPU sec, 3.143 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 15.338 CPU sec, 0.965 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24010_S6\tSM:HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.889 sec; CPU: 167.280 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:18] Running: samtools index snps.bam 2>> snps.log
[23:54:19] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:19] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:23] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 9
          no. right trimmed                     : 88
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 101

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 101
       total no. variants observed              : 941
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:54:23] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:24] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:26] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:26] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:28] Marked 1145 heterozygous sites with 'n'
[23:54:28] Creating extra output files: BED GFF CSV TXT HTML
[23:54:28] Identified 941 variants.
[23:54:28] Result folder: HCU24010_S6
[23:54:28] Result files:
[23:54:28] * HCU24010_S6/snps.aligned.fa
[23:54:28] * HCU24010_S6/snps.bam
[23:54:28] * HCU24010_S6/snps.bam.bai
[23:54:28] * HCU24010_S6/snps.bed
[23:54:28] * HCU24010_S6/snps.consensus.fa
[23:54:28] * HCU24010_S6/snps.consensus.subs.fa
[23:54:28] * HCU24010_S6/snps.csv
[23:54:28] * HCU24010_S6/snps.filt.vcf
[23:54:28] * HCU24010_S6/snps.gff
[23:54:28] * HCU24010_S6/snps.html
[23:54:28] * HCU24010_S6/snps.log
[23:54:28] * HCU24010_S6/snps.raw.vcf
[23:54:28] * HCU24010_S6/snps.subs.vcf
[23:54:28] * HCU24010_S6/snps.tab
[23:54:28] * HCU24010_S6/snps.txt
[23:54:28] * HCU24010_S6/snps.vcf
[23:54:28] * HCU24010_S6/snps.vcf.gz
[23:54:28] * HCU24010_S6/snps.vcf.gz.csi
[23:54:28] Walltime used: 33 seconds
[23:54:28] Wishing you a life free of homopolymer errors.
[23:54:28] Done.
[23:54:29] This is snippy 4.6.0
[23:54:29] Written by Torsten Seemann
[23:54:29] Obtained from https://github.com/tseemann/snippy
[23:54:29] Detected operating system: linux
[23:54:29] Enabling bundled linux tools.
[23:54:29] Found bwa - /usr/local/bin/bwa
[23:54:29] Found bcftools - /usr/local/bin/bcftools
[23:54:29] Found samtools - /usr/local/bin/samtools
[23:54:29] Found java - /usr/local/bin/java
[23:54:29] Found snpEff - /usr/local/bin/snpEff
[23:54:29] Found samclip - /usr/local/bin/samclip
[23:54:29] Found seqtk - /usr/local/bin/seqtk
[23:54:29] Found parallel - /usr/local/bin/parallel
[23:54:29] Found freebayes - /usr/local/bin/freebayes
[23:54:29] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:29] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:29] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:29] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:29] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:29] Found gzip - /usr/bin/gzip
[23:54:29] Found vt - /usr/local/bin/vt
[23:54:29] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:29] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:29] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:29] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:29] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:29] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:29] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:29] Using reference: /data/Analysis/refe.gbk
[23:54:29] Treating reference as 'genbank' format.
[23:54:29] Will use 16 CPU cores.
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:54:29] Creating folder: HCU24011_S7
[23:54:29] Changing working directory: HCU24011_S7
[23:54:29] Creating reference folder: reference
[23:54:29] Extracting FASTA and GFF from reference.
[23:54:30] Wrote 1 sequences to ref.fa
[23:54:30] Wrote 4429 features to ref.gff
[23:54:30] Creating reference/snpeff.config
[23:54:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:30] Using BAM RG (Read Group) ID: HCU24011_S7
[23:54:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:32] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:35] Running: bwa mem  -Y -M -R '@RG\tID:HCU24011_S7\tSM:HCU24011_S7' -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 510314 sequences (133277700 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (52, 248478, 18, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (320, 504, 939)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2177)
[M::mem_pestat] mean and std.dev: (524.39, 308.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2796)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 281, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 610)
[M::mem_pestat] mean and std.dev: (292.95, 100.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 738)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 664, 1334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3814)
[M::mem_pestat] mean and std.dev: (839.61, 800.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5054)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (302, 521, 1337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3407)
[M::mem_pestat] mean and std.dev: (743.44, 552.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4442)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 510314 reads in 47.585 CPU sec, 3.060 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24011_S7\tSM:HCU24011_S7 -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz
[main] Real time: 5.537 sec; CPU: 49.200 sec
[samclip] Total SAM records 513584, removed 116348, allowed 35199, passed 397236
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:41] Running: samtools index snps.bam 2>> snps.log
[23:54:42] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:42] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:43] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 37
          no. right trimmed                     : 179
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 219

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 219
       total no. variants observed              : 2202
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:54:44] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:44] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:46] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:46] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:46] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:46] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:47] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:47] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:49] Marked 7775 heterozygous sites with 'n'
[23:54:49] Creating extra output files: BED GFF CSV TXT HTML
[23:54:49] Identified 2202 variants.
[23:54:49] Result folder: HCU24011_S7
[23:54:49] Result files:
[23:54:49] * HCU24011_S7/snps.aligned.fa
[23:54:49] * HCU24011_S7/snps.bam
[23:54:49] * HCU24011_S7/snps.bam.bai
[23:54:49] * HCU24011_S7/snps.bed
[23:54:49] * HCU24011_S7/snps.consensus.fa
[23:54:49] * HCU24011_S7/snps.consensus.subs.fa
[23:54:49] * HCU24011_S7/snps.csv
[23:54:49] * HCU24011_S7/snps.filt.vcf
[23:54:49] * HCU24011_S7/snps.gff
[23:54:49] * HCU24011_S7/snps.html
[23:54:49] * HCU24011_S7/snps.log
[23:54:49] * HCU24011_S7/snps.raw.vcf
[23:54:49] * HCU24011_S7/snps.subs.vcf
[23:54:49] * HCU24011_S7/snps.tab
[23:54:49] * HCU24011_S7/snps.txt
[23:54:49] * HCU24011_S7/snps.vcf
[23:54:49] * HCU24011_S7/snps.vcf.gz
[23:54:49] * HCU24011_S7/snps.vcf.gz.csi
[23:54:49] Walltime used: 20 seconds
[23:54:49] Wishing you a life free of homopolymer errors.
[23:54:49] Done.
[23:54:49] This is snippy 4.6.0
[23:54:49] Written by Torsten Seemann
[23:54:49] Obtained from https://github.com/tseemann/snippy
[23:54:49] Detected operating system: linux
[23:54:49] Enabling bundled linux tools.
[23:54:49] Found bwa - /usr/local/bin/bwa
[23:54:49] Found bcftools - /usr/local/bin/bcftools
[23:54:49] Found samtools - /usr/local/bin/samtools
[23:54:49] Found java - /usr/local/bin/java
[23:54:49] Found snpEff - /usr/local/bin/snpEff
[23:54:49] Found samclip - /usr/local/bin/samclip
[23:54:49] Found seqtk - /usr/local/bin/seqtk
[23:54:49] Found parallel - /usr/local/bin/parallel
[23:54:49] Found freebayes - /usr/local/bin/freebayes
[23:54:49] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:49] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:49] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:49] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:49] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:49] Found gzip - /usr/bin/gzip
[23:54:49] Found vt - /usr/local/bin/vt
[23:54:49] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:49] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:49] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:49] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:49] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:49] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:49] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:49] Using reference: /data/Analysis/refe.gbk
[23:54:49] Treating reference as 'genbank' format.
[23:54:49] Will use 16 CPU cores.
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R1.fastq.gz
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R2.fastq.gz
[23:54:49] Creating folder: HMS24017_S15
[23:54:49] Changing working directory: HMS24017_S15
[23:54:49] Creating reference folder: reference
[23:54:49] Extracting FASTA and GFF from reference.
[23:54:51] Wrote 1 sequences to ref.fa
[23:54:51] Wrote 4429 features to ref.gff
[23:54:51] Creating reference/snpeff.config
[23:54:51] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:51] Using BAM RG (Read Group) ID: HMS24017_S15
[23:54:51] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:51] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:52] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:52] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:52] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:55] Running: bwa mem  -Y -M -R '@RG\tID:HMS24017_S15\tSM:HMS24017_S15' -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 746630 sequences (160000202 bp)...
[M::process] read 218810 sequences (46953613 bp)...
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:55] Marked 8955 heterozygous sites with 'n'
[23:53:55] Creating extra output files: BED GFF CSV TXT HTML
[23:53:55] Identified 2484 variants.
[23:53:55] Result folder: HCU24002_S2
[23:53:55] Result files:
[23:53:55] * HCU24002_S2/snps.aligned.fa
[23:53:55] * HCU24002_S2/snps.bam
[23:53:55] * HCU24002_S2/snps.bam.bai
[23:53:55] * HCU24002_S2/snps.bed
[23:53:55] * HCU24002_S2/snps.consensus.fa
[23:53:55] * HCU24002_S2/snps.consensus.subs.fa
[23:53:55] * HCU24002_S2/snps.csv
[23:53:55] * HCU24002_S2/snps.filt.vcf
[23:53:55] * HCU24002_S2/snps.gff
[23:53:55] * HCU24002_S2/snps.html
[23:53:55] * HCU24002_S2/snps.log
[23:53:55] * HCU24002_S2/snps.raw.vcf
[23:53:55] * HCU24002_S2/snps.subs.vcf
[23:53:55] * HCU24002_S2/snps.tab
[23:53:55] * HCU24002_S2/snps.txt
[23:53:55] * HCU24002_S2/snps.vcf
[23:53:55] * HCU24002_S2/snps.vcf.gz
[23:53:55] * HCU24002_S2/snps.vcf.gz.csi
[23:53:55] Walltime used: 24 seconds
[23:53:55] Wishing you a life free of homopolymer errors.
[23:53:55] Done.
[23:53:55] This is snippy 4.6.0
[23:53:55] Written by Torsten Seemann
[23:53:55] Obtained from https://github.com/tseemann/snippy
[23:53:55] Detected operating system: linux
[23:53:55] Enabling bundled linux tools.
[23:53:55] Found bwa - /usr/local/bin/bwa
[23:53:55] Found bcftools - /usr/local/bin/bcftools
[23:53:55] Found samtools - /usr/local/bin/samtools
[23:53:55] Found java - /usr/local/bin/java
[23:53:55] Found snpEff - /usr/local/bin/snpEff
[23:53:55] Found samclip - /usr/local/bin/samclip
[23:53:55] Found seqtk - /usr/local/bin/seqtk
[23:53:55] Found parallel - /usr/local/bin/parallel
[23:53:55] Found freebayes - /usr/local/bin/freebayes
[23:53:55] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:55] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:55] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:55] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:55] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:55] Found gzip - /usr/bin/gzip
[23:53:55] Found vt - /usr/local/bin/vt
[23:53:55] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:55] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:55] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:55] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:55] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:55] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:55] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:55] Using reference: /data/Analysis/refe.gbk
[23:53:56] Treating reference as 'genbank' format.
[23:53:56] Will use 16 CPU cores.
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:53:56] Creating folder: HCU24010_S6
[23:53:56] Changing working directory: HCU24010_S6
[23:53:56] Creating reference folder: reference
[23:53:56] Extracting FASTA and GFF from reference.
[23:53:57] Wrote 1 sequences to ref.fa
[23:53:57] Wrote 4429 features to ref.gff
[23:53:57] Creating reference/snpeff.config
[23:53:57] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:57] Using BAM RG (Read Group) ID: HCU24010_S6
[23:53:57] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:57] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:58] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:58] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:58] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:02] Running: bwa mem  -Y -M -R '@RG\tID:HCU24010_S6\tSM:HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.716 CPU sec, 3.057 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.756 CPU sec, 3.219 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 49.486 CPU sec, 3.143 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 15.338 CPU sec, 0.965 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24010_S6\tSM:HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.889 sec; CPU: 167.280 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:18] Running: samtools index snps.bam 2>> snps.log
[23:54:19] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:19] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:23] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 9
          no. right trimmed                     : 88
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 101

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 101
       total no. variants observed              : 941
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:54:23] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:24] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:26] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:26] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:28] Marked 1145 heterozygous sites with 'n'
[23:54:28] Creating extra output files: BED GFF CSV TXT HTML
[23:54:28] Identified 941 variants.
[23:54:28] Result folder: HCU24010_S6
[23:54:28] Result files:
[23:54:28] * HCU24010_S6/snps.aligned.fa
[23:54:28] * HCU24010_S6/snps.bam
[23:54:28] * HCU24010_S6/snps.bam.bai
[23:54:28] * HCU24010_S6/snps.bed
[23:54:28] * HCU24010_S6/snps.consensus.fa
[23:54:28] * HCU24010_S6/snps.consensus.subs.fa
[23:54:28] * HCU24010_S6/snps.csv
[23:54:28] * HCU24010_S6/snps.filt.vcf
[23:54:28] * HCU24010_S6/snps.gff
[23:54:28] * HCU24010_S6/snps.html
[23:54:28] * HCU24010_S6/snps.log
[23:54:28] * HCU24010_S6/snps.raw.vcf
[23:54:28] * HCU24010_S6/snps.subs.vcf
[23:54:28] * HCU24010_S6/snps.tab
[23:54:28] * HCU24010_S6/snps.txt
[23:54:28] * HCU24010_S6/snps.vcf
[23:54:28] * HCU24010_S6/snps.vcf.gz
[23:54:28] * HCU24010_S6/snps.vcf.gz.csi
[23:54:28] Walltime used: 33 seconds
[23:54:28] Wishing you a life free of homopolymer errors.
[23:54:28] Done.
[23:54:29] This is snippy 4.6.0
[23:54:29] Written by Torsten Seemann
[23:54:29] Obtained from https://github.com/tseemann/snippy
[23:54:29] Detected operating system: linux
[23:54:29] Enabling bundled linux tools.
[23:54:29] Found bwa - /usr/local/bin/bwa
[23:54:29] Found bcftools - /usr/local/bin/bcftools
[23:54:29] Found samtools - /usr/local/bin/samtools
[23:54:29] Found java - /usr/local/bin/java
[23:54:29] Found snpEff - /usr/local/bin/snpEff
[23:54:29] Found samclip - /usr/local/bin/samclip
[23:54:29] Found seqtk - /usr/local/bin/seqtk
[23:54:29] Found parallel - /usr/local/bin/parallel
[23:54:29] Found freebayes - /usr/local/bin/freebayes
[23:54:29] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:29] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:29] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:29] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:29] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:29] Found gzip - /usr/bin/gzip
[23:54:29] Found vt - /usr/local/bin/vt
[23:54:29] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:29] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:29] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:29] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:29] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:29] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:29] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:29] Using reference: /data/Analysis/refe.gbk
[23:54:29] Treating reference as 'genbank' format.
[23:54:29] Will use 16 CPU cores.
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:54:29] Creating folder: HCU24011_S7
[23:54:29] Changing working directory: HCU24011_S7
[23:54:29] Creating reference folder: reference
[23:54:29] Extracting FASTA and GFF from reference.
[23:54:30] Wrote 1 sequences to ref.fa
[23:54:30] Wrote 4429 features to ref.gff
[23:54:30] Creating reference/snpeff.config
[23:54:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:30] Using BAM RG (Read Group) ID: HCU24011_S7
[23:54:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:32] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:35] Running: bwa mem  -Y -M -R '@RG\tID:HCU24011_S7\tSM:HCU24011_S7' -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 510314 sequences (133277700 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (52, 248478, 18, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (320, 504, 939)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2177)
[M::mem_pestat] mean and std.dev: (524.39, 308.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2796)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 281, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 610)
[M::mem_pestat] mean and std.dev: (292.95, 100.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 738)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 664, 1334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3814)
[M::mem_pestat] mean and std.dev: (839.61, 800.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5054)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (302, 521, 1337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3407)
[M::mem_pestat] mean and std.dev: (743.44, 552.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4442)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 510314 reads in 47.585 CPU sec, 3.060 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24011_S7\tSM:HCU24011_S7 -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz
[main] Real time: 5.537 sec; CPU: 49.200 sec
[samclip] Total SAM records 513584, removed 116348, allowed 35199, passed 397236
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:41] Running: samtools index snps.bam 2>> snps.log
[23:54:42] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:42] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:43] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 37
          no. right trimmed                     : 179
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 219

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 219
       total no. variants observed              : 2202
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:54:44] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:44] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:46] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:46] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:46] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:46] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:47] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:47] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:49] Marked 7775 heterozygous sites with 'n'
[23:54:49] Creating extra output files: BED GFF CSV TXT HTML
[23:54:49] Identified 2202 variants.
[23:54:49] Result folder: HCU24011_S7
[23:54:49] Result files:
[23:54:49] * HCU24011_S7/snps.aligned.fa
[23:54:49] * HCU24011_S7/snps.bam
[23:54:49] * HCU24011_S7/snps.bam.bai
[23:54:49] * HCU24011_S7/snps.bed
[23:54:49] * HCU24011_S7/snps.consensus.fa
[23:54:49] * HCU24011_S7/snps.consensus.subs.fa
[23:54:49] * HCU24011_S7/snps.csv
[23:54:49] * HCU24011_S7/snps.filt.vcf
[23:54:49] * HCU24011_S7/snps.gff
[23:54:49] * HCU24011_S7/snps.html
[23:54:49] * HCU24011_S7/snps.log
[23:54:49] * HCU24011_S7/snps.raw.vcf
[23:54:49] * HCU24011_S7/snps.subs.vcf
[23:54:49] * HCU24011_S7/snps.tab
[23:54:49] * HCU24011_S7/snps.txt
[23:54:49] * HCU24011_S7/snps.vcf
[23:54:49] * HCU24011_S7/snps.vcf.gz
[23:54:49] * HCU24011_S7/snps.vcf.gz.csi
[23:54:49] Walltime used: 20 seconds
[23:54:49] Wishing you a life free of homopolymer errors.
[23:54:49] Done.
[23:54:49] This is snippy 4.6.0
[23:54:49] Written by Torsten Seemann
[23:54:49] Obtained from https://github.com/tseemann/snippy
[23:54:49] Detected operating system: linux
[23:54:49] Enabling bundled linux tools.
[23:54:49] Found bwa - /usr/local/bin/bwa
[23:54:49] Found bcftools - /usr/local/bin/bcftools
[23:54:49] Found samtools - /usr/local/bin/samtools
[23:54:49] Found java - /usr/local/bin/java
[23:54:49] Found snpEff - /usr/local/bin/snpEff
[23:54:49] Found samclip - /usr/local/bin/samclip
[23:54:49] Found seqtk - /usr/local/bin/seqtk
[23:54:49] Found parallel - /usr/local/bin/parallel
[23:54:49] Found freebayes - /usr/local/bin/freebayes
[23:54:49] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:49] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:49] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:49] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:49] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:49] Found gzip - /usr/bin/gzip
[23:54:49] Found vt - /usr/local/bin/vt
[23:54:49] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:49] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:49] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:49] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:49] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:49] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:49] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:49] Using reference: /data/Analysis/refe.gbk
[23:54:49] Treating reference as 'genbank' format.
[23:54:49] Will use 16 CPU cores.
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R1.fastq.gz
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R2.fastq.gz
[23:54:49] Creating folder: HMS24017_S15
[23:54:49] Changing working directory: HMS24017_S15
[23:54:49] Creating reference folder: reference
[23:54:49] Extracting FASTA and GFF from reference.
[23:54:51] Wrote 1 sequences to ref.fa
[23:54:51] Wrote 4429 features to ref.gff
[23:54:51] Creating reference/snpeff.config
[23:54:51] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:51] Using BAM RG (Read Group) ID: HMS24017_S15
[23:54:51] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:51] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:52] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:52] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:52] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:55] Running: bwa mem  -Y -M -R '@RG\tID:HMS24017_S15\tSM:HMS24017_S15' -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 746630 sequences (160000202 bp)...
[M::process] read 218810 sequences (46953613 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 366940, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 259)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (215.34, 67.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 746630 reads in 39.279 CPU sec, 2.585 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 107505, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 260)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (215.68, 67.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 400000 records...
[M::mem_process_seqs] Processed 218810 reads in 12.831 CPU sec, 0.832 real sec
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24017_S15\tSM:HMS24017_S15 -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz
[main] Real time: 6.320 sec; CPU: 54.297 sec
[samclip] Total SAM records 967230, removed 76910, allowed 25086, passed 890320
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:55:04] Running: samtools index snps.bam 2>> snps.log
[23:55:04] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:55:04] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:55] Marked 8955 heterozygous sites with 'n'
[23:53:55] Creating extra output files: BED GFF CSV TXT HTML
[23:53:55] Identified 2484 variants.
[23:53:55] Result folder: HCU24002_S2
[23:53:55] Result files:
[23:53:55] * HCU24002_S2/snps.aligned.fa
[23:53:55] * HCU24002_S2/snps.bam
[23:53:55] * HCU24002_S2/snps.bam.bai
[23:53:55] * HCU24002_S2/snps.bed
[23:53:55] * HCU24002_S2/snps.consensus.fa
[23:53:55] * HCU24002_S2/snps.consensus.subs.fa
[23:53:55] * HCU24002_S2/snps.csv
[23:53:55] * HCU24002_S2/snps.filt.vcf
[23:53:55] * HCU24002_S2/snps.gff
[23:53:55] * HCU24002_S2/snps.html
[23:53:55] * HCU24002_S2/snps.log
[23:53:55] * HCU24002_S2/snps.raw.vcf
[23:53:55] * HCU24002_S2/snps.subs.vcf
[23:53:55] * HCU24002_S2/snps.tab
[23:53:55] * HCU24002_S2/snps.txt
[23:53:55] * HCU24002_S2/snps.vcf
[23:53:55] * HCU24002_S2/snps.vcf.gz
[23:53:55] * HCU24002_S2/snps.vcf.gz.csi
[23:53:55] Walltime used: 24 seconds
[23:53:55] Wishing you a life free of homopolymer errors.
[23:53:55] Done.
[23:53:55] This is snippy 4.6.0
[23:53:55] Written by Torsten Seemann
[23:53:55] Obtained from https://github.com/tseemann/snippy
[23:53:55] Detected operating system: linux
[23:53:55] Enabling bundled linux tools.
[23:53:55] Found bwa - /usr/local/bin/bwa
[23:53:55] Found bcftools - /usr/local/bin/bcftools
[23:53:55] Found samtools - /usr/local/bin/samtools
[23:53:55] Found java - /usr/local/bin/java
[23:53:55] Found snpEff - /usr/local/bin/snpEff
[23:53:55] Found samclip - /usr/local/bin/samclip
[23:53:55] Found seqtk - /usr/local/bin/seqtk
[23:53:55] Found parallel - /usr/local/bin/parallel
[23:53:55] Found freebayes - /usr/local/bin/freebayes
[23:53:55] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:55] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:55] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:55] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:55] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:55] Found gzip - /usr/bin/gzip
[23:53:55] Found vt - /usr/local/bin/vt
[23:53:55] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:55] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:55] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:55] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:55] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:55] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:55] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:55] Using reference: /data/Analysis/refe.gbk
[23:53:56] Treating reference as 'genbank' format.
[23:53:56] Will use 16 CPU cores.
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:53:56] Creating folder: HCU24010_S6
[23:53:56] Changing working directory: HCU24010_S6
[23:53:56] Creating reference folder: reference
[23:53:56] Extracting FASTA and GFF from reference.
[23:53:57] Wrote 1 sequences to ref.fa
[23:53:57] Wrote 4429 features to ref.gff
[23:53:57] Creating reference/snpeff.config
[23:53:57] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:57] Using BAM RG (Read Group) ID: HCU24010_S6
[23:53:57] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:57] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:58] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:58] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:58] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:02] Running: bwa mem  -Y -M -R '@RG\tID:HCU24010_S6\tSM:HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.716 CPU sec, 3.057 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.756 CPU sec, 3.219 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 49.486 CPU sec, 3.143 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 15.338 CPU sec, 0.965 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24010_S6\tSM:HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.889 sec; CPU: 167.280 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:18] Running: samtools index snps.bam 2>> snps.log
[23:54:19] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:19] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:23] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 9
          no. right trimmed                     : 88
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 101

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 101
       total no. variants observed              : 941
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:54:23] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:24] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:26] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:26] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:28] Marked 1145 heterozygous sites with 'n'
[23:54:28] Creating extra output files: BED GFF CSV TXT HTML
[23:54:28] Identified 941 variants.
[23:54:28] Result folder: HCU24010_S6
[23:54:28] Result files:
[23:54:28] * HCU24010_S6/snps.aligned.fa
[23:54:28] * HCU24010_S6/snps.bam
[23:54:28] * HCU24010_S6/snps.bam.bai
[23:54:28] * HCU24010_S6/snps.bed
[23:54:28] * HCU24010_S6/snps.consensus.fa
[23:54:28] * HCU24010_S6/snps.consensus.subs.fa
[23:54:28] * HCU24010_S6/snps.csv
[23:54:28] * HCU24010_S6/snps.filt.vcf
[23:54:28] * HCU24010_S6/snps.gff
[23:54:28] * HCU24010_S6/snps.html
[23:54:28] * HCU24010_S6/snps.log
[23:54:28] * HCU24010_S6/snps.raw.vcf
[23:54:28] * HCU24010_S6/snps.subs.vcf
[23:54:28] * HCU24010_S6/snps.tab
[23:54:28] * HCU24010_S6/snps.txt
[23:54:28] * HCU24010_S6/snps.vcf
[23:54:28] * HCU24010_S6/snps.vcf.gz
[23:54:28] * HCU24010_S6/snps.vcf.gz.csi
[23:54:28] Walltime used: 33 seconds
[23:54:28] Wishing you a life free of homopolymer errors.
[23:54:28] Done.
[23:54:29] This is snippy 4.6.0
[23:54:29] Written by Torsten Seemann
[23:54:29] Obtained from https://github.com/tseemann/snippy
[23:54:29] Detected operating system: linux
[23:54:29] Enabling bundled linux tools.
[23:54:29] Found bwa - /usr/local/bin/bwa
[23:54:29] Found bcftools - /usr/local/bin/bcftools
[23:54:29] Found samtools - /usr/local/bin/samtools
[23:54:29] Found java - /usr/local/bin/java
[23:54:29] Found snpEff - /usr/local/bin/snpEff
[23:54:29] Found samclip - /usr/local/bin/samclip
[23:54:29] Found seqtk - /usr/local/bin/seqtk
[23:54:29] Found parallel - /usr/local/bin/parallel
[23:54:29] Found freebayes - /usr/local/bin/freebayes
[23:54:29] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:29] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:29] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:29] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:29] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:29] Found gzip - /usr/bin/gzip
[23:54:29] Found vt - /usr/local/bin/vt
[23:54:29] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:29] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:29] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:29] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:29] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:29] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:29] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:29] Using reference: /data/Analysis/refe.gbk
[23:54:29] Treating reference as 'genbank' format.
[23:54:29] Will use 16 CPU cores.
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:54:29] Creating folder: HCU24011_S7
[23:54:29] Changing working directory: HCU24011_S7
[23:54:29] Creating reference folder: reference
[23:54:29] Extracting FASTA and GFF from reference.
[23:54:30] Wrote 1 sequences to ref.fa
[23:54:30] Wrote 4429 features to ref.gff
[23:54:30] Creating reference/snpeff.config
[23:54:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:30] Using BAM RG (Read Group) ID: HCU24011_S7
[23:54:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:32] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:35] Running: bwa mem  -Y -M -R '@RG\tID:HCU24011_S7\tSM:HCU24011_S7' -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 510314 sequences (133277700 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (52, 248478, 18, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (320, 504, 939)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2177)
[M::mem_pestat] mean and std.dev: (524.39, 308.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2796)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 281, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 610)
[M::mem_pestat] mean and std.dev: (292.95, 100.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 738)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 664, 1334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3814)
[M::mem_pestat] mean and std.dev: (839.61, 800.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5054)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (302, 521, 1337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3407)
[M::mem_pestat] mean and std.dev: (743.44, 552.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4442)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 510314 reads in 47.585 CPU sec, 3.060 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24011_S7\tSM:HCU24011_S7 -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz
[main] Real time: 5.537 sec; CPU: 49.200 sec
[samclip] Total SAM records 513584, removed 116348, allowed 35199, passed 397236
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:41] Running: samtools index snps.bam 2>> snps.log
[23:54:42] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:42] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:43] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 37
          no. right trimmed                     : 179
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 219

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 219
       total no. variants observed              : 2202
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:54:44] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:44] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:46] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:46] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:46] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:46] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:47] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:47] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:49] Marked 7775 heterozygous sites with 'n'
[23:54:49] Creating extra output files: BED GFF CSV TXT HTML
[23:54:49] Identified 2202 variants.
[23:54:49] Result folder: HCU24011_S7
[23:54:49] Result files:
[23:54:49] * HCU24011_S7/snps.aligned.fa
[23:54:49] * HCU24011_S7/snps.bam
[23:54:49] * HCU24011_S7/snps.bam.bai
[23:54:49] * HCU24011_S7/snps.bed
[23:54:49] * HCU24011_S7/snps.consensus.fa
[23:54:49] * HCU24011_S7/snps.consensus.subs.fa
[23:54:49] * HCU24011_S7/snps.csv
[23:54:49] * HCU24011_S7/snps.filt.vcf
[23:54:49] * HCU24011_S7/snps.gff
[23:54:49] * HCU24011_S7/snps.html
[23:54:49] * HCU24011_S7/snps.log
[23:54:49] * HCU24011_S7/snps.raw.vcf
[23:54:49] * HCU24011_S7/snps.subs.vcf
[23:54:49] * HCU24011_S7/snps.tab
[23:54:49] * HCU24011_S7/snps.txt
[23:54:49] * HCU24011_S7/snps.vcf
[23:54:49] * HCU24011_S7/snps.vcf.gz
[23:54:49] * HCU24011_S7/snps.vcf.gz.csi
[23:54:49] Walltime used: 20 seconds
[23:54:49] Wishing you a life free of homopolymer errors.
[23:54:49] Done.
[23:54:49] This is snippy 4.6.0
[23:54:49] Written by Torsten Seemann
[23:54:49] Obtained from https://github.com/tseemann/snippy
[23:54:49] Detected operating system: linux
[23:54:49] Enabling bundled linux tools.
[23:54:49] Found bwa - /usr/local/bin/bwa
[23:54:49] Found bcftools - /usr/local/bin/bcftools
[23:54:49] Found samtools - /usr/local/bin/samtools
[23:54:49] Found java - /usr/local/bin/java
[23:54:49] Found snpEff - /usr/local/bin/snpEff
[23:54:49] Found samclip - /usr/local/bin/samclip
[23:54:49] Found seqtk - /usr/local/bin/seqtk
[23:54:49] Found parallel - /usr/local/bin/parallel
[23:54:49] Found freebayes - /usr/local/bin/freebayes
[23:54:49] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:49] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:49] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:49] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:49] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:49] Found gzip - /usr/bin/gzip
[23:54:49] Found vt - /usr/local/bin/vt
[23:54:49] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:49] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:49] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:49] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:49] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:49] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:49] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:49] Using reference: /data/Analysis/refe.gbk
[23:54:49] Treating reference as 'genbank' format.
[23:54:49] Will use 16 CPU cores.
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R1.fastq.gz
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R2.fastq.gz
[23:54:49] Creating folder: HMS24017_S15
[23:54:49] Changing working directory: HMS24017_S15
[23:54:49] Creating reference folder: reference
[23:54:49] Extracting FASTA and GFF from reference.
[23:54:51] Wrote 1 sequences to ref.fa
[23:54:51] Wrote 4429 features to ref.gff
[23:54:51] Creating reference/snpeff.config
[23:54:51] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:51] Using BAM RG (Read Group) ID: HMS24017_S15
[23:54:51] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:51] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:52] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:52] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:52] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:55] Running: bwa mem  -Y -M -R '@RG\tID:HMS24017_S15\tSM:HMS24017_S15' -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 746630 sequences (160000202 bp)...
[M::process] read 218810 sequences (46953613 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 366940, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 259)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (215.34, 67.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 746630 reads in 39.279 CPU sec, 2.585 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 107505, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 260)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (215.68, 67.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 400000 records...
[M::mem_process_seqs] Processed 218810 reads in 12.831 CPU sec, 0.832 real sec
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24017_S15\tSM:HMS24017_S15 -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz
[main] Real time: 6.320 sec; CPU: 54.297 sec
[samclip] Total SAM records 967230, removed 76910, allowed 25086, passed 890320
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:55:04] Running: samtools index snps.bam 2>> snps.log
[23:55:04] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:55:04] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:55:06] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 10
          no. right trimmed                     : 74
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 87

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 87
       total no. variants observed              : 877
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:55:06] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:55:07] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:55:09] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:55:09] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:55:12] Marked 5332 heterozygous sites with 'n'
[23:55:12] Creating extra output files: BED GFF CSV TXT HTML
[23:55:12] Identified 877 variants.
[23:55:12] Result folder: HMS24017_S15
[23:55:12] Result files:
[23:55:12] * HMS24017_S15/snps.aligned.fa
[23:55:12] * HMS24017_S15/snps.bam
[23:55:12] * HMS24017_S15/snps.bam.bai
[23:55:12] * HMS24017_S15/snps.bed
[23:55:12] * HMS24017_S15/snps.consensus.fa
[23:55:12] * HMS24017_S15/snps.consensus.subs.fa
[23:55:12] * HMS24017_S15/snps.csv
[23:55:12] * HMS24017_S15/snps.filt.vcf
[23:55:12] * HMS24017_S15/snps.gff
[23:55:12] * HMS24017_S15/snps.html
[23:55:12] * HMS24017_S15/snps.log
[23:55:12] * HMS24017_S15/snps.raw.vcf
[23:55:12] * HMS24017_S15/snps.subs.vcf
[23:55:12] * HMS24017_S15/snps.tab
[23:55:12] * HMS24017_S15/snps.txt
[23:55:12] * HMS24017_S15/snps.vcf
[23:55:12] * HMS24017_S15/snps.vcf.gz
[23:55:12] * HMS24017_S15/snps.vcf.gz.csi
[23:55:12] Walltime used: 23 seconds
[23:55:12] Did you know? Snippy is a combination of SNP, Skippy, and snappy.
[23:55:12] Done.
[23:55:12] This is snippy 4.6.0
[23:55:12] Written by Torsten Seemann
[23:55:12] Obtained from https://github.com/tseemann/snippy
[23:55:12] Detected operating system: linux
[23:55:12] Enabling bundled linux tools.
[23:55:12] Found bwa - /usr/local/bin/bwa
[23:55:12] Found bcftools - /usr/local/bin/bcftools
[23:55:12] Found samtools - /usr/local/bin/samtools
[23:55:12] Found java - /usr/local/bin/java
[23:55:12] Found snpEff - /usr/local/bin/snpEff
[23:55:12] Found samclip - /usr/local/bin/samclip
[23:55:12] Found seqtk - /usr/local/bin/seqtk
[23:55:12] Found parallel - /usr/local/bin/parallel
[23:55:12] Found freebayes - /usr/local/bin/freebayes
[23:55:12] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:55:12] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:55:12] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:55:12] Found vcfuniq - /usr/local/bin/vcfuniq
[23:55:12] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:55:12] Found gzip - /usr/bin/gzip
[23:55:12] Found vt - /usr/local/bin/vt
[23:55:12] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:55:12] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:55:12] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:55:12] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:55:12] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:55] Marked 8955 heterozygous sites with 'n'
[23:53:55] Creating extra output files: BED GFF CSV TXT HTML
[23:53:55] Identified 2484 variants.
[23:53:55] Result folder: HCU24002_S2
[23:53:55] Result files:
[23:53:55] * HCU24002_S2/snps.aligned.fa
[23:53:55] * HCU24002_S2/snps.bam
[23:53:55] * HCU24002_S2/snps.bam.bai
[23:53:55] * HCU24002_S2/snps.bed
[23:53:55] * HCU24002_S2/snps.consensus.fa
[23:53:55] * HCU24002_S2/snps.consensus.subs.fa
[23:53:55] * HCU24002_S2/snps.csv
[23:53:55] * HCU24002_S2/snps.filt.vcf
[23:53:55] * HCU24002_S2/snps.gff
[23:53:55] * HCU24002_S2/snps.html
[23:53:55] * HCU24002_S2/snps.log
[23:53:55] * HCU24002_S2/snps.raw.vcf
[23:53:55] * HCU24002_S2/snps.subs.vcf
[23:53:55] * HCU24002_S2/snps.tab
[23:53:55] * HCU24002_S2/snps.txt
[23:53:55] * HCU24002_S2/snps.vcf
[23:53:55] * HCU24002_S2/snps.vcf.gz
[23:53:55] * HCU24002_S2/snps.vcf.gz.csi
[23:53:55] Walltime used: 24 seconds
[23:53:55] Wishing you a life free of homopolymer errors.
[23:53:55] Done.
[23:53:55] This is snippy 4.6.0
[23:53:55] Written by Torsten Seemann
[23:53:55] Obtained from https://github.com/tseemann/snippy
[23:53:55] Detected operating system: linux
[23:53:55] Enabling bundled linux tools.
[23:53:55] Found bwa - /usr/local/bin/bwa
[23:53:55] Found bcftools - /usr/local/bin/bcftools
[23:53:55] Found samtools - /usr/local/bin/samtools
[23:53:55] Found java - /usr/local/bin/java
[23:53:55] Found snpEff - /usr/local/bin/snpEff
[23:53:55] Found samclip - /usr/local/bin/samclip
[23:53:55] Found seqtk - /usr/local/bin/seqtk
[23:53:55] Found parallel - /usr/local/bin/parallel
[23:53:55] Found freebayes - /usr/local/bin/freebayes
[23:53:55] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:55] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:55] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:55] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:55] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:55] Found gzip - /usr/bin/gzip
[23:53:55] Found vt - /usr/local/bin/vt
[23:53:55] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:55] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:55] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:55] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:55] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:55] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:55] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:55] Using reference: /data/Analysis/refe.gbk
[23:53:56] Treating reference as 'genbank' format.
[23:53:56] Will use 16 CPU cores.
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:53:56] Creating folder: HCU24010_S6
[23:53:56] Changing working directory: HCU24010_S6
[23:53:56] Creating reference folder: reference
[23:53:56] Extracting FASTA and GFF from reference.
[23:53:57] Wrote 1 sequences to ref.fa
[23:53:57] Wrote 4429 features to ref.gff
[23:53:57] Creating reference/snpeff.config
[23:53:57] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:57] Using BAM RG (Read Group) ID: HCU24010_S6
[23:53:57] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:57] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:58] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:58] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:58] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:02] Running: bwa mem  -Y -M -R '@RG\tID:HCU24010_S6\tSM:HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.716 CPU sec, 3.057 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.756 CPU sec, 3.219 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 49.486 CPU sec, 3.143 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 15.338 CPU sec, 0.965 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24010_S6\tSM:HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.889 sec; CPU: 167.280 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:18] Running: samtools index snps.bam 2>> snps.log
[23:54:19] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:19] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:23] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 9
          no. right trimmed                     : 88
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 101

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 101
       total no. variants observed              : 941
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:54:23] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:24] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:26] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:26] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:28] Marked 1145 heterozygous sites with 'n'
[23:54:28] Creating extra output files: BED GFF CSV TXT HTML
[23:54:28] Identified 941 variants.
[23:54:28] Result folder: HCU24010_S6
[23:54:28] Result files:
[23:54:28] * HCU24010_S6/snps.aligned.fa
[23:54:28] * HCU24010_S6/snps.bam
[23:54:28] * HCU24010_S6/snps.bam.bai
[23:54:28] * HCU24010_S6/snps.bed
[23:54:28] * HCU24010_S6/snps.consensus.fa
[23:54:28] * HCU24010_S6/snps.consensus.subs.fa
[23:54:28] * HCU24010_S6/snps.csv
[23:54:28] * HCU24010_S6/snps.filt.vcf
[23:54:28] * HCU24010_S6/snps.gff
[23:54:28] * HCU24010_S6/snps.html
[23:54:28] * HCU24010_S6/snps.log
[23:54:28] * HCU24010_S6/snps.raw.vcf
[23:54:28] * HCU24010_S6/snps.subs.vcf
[23:54:28] * HCU24010_S6/snps.tab
[23:54:28] * HCU24010_S6/snps.txt
[23:54:28] * HCU24010_S6/snps.vcf
[23:54:28] * HCU24010_S6/snps.vcf.gz
[23:54:28] * HCU24010_S6/snps.vcf.gz.csi
[23:54:28] Walltime used: 33 seconds
[23:54:28] Wishing you a life free of homopolymer errors.
[23:54:28] Done.
[23:54:29] This is snippy 4.6.0
[23:54:29] Written by Torsten Seemann
[23:54:29] Obtained from https://github.com/tseemann/snippy
[23:54:29] Detected operating system: linux
[23:54:29] Enabling bundled linux tools.
[23:54:29] Found bwa - /usr/local/bin/bwa
[23:54:29] Found bcftools - /usr/local/bin/bcftools
[23:54:29] Found samtools - /usr/local/bin/samtools
[23:54:29] Found java - /usr/local/bin/java
[23:54:29] Found snpEff - /usr/local/bin/snpEff
[23:54:29] Found samclip - /usr/local/bin/samclip
[23:54:29] Found seqtk - /usr/local/bin/seqtk
[23:54:29] Found parallel - /usr/local/bin/parallel
[23:54:29] Found freebayes - /usr/local/bin/freebayes
[23:54:29] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:29] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:29] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:29] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:29] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:29] Found gzip - /usr/bin/gzip
[23:54:29] Found vt - /usr/local/bin/vt
[23:54:29] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:29] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:29] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:29] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:29] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:29] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:29] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:29] Using reference: /data/Analysis/refe.gbk
[23:54:29] Treating reference as 'genbank' format.
[23:54:29] Will use 16 CPU cores.
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:54:29] Creating folder: HCU24011_S7
[23:54:29] Changing working directory: HCU24011_S7
[23:54:29] Creating reference folder: reference
[23:54:29] Extracting FASTA and GFF from reference.
[23:54:30] Wrote 1 sequences to ref.fa
[23:54:30] Wrote 4429 features to ref.gff
[23:54:30] Creating reference/snpeff.config
[23:54:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:30] Using BAM RG (Read Group) ID: HCU24011_S7
[23:54:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:32] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:35] Running: bwa mem  -Y -M -R '@RG\tID:HCU24011_S7\tSM:HCU24011_S7' -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 510314 sequences (133277700 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (52, 248478, 18, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (320, 504, 939)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2177)
[M::mem_pestat] mean and std.dev: (524.39, 308.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2796)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 281, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 610)
[M::mem_pestat] mean and std.dev: (292.95, 100.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 738)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 664, 1334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3814)
[M::mem_pestat] mean and std.dev: (839.61, 800.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5054)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (302, 521, 1337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3407)
[M::mem_pestat] mean and std.dev: (743.44, 552.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4442)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 510314 reads in 47.585 CPU sec, 3.060 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24011_S7\tSM:HCU24011_S7 -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz
[main] Real time: 5.537 sec; CPU: 49.200 sec
[samclip] Total SAM records 513584, removed 116348, allowed 35199, passed 397236
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:41] Running: samtools index snps.bam 2>> snps.log
[23:54:42] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:42] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:43] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 37
          no. right trimmed                     : 179
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 219

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 219
       total no. variants observed              : 2202
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:54:44] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:44] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:46] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:46] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:46] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:46] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:47] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:47] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:49] Marked 7775 heterozygous sites with 'n'
[23:54:49] Creating extra output files: BED GFF CSV TXT HTML
[23:54:49] Identified 2202 variants.
[23:54:49] Result folder: HCU24011_S7
[23:54:49] Result files:
[23:54:49] * HCU24011_S7/snps.aligned.fa
[23:54:49] * HCU24011_S7/snps.bam
[23:54:49] * HCU24011_S7/snps.bam.bai
[23:54:49] * HCU24011_S7/snps.bed
[23:54:49] * HCU24011_S7/snps.consensus.fa
[23:54:49] * HCU24011_S7/snps.consensus.subs.fa
[23:54:49] * HCU24011_S7/snps.csv
[23:54:49] * HCU24011_S7/snps.filt.vcf
[23:54:49] * HCU24011_S7/snps.gff
[23:54:49] * HCU24011_S7/snps.html
[23:54:49] * HCU24011_S7/snps.log
[23:54:49] * HCU24011_S7/snps.raw.vcf
[23:54:49] * HCU24011_S7/snps.subs.vcf
[23:54:49] * HCU24011_S7/snps.tab
[23:54:49] * HCU24011_S7/snps.txt
[23:54:49] * HCU24011_S7/snps.vcf
[23:54:49] * HCU24011_S7/snps.vcf.gz
[23:54:49] * HCU24011_S7/snps.vcf.gz.csi
[23:54:49] Walltime used: 20 seconds
[23:54:49] Wishing you a life free of homopolymer errors.
[23:54:49] Done.
[23:54:49] This is snippy 4.6.0
[23:54:49] Written by Torsten Seemann
[23:54:49] Obtained from https://github.com/tseemann/snippy
[23:54:49] Detected operating system: linux
[23:54:49] Enabling bundled linux tools.
[23:54:49] Found bwa - /usr/local/bin/bwa
[23:54:49] Found bcftools - /usr/local/bin/bcftools
[23:54:49] Found samtools - /usr/local/bin/samtools
[23:54:49] Found java - /usr/local/bin/java
[23:54:49] Found snpEff - /usr/local/bin/snpEff
[23:54:49] Found samclip - /usr/local/bin/samclip
[23:54:49] Found seqtk - /usr/local/bin/seqtk
[23:54:49] Found parallel - /usr/local/bin/parallel
[23:54:49] Found freebayes - /usr/local/bin/freebayes
[23:54:49] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:49] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:49] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:49] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:49] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:49] Found gzip - /usr/bin/gzip
[23:54:49] Found vt - /usr/local/bin/vt
[23:54:49] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:49] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:49] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:49] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:49] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:49] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:49] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:49] Using reference: /data/Analysis/refe.gbk
[23:54:49] Treating reference as 'genbank' format.
[23:54:49] Will use 16 CPU cores.
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R1.fastq.gz
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R2.fastq.gz
[23:54:49] Creating folder: HMS24017_S15
[23:54:49] Changing working directory: HMS24017_S15
[23:54:49] Creating reference folder: reference
[23:54:49] Extracting FASTA and GFF from reference.
[23:54:51] Wrote 1 sequences to ref.fa
[23:54:51] Wrote 4429 features to ref.gff
[23:54:51] Creating reference/snpeff.config
[23:54:51] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:51] Using BAM RG (Read Group) ID: HMS24017_S15
[23:54:51] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:51] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:52] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:52] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:52] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:55] Running: bwa mem  -Y -M -R '@RG\tID:HMS24017_S15\tSM:HMS24017_S15' -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 746630 sequences (160000202 bp)...
[M::process] read 218810 sequences (46953613 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 366940, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 259)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (215.34, 67.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 746630 reads in 39.279 CPU sec, 2.585 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 107505, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 260)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (215.68, 67.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 400000 records...
[M::mem_process_seqs] Processed 218810 reads in 12.831 CPU sec, 0.832 real sec
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24017_S15\tSM:HMS24017_S15 -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz
[main] Real time: 6.320 sec; CPU: 54.297 sec
[samclip] Total SAM records 967230, removed 76910, allowed 25086, passed 890320
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:55:04] Running: samtools index snps.bam 2>> snps.log
[23:55:04] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:55:04] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:55:06] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 10
          no. right trimmed                     : 74
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 87

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 87
       total no. variants observed              : 877
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:55:06] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:55:07] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:55:09] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:55:09] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:55:12] Marked 5332 heterozygous sites with 'n'
[23:55:12] Creating extra output files: BED GFF CSV TXT HTML
[23:55:12] Identified 877 variants.
[23:55:12] Result folder: HMS24017_S15
[23:55:12] Result files:
[23:55:12] * HMS24017_S15/snps.aligned.fa
[23:55:12] * HMS24017_S15/snps.bam
[23:55:12] * HMS24017_S15/snps.bam.bai
[23:55:12] * HMS24017_S15/snps.bed
[23:55:12] * HMS24017_S15/snps.consensus.fa
[23:55:12] * HMS24017_S15/snps.consensus.subs.fa
[23:55:12] * HMS24017_S15/snps.csv
[23:55:12] * HMS24017_S15/snps.filt.vcf
[23:55:12] * HMS24017_S15/snps.gff
[23:55:12] * HMS24017_S15/snps.html
[23:55:12] * HMS24017_S15/snps.log
[23:55:12] * HMS24017_S15/snps.raw.vcf
[23:55:12] * HMS24017_S15/snps.subs.vcf
[23:55:12] * HMS24017_S15/snps.tab
[23:55:12] * HMS24017_S15/snps.txt
[23:55:12] * HMS24017_S15/snps.vcf
[23:55:12] * HMS24017_S15/snps.vcf.gz
[23:55:12] * HMS24017_S15/snps.vcf.gz.csi
[23:55:12] Walltime used: 23 seconds
[23:55:12] Did you know? Snippy is a combination of SNP, Skippy, and snappy.
[23:55:12] Done.
[23:55:12] This is snippy 4.6.0
[23:55:12] Written by Torsten Seemann
[23:55:12] Obtained from https://github.com/tseemann/snippy
[23:55:12] Detected operating system: linux
[23:55:12] Enabling bundled linux tools.
[23:55:12] Found bwa - /usr/local/bin/bwa
[23:55:12] Found bcftools - /usr/local/bin/bcftools
[23:55:12] Found samtools - /usr/local/bin/samtools
[23:55:12] Found java - /usr/local/bin/java
[23:55:12] Found snpEff - /usr/local/bin/snpEff
[23:55:12] Found samclip - /usr/local/bin/samclip
[23:55:12] Found seqtk - /usr/local/bin/seqtk
[23:55:12] Found parallel - /usr/local/bin/parallel
[23:55:12] Found freebayes - /usr/local/bin/freebayes
[23:55:12] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:55:12] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:55:12] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:55:12] Found vcfuniq - /usr/local/bin/vcfuniq
[23:55:12] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:55:12] Found gzip - /usr/bin/gzip
[23:55:12] Found vt - /usr/local/bin/vt
[23:55:12] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:55:12] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:55:12] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:55:12] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:55:12] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:55:12] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:55:12] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:55:12] Using reference: /data/Analysis/refe.gbk
[23:55:12] Treating reference as 'genbank' format.
[23:55:12] Will use 16 CPU cores.
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R1.fastq.gz
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R2.fastq.gz
[23:55:12] Creating folder: HMS24046_S23
[23:55:12] Changing working directory: HMS24046_S23
[23:55:12] Creating reference folder: reference
[23:55:12] Extracting FASTA and GFF from reference.
[23:55:14] Wrote 1 sequences to ref.fa
[23:55:14] Wrote 4429 features to ref.gff
[23:55:14] Creating reference/snpeff.config
[23:55:14] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:55:14] Using BAM RG (Read Group) ID: HMS24046_S23
[23:55:14] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:55:14] Running: bwa index reference/ref.fa 2>> snps.log
[23:55:14] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:55:14] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:55:15] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:55:15] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:55:15] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:55:18] Running: bwa mem  -Y -M -R '@RG\tID:HMS24046_S23\tSM:HMS24046_S23' -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:55] Marked 8955 heterozygous sites with 'n'
[23:53:55] Creating extra output files: BED GFF CSV TXT HTML
[23:53:55] Identified 2484 variants.
[23:53:55] Result folder: HCU24002_S2
[23:53:55] Result files:
[23:53:55] * HCU24002_S2/snps.aligned.fa
[23:53:55] * HCU24002_S2/snps.bam
[23:53:55] * HCU24002_S2/snps.bam.bai
[23:53:55] * HCU24002_S2/snps.bed
[23:53:55] * HCU24002_S2/snps.consensus.fa
[23:53:55] * HCU24002_S2/snps.consensus.subs.fa
[23:53:55] * HCU24002_S2/snps.csv
[23:53:55] * HCU24002_S2/snps.filt.vcf
[23:53:55] * HCU24002_S2/snps.gff
[23:53:55] * HCU24002_S2/snps.html
[23:53:55] * HCU24002_S2/snps.log
[23:53:55] * HCU24002_S2/snps.raw.vcf
[23:53:55] * HCU24002_S2/snps.subs.vcf
[23:53:55] * HCU24002_S2/snps.tab
[23:53:55] * HCU24002_S2/snps.txt
[23:53:55] * HCU24002_S2/snps.vcf
[23:53:55] * HCU24002_S2/snps.vcf.gz
[23:53:55] * HCU24002_S2/snps.vcf.gz.csi
[23:53:55] Walltime used: 24 seconds
[23:53:55] Wishing you a life free of homopolymer errors.
[23:53:55] Done.
[23:53:55] This is snippy 4.6.0
[23:53:55] Written by Torsten Seemann
[23:53:55] Obtained from https://github.com/tseemann/snippy
[23:53:55] Detected operating system: linux
[23:53:55] Enabling bundled linux tools.
[23:53:55] Found bwa - /usr/local/bin/bwa
[23:53:55] Found bcftools - /usr/local/bin/bcftools
[23:53:55] Found samtools - /usr/local/bin/samtools
[23:53:55] Found java - /usr/local/bin/java
[23:53:55] Found snpEff - /usr/local/bin/snpEff
[23:53:55] Found samclip - /usr/local/bin/samclip
[23:53:55] Found seqtk - /usr/local/bin/seqtk
[23:53:55] Found parallel - /usr/local/bin/parallel
[23:53:55] Found freebayes - /usr/local/bin/freebayes
[23:53:55] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:55] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:55] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:55] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:55] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:55] Found gzip - /usr/bin/gzip
[23:53:55] Found vt - /usr/local/bin/vt
[23:53:55] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:55] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:55] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:55] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:55] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:55] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:55] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:55] Using reference: /data/Analysis/refe.gbk
[23:53:56] Treating reference as 'genbank' format.
[23:53:56] Will use 16 CPU cores.
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:53:56] Creating folder: HCU24010_S6
[23:53:56] Changing working directory: HCU24010_S6
[23:53:56] Creating reference folder: reference
[23:53:56] Extracting FASTA and GFF from reference.
[23:53:57] Wrote 1 sequences to ref.fa
[23:53:57] Wrote 4429 features to ref.gff
[23:53:57] Creating reference/snpeff.config
[23:53:57] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:57] Using BAM RG (Read Group) ID: HCU24010_S6
[23:53:57] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:57] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:58] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:58] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:58] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:02] Running: bwa mem  -Y -M -R '@RG\tID:HCU24010_S6\tSM:HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.716 CPU sec, 3.057 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.756 CPU sec, 3.219 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 49.486 CPU sec, 3.143 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 15.338 CPU sec, 0.965 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24010_S6\tSM:HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.889 sec; CPU: 167.280 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:18] Running: samtools index snps.bam 2>> snps.log
[23:54:19] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:19] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:23] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 9
          no. right trimmed                     : 88
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 101

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 101
       total no. variants observed              : 941
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:54:23] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:24] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:26] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:26] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:28] Marked 1145 heterozygous sites with 'n'
[23:54:28] Creating extra output files: BED GFF CSV TXT HTML
[23:54:28] Identified 941 variants.
[23:54:28] Result folder: HCU24010_S6
[23:54:28] Result files:
[23:54:28] * HCU24010_S6/snps.aligned.fa
[23:54:28] * HCU24010_S6/snps.bam
[23:54:28] * HCU24010_S6/snps.bam.bai
[23:54:28] * HCU24010_S6/snps.bed
[23:54:28] * HCU24010_S6/snps.consensus.fa
[23:54:28] * HCU24010_S6/snps.consensus.subs.fa
[23:54:28] * HCU24010_S6/snps.csv
[23:54:28] * HCU24010_S6/snps.filt.vcf
[23:54:28] * HCU24010_S6/snps.gff
[23:54:28] * HCU24010_S6/snps.html
[23:54:28] * HCU24010_S6/snps.log
[23:54:28] * HCU24010_S6/snps.raw.vcf
[23:54:28] * HCU24010_S6/snps.subs.vcf
[23:54:28] * HCU24010_S6/snps.tab
[23:54:28] * HCU24010_S6/snps.txt
[23:54:28] * HCU24010_S6/snps.vcf
[23:54:28] * HCU24010_S6/snps.vcf.gz
[23:54:28] * HCU24010_S6/snps.vcf.gz.csi
[23:54:28] Walltime used: 33 seconds
[23:54:28] Wishing you a life free of homopolymer errors.
[23:54:28] Done.
[23:54:29] This is snippy 4.6.0
[23:54:29] Written by Torsten Seemann
[23:54:29] Obtained from https://github.com/tseemann/snippy
[23:54:29] Detected operating system: linux
[23:54:29] Enabling bundled linux tools.
[23:54:29] Found bwa - /usr/local/bin/bwa
[23:54:29] Found bcftools - /usr/local/bin/bcftools
[23:54:29] Found samtools - /usr/local/bin/samtools
[23:54:29] Found java - /usr/local/bin/java
[23:54:29] Found snpEff - /usr/local/bin/snpEff
[23:54:29] Found samclip - /usr/local/bin/samclip
[23:54:29] Found seqtk - /usr/local/bin/seqtk
[23:54:29] Found parallel - /usr/local/bin/parallel
[23:54:29] Found freebayes - /usr/local/bin/freebayes
[23:54:29] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:29] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:29] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:29] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:29] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:29] Found gzip - /usr/bin/gzip
[23:54:29] Found vt - /usr/local/bin/vt
[23:54:29] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:29] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:29] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:29] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:29] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:29] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:29] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:29] Using reference: /data/Analysis/refe.gbk
[23:54:29] Treating reference as 'genbank' format.
[23:54:29] Will use 16 CPU cores.
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:54:29] Creating folder: HCU24011_S7
[23:54:29] Changing working directory: HCU24011_S7
[23:54:29] Creating reference folder: reference
[23:54:29] Extracting FASTA and GFF from reference.
[23:54:30] Wrote 1 sequences to ref.fa
[23:54:30] Wrote 4429 features to ref.gff
[23:54:30] Creating reference/snpeff.config
[23:54:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:30] Using BAM RG (Read Group) ID: HCU24011_S7
[23:54:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:32] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:35] Running: bwa mem  -Y -M -R '@RG\tID:HCU24011_S7\tSM:HCU24011_S7' -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 510314 sequences (133277700 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (52, 248478, 18, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (320, 504, 939)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2177)
[M::mem_pestat] mean and std.dev: (524.39, 308.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2796)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 281, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 610)
[M::mem_pestat] mean and std.dev: (292.95, 100.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 738)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 664, 1334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3814)
[M::mem_pestat] mean and std.dev: (839.61, 800.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5054)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (302, 521, 1337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3407)
[M::mem_pestat] mean and std.dev: (743.44, 552.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4442)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 510314 reads in 47.585 CPU sec, 3.060 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24011_S7\tSM:HCU24011_S7 -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz
[main] Real time: 5.537 sec; CPU: 49.200 sec
[samclip] Total SAM records 513584, removed 116348, allowed 35199, passed 397236
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:41] Running: samtools index snps.bam 2>> snps.log
[23:54:42] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:42] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:43] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 37
          no. right trimmed                     : 179
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 219

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 219
       total no. variants observed              : 2202
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:54:44] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:44] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:46] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:46] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:46] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:46] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:47] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:47] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:49] Marked 7775 heterozygous sites with 'n'
[23:54:49] Creating extra output files: BED GFF CSV TXT HTML
[23:54:49] Identified 2202 variants.
[23:54:49] Result folder: HCU24011_S7
[23:54:49] Result files:
[23:54:49] * HCU24011_S7/snps.aligned.fa
[23:54:49] * HCU24011_S7/snps.bam
[23:54:49] * HCU24011_S7/snps.bam.bai
[23:54:49] * HCU24011_S7/snps.bed
[23:54:49] * HCU24011_S7/snps.consensus.fa
[23:54:49] * HCU24011_S7/snps.consensus.subs.fa
[23:54:49] * HCU24011_S7/snps.csv
[23:54:49] * HCU24011_S7/snps.filt.vcf
[23:54:49] * HCU24011_S7/snps.gff
[23:54:49] * HCU24011_S7/snps.html
[23:54:49] * HCU24011_S7/snps.log
[23:54:49] * HCU24011_S7/snps.raw.vcf
[23:54:49] * HCU24011_S7/snps.subs.vcf
[23:54:49] * HCU24011_S7/snps.tab
[23:54:49] * HCU24011_S7/snps.txt
[23:54:49] * HCU24011_S7/snps.vcf
[23:54:49] * HCU24011_S7/snps.vcf.gz
[23:54:49] * HCU24011_S7/snps.vcf.gz.csi
[23:54:49] Walltime used: 20 seconds
[23:54:49] Wishing you a life free of homopolymer errors.
[23:54:49] Done.
[23:54:49] This is snippy 4.6.0
[23:54:49] Written by Torsten Seemann
[23:54:49] Obtained from https://github.com/tseemann/snippy
[23:54:49] Detected operating system: linux
[23:54:49] Enabling bundled linux tools.
[23:54:49] Found bwa - /usr/local/bin/bwa
[23:54:49] Found bcftools - /usr/local/bin/bcftools
[23:54:49] Found samtools - /usr/local/bin/samtools
[23:54:49] Found java - /usr/local/bin/java
[23:54:49] Found snpEff - /usr/local/bin/snpEff
[23:54:49] Found samclip - /usr/local/bin/samclip
[23:54:49] Found seqtk - /usr/local/bin/seqtk
[23:54:49] Found parallel - /usr/local/bin/parallel
[23:54:49] Found freebayes - /usr/local/bin/freebayes
[23:54:49] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:49] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:49] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:49] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:49] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:49] Found gzip - /usr/bin/gzip
[23:54:49] Found vt - /usr/local/bin/vt
[23:54:49] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:49] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:49] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:49] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:49] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:49] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:49] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:49] Using reference: /data/Analysis/refe.gbk
[23:54:49] Treating reference as 'genbank' format.
[23:54:49] Will use 16 CPU cores.
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R1.fastq.gz
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R2.fastq.gz
[23:54:49] Creating folder: HMS24017_S15
[23:54:49] Changing working directory: HMS24017_S15
[23:54:49] Creating reference folder: reference
[23:54:49] Extracting FASTA and GFF from reference.
[23:54:51] Wrote 1 sequences to ref.fa
[23:54:51] Wrote 4429 features to ref.gff
[23:54:51] Creating reference/snpeff.config
[23:54:51] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:51] Using BAM RG (Read Group) ID: HMS24017_S15
[23:54:51] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:51] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:52] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:52] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:52] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:55] Running: bwa mem  -Y -M -R '@RG\tID:HMS24017_S15\tSM:HMS24017_S15' -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 746630 sequences (160000202 bp)...
[M::process] read 218810 sequences (46953613 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 366940, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 259)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (215.34, 67.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 746630 reads in 39.279 CPU sec, 2.585 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 107505, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 260)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (215.68, 67.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 400000 records...
[M::mem_process_seqs] Processed 218810 reads in 12.831 CPU sec, 0.832 real sec
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24017_S15\tSM:HMS24017_S15 -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz
[main] Real time: 6.320 sec; CPU: 54.297 sec
[samclip] Total SAM records 967230, removed 76910, allowed 25086, passed 890320
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:55:04] Running: samtools index snps.bam 2>> snps.log
[23:55:04] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:55:04] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:55:06] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 10
          no. right trimmed                     : 74
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 87

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 87
       total no. variants observed              : 877
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:55:06] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:55:07] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:55:09] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:55:09] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:55:12] Marked 5332 heterozygous sites with 'n'
[23:55:12] Creating extra output files: BED GFF CSV TXT HTML
[23:55:12] Identified 877 variants.
[23:55:12] Result folder: HMS24017_S15
[23:55:12] Result files:
[23:55:12] * HMS24017_S15/snps.aligned.fa
[23:55:12] * HMS24017_S15/snps.bam
[23:55:12] * HMS24017_S15/snps.bam.bai
[23:55:12] * HMS24017_S15/snps.bed
[23:55:12] * HMS24017_S15/snps.consensus.fa
[23:55:12] * HMS24017_S15/snps.consensus.subs.fa
[23:55:12] * HMS24017_S15/snps.csv
[23:55:12] * HMS24017_S15/snps.filt.vcf
[23:55:12] * HMS24017_S15/snps.gff
[23:55:12] * HMS24017_S15/snps.html
[23:55:12] * HMS24017_S15/snps.log
[23:55:12] * HMS24017_S15/snps.raw.vcf
[23:55:12] * HMS24017_S15/snps.subs.vcf
[23:55:12] * HMS24017_S15/snps.tab
[23:55:12] * HMS24017_S15/snps.txt
[23:55:12] * HMS24017_S15/snps.vcf
[23:55:12] * HMS24017_S15/snps.vcf.gz
[23:55:12] * HMS24017_S15/snps.vcf.gz.csi
[23:55:12] Walltime used: 23 seconds
[23:55:12] Did you know? Snippy is a combination of SNP, Skippy, and snappy.
[23:55:12] Done.
[23:55:12] This is snippy 4.6.0
[23:55:12] Written by Torsten Seemann
[23:55:12] Obtained from https://github.com/tseemann/snippy
[23:55:12] Detected operating system: linux
[23:55:12] Enabling bundled linux tools.
[23:55:12] Found bwa - /usr/local/bin/bwa
[23:55:12] Found bcftools - /usr/local/bin/bcftools
[23:55:12] Found samtools - /usr/local/bin/samtools
[23:55:12] Found java - /usr/local/bin/java
[23:55:12] Found snpEff - /usr/local/bin/snpEff
[23:55:12] Found samclip - /usr/local/bin/samclip
[23:55:12] Found seqtk - /usr/local/bin/seqtk
[23:55:12] Found parallel - /usr/local/bin/parallel
[23:55:12] Found freebayes - /usr/local/bin/freebayes
[23:55:12] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:55:12] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:55:12] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:55:12] Found vcfuniq - /usr/local/bin/vcfuniq
[23:55:12] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:55:12] Found gzip - /usr/bin/gzip
[23:55:12] Found vt - /usr/local/bin/vt
[23:55:12] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:55:12] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:55:12] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:55:12] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:55:12] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:55:12] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:55:12] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:55:12] Using reference: /data/Analysis/refe.gbk
[23:55:12] Treating reference as 'genbank' format.
[23:55:12] Will use 16 CPU cores.
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R1.fastq.gz
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R2.fastq.gz
[23:55:12] Creating folder: HMS24046_S23
[23:55:12] Changing working directory: HMS24046_S23
[23:55:12] Creating reference folder: reference
[23:55:12] Extracting FASTA and GFF from reference.
[23:55:14] Wrote 1 sequences to ref.fa
[23:55:14] Wrote 4429 features to ref.gff
[23:55:14] Creating reference/snpeff.config
[23:55:14] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:55:14] Using BAM RG (Read Group) ID: HMS24046_S23
[23:55:14] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:55:14] Running: bwa index reference/ref.fa 2>> snps.log
[23:55:14] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:55:14] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:55:15] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:55:15] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:55:15] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:55:18] Running: bwa mem  -Y -M -R '@RG\tID:HMS24046_S23\tSM:HMS24046_S23' -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 593288 sequences (160000360 bp)...
[M::process] read 593558 sequences (160000118 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 290696, 6, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (235, 410, 549)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1177)
[M::mem_pestat] mean and std.dev: (357.00, 166.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1491)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (247, 310, 389)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 673)
[M::mem_pestat] mean and std.dev: (320.58, 111.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 815)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 593288 reads in 50.085 CPU sec, 3.126 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:55] Marked 8955 heterozygous sites with 'n'
[23:53:55] Creating extra output files: BED GFF CSV TXT HTML
[23:53:55] Identified 2484 variants.
[23:53:55] Result folder: HCU24002_S2
[23:53:55] Result files:
[23:53:55] * HCU24002_S2/snps.aligned.fa
[23:53:55] * HCU24002_S2/snps.bam
[23:53:55] * HCU24002_S2/snps.bam.bai
[23:53:55] * HCU24002_S2/snps.bed
[23:53:55] * HCU24002_S2/snps.consensus.fa
[23:53:55] * HCU24002_S2/snps.consensus.subs.fa
[23:53:55] * HCU24002_S2/snps.csv
[23:53:55] * HCU24002_S2/snps.filt.vcf
[23:53:55] * HCU24002_S2/snps.gff
[23:53:55] * HCU24002_S2/snps.html
[23:53:55] * HCU24002_S2/snps.log
[23:53:55] * HCU24002_S2/snps.raw.vcf
[23:53:55] * HCU24002_S2/snps.subs.vcf
[23:53:55] * HCU24002_S2/snps.tab
[23:53:55] * HCU24002_S2/snps.txt
[23:53:55] * HCU24002_S2/snps.vcf
[23:53:55] * HCU24002_S2/snps.vcf.gz
[23:53:55] * HCU24002_S2/snps.vcf.gz.csi
[23:53:55] Walltime used: 24 seconds
[23:53:55] Wishing you a life free of homopolymer errors.
[23:53:55] Done.
[23:53:55] This is snippy 4.6.0
[23:53:55] Written by Torsten Seemann
[23:53:55] Obtained from https://github.com/tseemann/snippy
[23:53:55] Detected operating system: linux
[23:53:55] Enabling bundled linux tools.
[23:53:55] Found bwa - /usr/local/bin/bwa
[23:53:55] Found bcftools - /usr/local/bin/bcftools
[23:53:55] Found samtools - /usr/local/bin/samtools
[23:53:55] Found java - /usr/local/bin/java
[23:53:55] Found snpEff - /usr/local/bin/snpEff
[23:53:55] Found samclip - /usr/local/bin/samclip
[23:53:55] Found seqtk - /usr/local/bin/seqtk
[23:53:55] Found parallel - /usr/local/bin/parallel
[23:53:55] Found freebayes - /usr/local/bin/freebayes
[23:53:55] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:55] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:55] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:55] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:55] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:55] Found gzip - /usr/bin/gzip
[23:53:55] Found vt - /usr/local/bin/vt
[23:53:55] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:55] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:55] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:55] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:55] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:55] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:55] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:55] Using reference: /data/Analysis/refe.gbk
[23:53:56] Treating reference as 'genbank' format.
[23:53:56] Will use 16 CPU cores.
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:53:56] Creating folder: HCU24010_S6
[23:53:56] Changing working directory: HCU24010_S6
[23:53:56] Creating reference folder: reference
[23:53:56] Extracting FASTA and GFF from reference.
[23:53:57] Wrote 1 sequences to ref.fa
[23:53:57] Wrote 4429 features to ref.gff
[23:53:57] Creating reference/snpeff.config
[23:53:57] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:57] Using BAM RG (Read Group) ID: HCU24010_S6
[23:53:57] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:57] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:58] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:58] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:58] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:02] Running: bwa mem  -Y -M -R '@RG\tID:HCU24010_S6\tSM:HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.716 CPU sec, 3.057 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.756 CPU sec, 3.219 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 49.486 CPU sec, 3.143 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 15.338 CPU sec, 0.965 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24010_S6\tSM:HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.889 sec; CPU: 167.280 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:18] Running: samtools index snps.bam 2>> snps.log
[23:54:19] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:19] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:23] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 9
          no. right trimmed                     : 88
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 101

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 101
       total no. variants observed              : 941
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:54:23] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:24] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:26] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:26] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:28] Marked 1145 heterozygous sites with 'n'
[23:54:28] Creating extra output files: BED GFF CSV TXT HTML
[23:54:28] Identified 941 variants.
[23:54:28] Result folder: HCU24010_S6
[23:54:28] Result files:
[23:54:28] * HCU24010_S6/snps.aligned.fa
[23:54:28] * HCU24010_S6/snps.bam
[23:54:28] * HCU24010_S6/snps.bam.bai
[23:54:28] * HCU24010_S6/snps.bed
[23:54:28] * HCU24010_S6/snps.consensus.fa
[23:54:28] * HCU24010_S6/snps.consensus.subs.fa
[23:54:28] * HCU24010_S6/snps.csv
[23:54:28] * HCU24010_S6/snps.filt.vcf
[23:54:28] * HCU24010_S6/snps.gff
[23:54:28] * HCU24010_S6/snps.html
[23:54:28] * HCU24010_S6/snps.log
[23:54:28] * HCU24010_S6/snps.raw.vcf
[23:54:28] * HCU24010_S6/snps.subs.vcf
[23:54:28] * HCU24010_S6/snps.tab
[23:54:28] * HCU24010_S6/snps.txt
[23:54:28] * HCU24010_S6/snps.vcf
[23:54:28] * HCU24010_S6/snps.vcf.gz
[23:54:28] * HCU24010_S6/snps.vcf.gz.csi
[23:54:28] Walltime used: 33 seconds
[23:54:28] Wishing you a life free of homopolymer errors.
[23:54:28] Done.
[23:54:29] This is snippy 4.6.0
[23:54:29] Written by Torsten Seemann
[23:54:29] Obtained from https://github.com/tseemann/snippy
[23:54:29] Detected operating system: linux
[23:54:29] Enabling bundled linux tools.
[23:54:29] Found bwa - /usr/local/bin/bwa
[23:54:29] Found bcftools - /usr/local/bin/bcftools
[23:54:29] Found samtools - /usr/local/bin/samtools
[23:54:29] Found java - /usr/local/bin/java
[23:54:29] Found snpEff - /usr/local/bin/snpEff
[23:54:29] Found samclip - /usr/local/bin/samclip
[23:54:29] Found seqtk - /usr/local/bin/seqtk
[23:54:29] Found parallel - /usr/local/bin/parallel
[23:54:29] Found freebayes - /usr/local/bin/freebayes
[23:54:29] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:29] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:29] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:29] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:29] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:29] Found gzip - /usr/bin/gzip
[23:54:29] Found vt - /usr/local/bin/vt
[23:54:29] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:29] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:29] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:29] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:29] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:29] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:29] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:29] Using reference: /data/Analysis/refe.gbk
[23:54:29] Treating reference as 'genbank' format.
[23:54:29] Will use 16 CPU cores.
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:54:29] Creating folder: HCU24011_S7
[23:54:29] Changing working directory: HCU24011_S7
[23:54:29] Creating reference folder: reference
[23:54:29] Extracting FASTA and GFF from reference.
[23:54:30] Wrote 1 sequences to ref.fa
[23:54:30] Wrote 4429 features to ref.gff
[23:54:30] Creating reference/snpeff.config
[23:54:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:30] Using BAM RG (Read Group) ID: HCU24011_S7
[23:54:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:32] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:35] Running: bwa mem  -Y -M -R '@RG\tID:HCU24011_S7\tSM:HCU24011_S7' -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 510314 sequences (133277700 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (52, 248478, 18, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (320, 504, 939)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2177)
[M::mem_pestat] mean and std.dev: (524.39, 308.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2796)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 281, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 610)
[M::mem_pestat] mean and std.dev: (292.95, 100.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 738)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 664, 1334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3814)
[M::mem_pestat] mean and std.dev: (839.61, 800.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5054)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (302, 521, 1337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3407)
[M::mem_pestat] mean and std.dev: (743.44, 552.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4442)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 510314 reads in 47.585 CPU sec, 3.060 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24011_S7\tSM:HCU24011_S7 -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz
[main] Real time: 5.537 sec; CPU: 49.200 sec
[samclip] Total SAM records 513584, removed 116348, allowed 35199, passed 397236
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:41] Running: samtools index snps.bam 2>> snps.log
[23:54:42] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:42] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:43] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 37
          no. right trimmed                     : 179
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 219

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 219
       total no. variants observed              : 2202
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:54:44] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:44] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:46] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:46] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:46] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:46] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:47] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:47] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:49] Marked 7775 heterozygous sites with 'n'
[23:54:49] Creating extra output files: BED GFF CSV TXT HTML
[23:54:49] Identified 2202 variants.
[23:54:49] Result folder: HCU24011_S7
[23:54:49] Result files:
[23:54:49] * HCU24011_S7/snps.aligned.fa
[23:54:49] * HCU24011_S7/snps.bam
[23:54:49] * HCU24011_S7/snps.bam.bai
[23:54:49] * HCU24011_S7/snps.bed
[23:54:49] * HCU24011_S7/snps.consensus.fa
[23:54:49] * HCU24011_S7/snps.consensus.subs.fa
[23:54:49] * HCU24011_S7/snps.csv
[23:54:49] * HCU24011_S7/snps.filt.vcf
[23:54:49] * HCU24011_S7/snps.gff
[23:54:49] * HCU24011_S7/snps.html
[23:54:49] * HCU24011_S7/snps.log
[23:54:49] * HCU24011_S7/snps.raw.vcf
[23:54:49] * HCU24011_S7/snps.subs.vcf
[23:54:49] * HCU24011_S7/snps.tab
[23:54:49] * HCU24011_S7/snps.txt
[23:54:49] * HCU24011_S7/snps.vcf
[23:54:49] * HCU24011_S7/snps.vcf.gz
[23:54:49] * HCU24011_S7/snps.vcf.gz.csi
[23:54:49] Walltime used: 20 seconds
[23:54:49] Wishing you a life free of homopolymer errors.
[23:54:49] Done.
[23:54:49] This is snippy 4.6.0
[23:54:49] Written by Torsten Seemann
[23:54:49] Obtained from https://github.com/tseemann/snippy
[23:54:49] Detected operating system: linux
[23:54:49] Enabling bundled linux tools.
[23:54:49] Found bwa - /usr/local/bin/bwa
[23:54:49] Found bcftools - /usr/local/bin/bcftools
[23:54:49] Found samtools - /usr/local/bin/samtools
[23:54:49] Found java - /usr/local/bin/java
[23:54:49] Found snpEff - /usr/local/bin/snpEff
[23:54:49] Found samclip - /usr/local/bin/samclip
[23:54:49] Found seqtk - /usr/local/bin/seqtk
[23:54:49] Found parallel - /usr/local/bin/parallel
[23:54:49] Found freebayes - /usr/local/bin/freebayes
[23:54:49] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:49] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:49] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:49] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:49] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:49] Found gzip - /usr/bin/gzip
[23:54:49] Found vt - /usr/local/bin/vt
[23:54:49] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:49] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:49] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:49] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:49] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:49] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:49] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:49] Using reference: /data/Analysis/refe.gbk
[23:54:49] Treating reference as 'genbank' format.
[23:54:49] Will use 16 CPU cores.
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R1.fastq.gz
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R2.fastq.gz
[23:54:49] Creating folder: HMS24017_S15
[23:54:49] Changing working directory: HMS24017_S15
[23:54:49] Creating reference folder: reference
[23:54:49] Extracting FASTA and GFF from reference.
[23:54:51] Wrote 1 sequences to ref.fa
[23:54:51] Wrote 4429 features to ref.gff
[23:54:51] Creating reference/snpeff.config
[23:54:51] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:51] Using BAM RG (Read Group) ID: HMS24017_S15
[23:54:51] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:51] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:52] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:52] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:52] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:55] Running: bwa mem  -Y -M -R '@RG\tID:HMS24017_S15\tSM:HMS24017_S15' -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 746630 sequences (160000202 bp)...
[M::process] read 218810 sequences (46953613 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 366940, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 259)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (215.34, 67.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 746630 reads in 39.279 CPU sec, 2.585 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 107505, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 260)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (215.68, 67.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 400000 records...
[M::mem_process_seqs] Processed 218810 reads in 12.831 CPU sec, 0.832 real sec
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24017_S15\tSM:HMS24017_S15 -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz
[main] Real time: 6.320 sec; CPU: 54.297 sec
[samclip] Total SAM records 967230, removed 76910, allowed 25086, passed 890320
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:55:04] Running: samtools index snps.bam 2>> snps.log
[23:55:04] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:55:04] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:55:06] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 10
          no. right trimmed                     : 74
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 87

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 87
       total no. variants observed              : 877
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:55:06] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:55:07] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:55:09] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:55:09] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:55:12] Marked 5332 heterozygous sites with 'n'
[23:55:12] Creating extra output files: BED GFF CSV TXT HTML
[23:55:12] Identified 877 variants.
[23:55:12] Result folder: HMS24017_S15
[23:55:12] Result files:
[23:55:12] * HMS24017_S15/snps.aligned.fa
[23:55:12] * HMS24017_S15/snps.bam
[23:55:12] * HMS24017_S15/snps.bam.bai
[23:55:12] * HMS24017_S15/snps.bed
[23:55:12] * HMS24017_S15/snps.consensus.fa
[23:55:12] * HMS24017_S15/snps.consensus.subs.fa
[23:55:12] * HMS24017_S15/snps.csv
[23:55:12] * HMS24017_S15/snps.filt.vcf
[23:55:12] * HMS24017_S15/snps.gff
[23:55:12] * HMS24017_S15/snps.html
[23:55:12] * HMS24017_S15/snps.log
[23:55:12] * HMS24017_S15/snps.raw.vcf
[23:55:12] * HMS24017_S15/snps.subs.vcf
[23:55:12] * HMS24017_S15/snps.tab
[23:55:12] * HMS24017_S15/snps.txt
[23:55:12] * HMS24017_S15/snps.vcf
[23:55:12] * HMS24017_S15/snps.vcf.gz
[23:55:12] * HMS24017_S15/snps.vcf.gz.csi
[23:55:12] Walltime used: 23 seconds
[23:55:12] Did you know? Snippy is a combination of SNP, Skippy, and snappy.
[23:55:12] Done.
[23:55:12] This is snippy 4.6.0
[23:55:12] Written by Torsten Seemann
[23:55:12] Obtained from https://github.com/tseemann/snippy
[23:55:12] Detected operating system: linux
[23:55:12] Enabling bundled linux tools.
[23:55:12] Found bwa - /usr/local/bin/bwa
[23:55:12] Found bcftools - /usr/local/bin/bcftools
[23:55:12] Found samtools - /usr/local/bin/samtools
[23:55:12] Found java - /usr/local/bin/java
[23:55:12] Found snpEff - /usr/local/bin/snpEff
[23:55:12] Found samclip - /usr/local/bin/samclip
[23:55:12] Found seqtk - /usr/local/bin/seqtk
[23:55:12] Found parallel - /usr/local/bin/parallel
[23:55:12] Found freebayes - /usr/local/bin/freebayes
[23:55:12] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:55:12] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:55:12] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:55:12] Found vcfuniq - /usr/local/bin/vcfuniq
[23:55:12] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:55:12] Found gzip - /usr/bin/gzip
[23:55:12] Found vt - /usr/local/bin/vt
[23:55:12] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:55:12] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:55:12] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:55:12] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:55:12] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:55:12] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:55:12] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:55:12] Using reference: /data/Analysis/refe.gbk
[23:55:12] Treating reference as 'genbank' format.
[23:55:12] Will use 16 CPU cores.
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R1.fastq.gz
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R2.fastq.gz
[23:55:12] Creating folder: HMS24046_S23
[23:55:12] Changing working directory: HMS24046_S23
[23:55:12] Creating reference folder: reference
[23:55:12] Extracting FASTA and GFF from reference.
[23:55:14] Wrote 1 sequences to ref.fa
[23:55:14] Wrote 4429 features to ref.gff
[23:55:14] Creating reference/snpeff.config
[23:55:14] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:55:14] Using BAM RG (Read Group) ID: HMS24046_S23
[23:55:14] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:55:14] Running: bwa index reference/ref.fa 2>> snps.log
[23:55:14] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:55:14] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:55:15] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:55:15] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:55:15] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:55:18] Running: bwa mem  -Y -M -R '@RG\tID:HMS24046_S23\tSM:HMS24046_S23' -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 593288 sequences (160000360 bp)...
[M::process] read 593558 sequences (160000118 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 290696, 6, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (235, 410, 549)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1177)
[M::mem_pestat] mean and std.dev: (357.00, 166.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1491)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (247, 310, 389)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 673)
[M::mem_pestat] mean and std.dev: (320.58, 111.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 815)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 593288 reads in 50.085 CPU sec, 3.126 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 290813, 12, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (246, 308, 387)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 669)
[M::mem_pestat] mean and std.dev: (319.18, 111.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 810)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1188, 1335, 2147)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4065)
[M::mem_pestat] mean and std.dev: (1270.92, 681.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5024)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (511, 819, 1070)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2188)
[M::mem_pestat] mean and std.dev: (613.22, 331.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2747)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 595752 sequences (160000212 bp)...
[M::mem_process_seqs] Processed 593558 reads in 52.371 CPU sec, 3.250 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::process] read 35140 sequences (9664990 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 291753, 9, 5)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (288, 347, 395)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (74, 609)
[M::mem_pestat] mean and std.dev: (333.00, 84.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 716)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (244, 307, 385)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 667)
[M::mem_pestat] mean and std.dev: (317.29, 110.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 808)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 595752 reads in 51.659 CPU sec, 3.280 real sec
[samclip] Processed 1200000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 17177, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (256, 321, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 700)
[M::mem_pestat] mean and std.dev: (334.50, 115.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 848)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 35140 reads in 3.534 CPU sec, 0.221 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24046_S23\tSM:HMS24046_S23 -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz
[main] Real time: 12.892 sec; CPU: 159.874 sec
[samclip] Total SAM records 1824229, removed 428700, allowed 109134, passed 1395529
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:55] Marked 8955 heterozygous sites with 'n'
[23:53:55] Creating extra output files: BED GFF CSV TXT HTML
[23:53:55] Identified 2484 variants.
[23:53:55] Result folder: HCU24002_S2
[23:53:55] Result files:
[23:53:55] * HCU24002_S2/snps.aligned.fa
[23:53:55] * HCU24002_S2/snps.bam
[23:53:55] * HCU24002_S2/snps.bam.bai
[23:53:55] * HCU24002_S2/snps.bed
[23:53:55] * HCU24002_S2/snps.consensus.fa
[23:53:55] * HCU24002_S2/snps.consensus.subs.fa
[23:53:55] * HCU24002_S2/snps.csv
[23:53:55] * HCU24002_S2/snps.filt.vcf
[23:53:55] * HCU24002_S2/snps.gff
[23:53:55] * HCU24002_S2/snps.html
[23:53:55] * HCU24002_S2/snps.log
[23:53:55] * HCU24002_S2/snps.raw.vcf
[23:53:55] * HCU24002_S2/snps.subs.vcf
[23:53:55] * HCU24002_S2/snps.tab
[23:53:55] * HCU24002_S2/snps.txt
[23:53:55] * HCU24002_S2/snps.vcf
[23:53:55] * HCU24002_S2/snps.vcf.gz
[23:53:55] * HCU24002_S2/snps.vcf.gz.csi
[23:53:55] Walltime used: 24 seconds
[23:53:55] Wishing you a life free of homopolymer errors.
[23:53:55] Done.
[23:53:55] This is snippy 4.6.0
[23:53:55] Written by Torsten Seemann
[23:53:55] Obtained from https://github.com/tseemann/snippy
[23:53:55] Detected operating system: linux
[23:53:55] Enabling bundled linux tools.
[23:53:55] Found bwa - /usr/local/bin/bwa
[23:53:55] Found bcftools - /usr/local/bin/bcftools
[23:53:55] Found samtools - /usr/local/bin/samtools
[23:53:55] Found java - /usr/local/bin/java
[23:53:55] Found snpEff - /usr/local/bin/snpEff
[23:53:55] Found samclip - /usr/local/bin/samclip
[23:53:55] Found seqtk - /usr/local/bin/seqtk
[23:53:55] Found parallel - /usr/local/bin/parallel
[23:53:55] Found freebayes - /usr/local/bin/freebayes
[23:53:55] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:55] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:55] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:55] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:55] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:55] Found gzip - /usr/bin/gzip
[23:53:55] Found vt - /usr/local/bin/vt
[23:53:55] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:55] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:55] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:55] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:55] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:55] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:55] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:55] Using reference: /data/Analysis/refe.gbk
[23:53:56] Treating reference as 'genbank' format.
[23:53:56] Will use 16 CPU cores.
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:53:56] Creating folder: HCU24010_S6
[23:53:56] Changing working directory: HCU24010_S6
[23:53:56] Creating reference folder: reference
[23:53:56] Extracting FASTA and GFF from reference.
[23:53:57] Wrote 1 sequences to ref.fa
[23:53:57] Wrote 4429 features to ref.gff
[23:53:57] Creating reference/snpeff.config
[23:53:57] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:57] Using BAM RG (Read Group) ID: HCU24010_S6
[23:53:57] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:57] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:58] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:58] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:58] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:02] Running: bwa mem  -Y -M -R '@RG\tID:HCU24010_S6\tSM:HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.716 CPU sec, 3.057 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.756 CPU sec, 3.219 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 49.486 CPU sec, 3.143 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 15.338 CPU sec, 0.965 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24010_S6\tSM:HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.889 sec; CPU: 167.280 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:18] Running: samtools index snps.bam 2>> snps.log
[23:54:19] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:19] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:23] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 9
          no. right trimmed                     : 88
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 101

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 101
       total no. variants observed              : 941
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:54:23] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:24] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:26] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:26] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:28] Marked 1145 heterozygous sites with 'n'
[23:54:28] Creating extra output files: BED GFF CSV TXT HTML
[23:54:28] Identified 941 variants.
[23:54:28] Result folder: HCU24010_S6
[23:54:28] Result files:
[23:54:28] * HCU24010_S6/snps.aligned.fa
[23:54:28] * HCU24010_S6/snps.bam
[23:54:28] * HCU24010_S6/snps.bam.bai
[23:54:28] * HCU24010_S6/snps.bed
[23:54:28] * HCU24010_S6/snps.consensus.fa
[23:54:28] * HCU24010_S6/snps.consensus.subs.fa
[23:54:28] * HCU24010_S6/snps.csv
[23:54:28] * HCU24010_S6/snps.filt.vcf
[23:54:28] * HCU24010_S6/snps.gff
[23:54:28] * HCU24010_S6/snps.html
[23:54:28] * HCU24010_S6/snps.log
[23:54:28] * HCU24010_S6/snps.raw.vcf
[23:54:28] * HCU24010_S6/snps.subs.vcf
[23:54:28] * HCU24010_S6/snps.tab
[23:54:28] * HCU24010_S6/snps.txt
[23:54:28] * HCU24010_S6/snps.vcf
[23:54:28] * HCU24010_S6/snps.vcf.gz
[23:54:28] * HCU24010_S6/snps.vcf.gz.csi
[23:54:28] Walltime used: 33 seconds
[23:54:28] Wishing you a life free of homopolymer errors.
[23:54:28] Done.
[23:54:29] This is snippy 4.6.0
[23:54:29] Written by Torsten Seemann
[23:54:29] Obtained from https://github.com/tseemann/snippy
[23:54:29] Detected operating system: linux
[23:54:29] Enabling bundled linux tools.
[23:54:29] Found bwa - /usr/local/bin/bwa
[23:54:29] Found bcftools - /usr/local/bin/bcftools
[23:54:29] Found samtools - /usr/local/bin/samtools
[23:54:29] Found java - /usr/local/bin/java
[23:54:29] Found snpEff - /usr/local/bin/snpEff
[23:54:29] Found samclip - /usr/local/bin/samclip
[23:54:29] Found seqtk - /usr/local/bin/seqtk
[23:54:29] Found parallel - /usr/local/bin/parallel
[23:54:29] Found freebayes - /usr/local/bin/freebayes
[23:54:29] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:29] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:29] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:29] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:29] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:29] Found gzip - /usr/bin/gzip
[23:54:29] Found vt - /usr/local/bin/vt
[23:54:29] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:29] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:29] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:29] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:29] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:29] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:29] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:29] Using reference: /data/Analysis/refe.gbk
[23:54:29] Treating reference as 'genbank' format.
[23:54:29] Will use 16 CPU cores.
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:54:29] Creating folder: HCU24011_S7
[23:54:29] Changing working directory: HCU24011_S7
[23:54:29] Creating reference folder: reference
[23:54:29] Extracting FASTA and GFF from reference.
[23:54:30] Wrote 1 sequences to ref.fa
[23:54:30] Wrote 4429 features to ref.gff
[23:54:30] Creating reference/snpeff.config
[23:54:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:30] Using BAM RG (Read Group) ID: HCU24011_S7
[23:54:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:32] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:35] Running: bwa mem  -Y -M -R '@RG\tID:HCU24011_S7\tSM:HCU24011_S7' -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 510314 sequences (133277700 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (52, 248478, 18, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (320, 504, 939)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2177)
[M::mem_pestat] mean and std.dev: (524.39, 308.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2796)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 281, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 610)
[M::mem_pestat] mean and std.dev: (292.95, 100.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 738)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 664, 1334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3814)
[M::mem_pestat] mean and std.dev: (839.61, 800.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5054)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (302, 521, 1337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3407)
[M::mem_pestat] mean and std.dev: (743.44, 552.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4442)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 510314 reads in 47.585 CPU sec, 3.060 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24011_S7\tSM:HCU24011_S7 -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz
[main] Real time: 5.537 sec; CPU: 49.200 sec
[samclip] Total SAM records 513584, removed 116348, allowed 35199, passed 397236
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:41] Running: samtools index snps.bam 2>> snps.log
[23:54:42] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:42] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:43] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 37
          no. right trimmed                     : 179
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 219

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 219
       total no. variants observed              : 2202
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:54:44] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:44] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:46] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:46] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:46] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:46] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:47] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:47] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:49] Marked 7775 heterozygous sites with 'n'
[23:54:49] Creating extra output files: BED GFF CSV TXT HTML
[23:54:49] Identified 2202 variants.
[23:54:49] Result folder: HCU24011_S7
[23:54:49] Result files:
[23:54:49] * HCU24011_S7/snps.aligned.fa
[23:54:49] * HCU24011_S7/snps.bam
[23:54:49] * HCU24011_S7/snps.bam.bai
[23:54:49] * HCU24011_S7/snps.bed
[23:54:49] * HCU24011_S7/snps.consensus.fa
[23:54:49] * HCU24011_S7/snps.consensus.subs.fa
[23:54:49] * HCU24011_S7/snps.csv
[23:54:49] * HCU24011_S7/snps.filt.vcf
[23:54:49] * HCU24011_S7/snps.gff
[23:54:49] * HCU24011_S7/snps.html
[23:54:49] * HCU24011_S7/snps.log
[23:54:49] * HCU24011_S7/snps.raw.vcf
[23:54:49] * HCU24011_S7/snps.subs.vcf
[23:54:49] * HCU24011_S7/snps.tab
[23:54:49] * HCU24011_S7/snps.txt
[23:54:49] * HCU24011_S7/snps.vcf
[23:54:49] * HCU24011_S7/snps.vcf.gz
[23:54:49] * HCU24011_S7/snps.vcf.gz.csi
[23:54:49] Walltime used: 20 seconds
[23:54:49] Wishing you a life free of homopolymer errors.
[23:54:49] Done.
[23:54:49] This is snippy 4.6.0
[23:54:49] Written by Torsten Seemann
[23:54:49] Obtained from https://github.com/tseemann/snippy
[23:54:49] Detected operating system: linux
[23:54:49] Enabling bundled linux tools.
[23:54:49] Found bwa - /usr/local/bin/bwa
[23:54:49] Found bcftools - /usr/local/bin/bcftools
[23:54:49] Found samtools - /usr/local/bin/samtools
[23:54:49] Found java - /usr/local/bin/java
[23:54:49] Found snpEff - /usr/local/bin/snpEff
[23:54:49] Found samclip - /usr/local/bin/samclip
[23:54:49] Found seqtk - /usr/local/bin/seqtk
[23:54:49] Found parallel - /usr/local/bin/parallel
[23:54:49] Found freebayes - /usr/local/bin/freebayes
[23:54:49] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:49] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:49] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:49] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:49] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:49] Found gzip - /usr/bin/gzip
[23:54:49] Found vt - /usr/local/bin/vt
[23:54:49] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:49] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:49] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:49] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:49] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:49] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:49] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:49] Using reference: /data/Analysis/refe.gbk
[23:54:49] Treating reference as 'genbank' format.
[23:54:49] Will use 16 CPU cores.
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R1.fastq.gz
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R2.fastq.gz
[23:54:49] Creating folder: HMS24017_S15
[23:54:49] Changing working directory: HMS24017_S15
[23:54:49] Creating reference folder: reference
[23:54:49] Extracting FASTA and GFF from reference.
[23:54:51] Wrote 1 sequences to ref.fa
[23:54:51] Wrote 4429 features to ref.gff
[23:54:51] Creating reference/snpeff.config
[23:54:51] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:51] Using BAM RG (Read Group) ID: HMS24017_S15
[23:54:51] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:51] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:52] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:52] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:52] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:55] Running: bwa mem  -Y -M -R '@RG\tID:HMS24017_S15\tSM:HMS24017_S15' -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 746630 sequences (160000202 bp)...
[M::process] read 218810 sequences (46953613 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 366940, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 259)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (215.34, 67.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 746630 reads in 39.279 CPU sec, 2.585 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 107505, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 260)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (215.68, 67.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 400000 records...
[M::mem_process_seqs] Processed 218810 reads in 12.831 CPU sec, 0.832 real sec
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24017_S15\tSM:HMS24017_S15 -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz
[main] Real time: 6.320 sec; CPU: 54.297 sec
[samclip] Total SAM records 967230, removed 76910, allowed 25086, passed 890320
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:55:04] Running: samtools index snps.bam 2>> snps.log
[23:55:04] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:55:04] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:55:06] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 10
          no. right trimmed                     : 74
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 87

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 87
       total no. variants observed              : 877
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:55:06] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:55:07] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:55:09] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:55:09] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:55:12] Marked 5332 heterozygous sites with 'n'
[23:55:12] Creating extra output files: BED GFF CSV TXT HTML
[23:55:12] Identified 877 variants.
[23:55:12] Result folder: HMS24017_S15
[23:55:12] Result files:
[23:55:12] * HMS24017_S15/snps.aligned.fa
[23:55:12] * HMS24017_S15/snps.bam
[23:55:12] * HMS24017_S15/snps.bam.bai
[23:55:12] * HMS24017_S15/snps.bed
[23:55:12] * HMS24017_S15/snps.consensus.fa
[23:55:12] * HMS24017_S15/snps.consensus.subs.fa
[23:55:12] * HMS24017_S15/snps.csv
[23:55:12] * HMS24017_S15/snps.filt.vcf
[23:55:12] * HMS24017_S15/snps.gff
[23:55:12] * HMS24017_S15/snps.html
[23:55:12] * HMS24017_S15/snps.log
[23:55:12] * HMS24017_S15/snps.raw.vcf
[23:55:12] * HMS24017_S15/snps.subs.vcf
[23:55:12] * HMS24017_S15/snps.tab
[23:55:12] * HMS24017_S15/snps.txt
[23:55:12] * HMS24017_S15/snps.vcf
[23:55:12] * HMS24017_S15/snps.vcf.gz
[23:55:12] * HMS24017_S15/snps.vcf.gz.csi
[23:55:12] Walltime used: 23 seconds
[23:55:12] Did you know? Snippy is a combination of SNP, Skippy, and snappy.
[23:55:12] Done.
[23:55:12] This is snippy 4.6.0
[23:55:12] Written by Torsten Seemann
[23:55:12] Obtained from https://github.com/tseemann/snippy
[23:55:12] Detected operating system: linux
[23:55:12] Enabling bundled linux tools.
[23:55:12] Found bwa - /usr/local/bin/bwa
[23:55:12] Found bcftools - /usr/local/bin/bcftools
[23:55:12] Found samtools - /usr/local/bin/samtools
[23:55:12] Found java - /usr/local/bin/java
[23:55:12] Found snpEff - /usr/local/bin/snpEff
[23:55:12] Found samclip - /usr/local/bin/samclip
[23:55:12] Found seqtk - /usr/local/bin/seqtk
[23:55:12] Found parallel - /usr/local/bin/parallel
[23:55:12] Found freebayes - /usr/local/bin/freebayes
[23:55:12] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:55:12] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:55:12] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:55:12] Found vcfuniq - /usr/local/bin/vcfuniq
[23:55:12] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:55:12] Found gzip - /usr/bin/gzip
[23:55:12] Found vt - /usr/local/bin/vt
[23:55:12] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:55:12] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:55:12] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:55:12] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:55:12] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:55:12] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:55:12] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:55:12] Using reference: /data/Analysis/refe.gbk
[23:55:12] Treating reference as 'genbank' format.
[23:55:12] Will use 16 CPU cores.
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R1.fastq.gz
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R2.fastq.gz
[23:55:12] Creating folder: HMS24046_S23
[23:55:12] Changing working directory: HMS24046_S23
[23:55:12] Creating reference folder: reference
[23:55:12] Extracting FASTA and GFF from reference.
[23:55:14] Wrote 1 sequences to ref.fa
[23:55:14] Wrote 4429 features to ref.gff
[23:55:14] Creating reference/snpeff.config
[23:55:14] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:55:14] Using BAM RG (Read Group) ID: HMS24046_S23
[23:55:14] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:55:14] Running: bwa index reference/ref.fa 2>> snps.log
[23:55:14] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:55:14] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:55:15] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:55:15] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:55:15] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:55:18] Running: bwa mem  -Y -M -R '@RG\tID:HMS24046_S23\tSM:HMS24046_S23' -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 593288 sequences (160000360 bp)...
[M::process] read 593558 sequences (160000118 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 290696, 6, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (235, 410, 549)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1177)
[M::mem_pestat] mean and std.dev: (357.00, 166.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1491)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (247, 310, 389)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 673)
[M::mem_pestat] mean and std.dev: (320.58, 111.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 815)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 593288 reads in 50.085 CPU sec, 3.126 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 290813, 12, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (246, 308, 387)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 669)
[M::mem_pestat] mean and std.dev: (319.18, 111.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 810)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1188, 1335, 2147)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4065)
[M::mem_pestat] mean and std.dev: (1270.92, 681.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5024)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (511, 819, 1070)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2188)
[M::mem_pestat] mean and std.dev: (613.22, 331.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2747)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 595752 sequences (160000212 bp)...
[M::mem_process_seqs] Processed 593558 reads in 52.371 CPU sec, 3.250 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::process] read 35140 sequences (9664990 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 291753, 9, 5)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (288, 347, 395)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (74, 609)
[M::mem_pestat] mean and std.dev: (333.00, 84.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 716)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (244, 307, 385)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 667)
[M::mem_pestat] mean and std.dev: (317.29, 110.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 808)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 595752 reads in 51.659 CPU sec, 3.280 real sec
[samclip] Processed 1200000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 17177, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (256, 321, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 700)
[M::mem_pestat] mean and std.dev: (334.50, 115.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 848)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 35140 reads in 3.534 CPU sec, 0.221 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24046_S23\tSM:HMS24046_S23 -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz
[main] Real time: 12.892 sec; CPU: 159.874 sec
[samclip] Total SAM records 1824229, removed 428700, allowed 109134, passed 1395529
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:55:34] Running: samtools index snps.bam 2>> snps.log
[23:55:35] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:55:35] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:55] Marked 8955 heterozygous sites with 'n'
[23:53:55] Creating extra output files: BED GFF CSV TXT HTML
[23:53:55] Identified 2484 variants.
[23:53:55] Result folder: HCU24002_S2
[23:53:55] Result files:
[23:53:55] * HCU24002_S2/snps.aligned.fa
[23:53:55] * HCU24002_S2/snps.bam
[23:53:55] * HCU24002_S2/snps.bam.bai
[23:53:55] * HCU24002_S2/snps.bed
[23:53:55] * HCU24002_S2/snps.consensus.fa
[23:53:55] * HCU24002_S2/snps.consensus.subs.fa
[23:53:55] * HCU24002_S2/snps.csv
[23:53:55] * HCU24002_S2/snps.filt.vcf
[23:53:55] * HCU24002_S2/snps.gff
[23:53:55] * HCU24002_S2/snps.html
[23:53:55] * HCU24002_S2/snps.log
[23:53:55] * HCU24002_S2/snps.raw.vcf
[23:53:55] * HCU24002_S2/snps.subs.vcf
[23:53:55] * HCU24002_S2/snps.tab
[23:53:55] * HCU24002_S2/snps.txt
[23:53:55] * HCU24002_S2/snps.vcf
[23:53:55] * HCU24002_S2/snps.vcf.gz
[23:53:55] * HCU24002_S2/snps.vcf.gz.csi
[23:53:55] Walltime used: 24 seconds
[23:53:55] Wishing you a life free of homopolymer errors.
[23:53:55] Done.
[23:53:55] This is snippy 4.6.0
[23:53:55] Written by Torsten Seemann
[23:53:55] Obtained from https://github.com/tseemann/snippy
[23:53:55] Detected operating system: linux
[23:53:55] Enabling bundled linux tools.
[23:53:55] Found bwa - /usr/local/bin/bwa
[23:53:55] Found bcftools - /usr/local/bin/bcftools
[23:53:55] Found samtools - /usr/local/bin/samtools
[23:53:55] Found java - /usr/local/bin/java
[23:53:55] Found snpEff - /usr/local/bin/snpEff
[23:53:55] Found samclip - /usr/local/bin/samclip
[23:53:55] Found seqtk - /usr/local/bin/seqtk
[23:53:55] Found parallel - /usr/local/bin/parallel
[23:53:55] Found freebayes - /usr/local/bin/freebayes
[23:53:55] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:55] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:55] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:55] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:55] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:55] Found gzip - /usr/bin/gzip
[23:53:55] Found vt - /usr/local/bin/vt
[23:53:55] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:55] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:55] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:55] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:55] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:55] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:55] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:55] Using reference: /data/Analysis/refe.gbk
[23:53:56] Treating reference as 'genbank' format.
[23:53:56] Will use 16 CPU cores.
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:53:56] Creating folder: HCU24010_S6
[23:53:56] Changing working directory: HCU24010_S6
[23:53:56] Creating reference folder: reference
[23:53:56] Extracting FASTA and GFF from reference.
[23:53:57] Wrote 1 sequences to ref.fa
[23:53:57] Wrote 4429 features to ref.gff
[23:53:57] Creating reference/snpeff.config
[23:53:57] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:57] Using BAM RG (Read Group) ID: HCU24010_S6
[23:53:57] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:57] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:58] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:58] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:58] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:02] Running: bwa mem  -Y -M -R '@RG\tID:HCU24010_S6\tSM:HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.716 CPU sec, 3.057 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.756 CPU sec, 3.219 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 49.486 CPU sec, 3.143 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 15.338 CPU sec, 0.965 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24010_S6\tSM:HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.889 sec; CPU: 167.280 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:18] Running: samtools index snps.bam 2>> snps.log
[23:54:19] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:19] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:23] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 9
          no. right trimmed                     : 88
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 101

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 101
       total no. variants observed              : 941
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:54:23] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:24] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:26] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:26] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:28] Marked 1145 heterozygous sites with 'n'
[23:54:28] Creating extra output files: BED GFF CSV TXT HTML
[23:54:28] Identified 941 variants.
[23:54:28] Result folder: HCU24010_S6
[23:54:28] Result files:
[23:54:28] * HCU24010_S6/snps.aligned.fa
[23:54:28] * HCU24010_S6/snps.bam
[23:54:28] * HCU24010_S6/snps.bam.bai
[23:54:28] * HCU24010_S6/snps.bed
[23:54:28] * HCU24010_S6/snps.consensus.fa
[23:54:28] * HCU24010_S6/snps.consensus.subs.fa
[23:54:28] * HCU24010_S6/snps.csv
[23:54:28] * HCU24010_S6/snps.filt.vcf
[23:54:28] * HCU24010_S6/snps.gff
[23:54:28] * HCU24010_S6/snps.html
[23:54:28] * HCU24010_S6/snps.log
[23:54:28] * HCU24010_S6/snps.raw.vcf
[23:54:28] * HCU24010_S6/snps.subs.vcf
[23:54:28] * HCU24010_S6/snps.tab
[23:54:28] * HCU24010_S6/snps.txt
[23:54:28] * HCU24010_S6/snps.vcf
[23:54:28] * HCU24010_S6/snps.vcf.gz
[23:54:28] * HCU24010_S6/snps.vcf.gz.csi
[23:54:28] Walltime used: 33 seconds
[23:54:28] Wishing you a life free of homopolymer errors.
[23:54:28] Done.
[23:54:29] This is snippy 4.6.0
[23:54:29] Written by Torsten Seemann
[23:54:29] Obtained from https://github.com/tseemann/snippy
[23:54:29] Detected operating system: linux
[23:54:29] Enabling bundled linux tools.
[23:54:29] Found bwa - /usr/local/bin/bwa
[23:54:29] Found bcftools - /usr/local/bin/bcftools
[23:54:29] Found samtools - /usr/local/bin/samtools
[23:54:29] Found java - /usr/local/bin/java
[23:54:29] Found snpEff - /usr/local/bin/snpEff
[23:54:29] Found samclip - /usr/local/bin/samclip
[23:54:29] Found seqtk - /usr/local/bin/seqtk
[23:54:29] Found parallel - /usr/local/bin/parallel
[23:54:29] Found freebayes - /usr/local/bin/freebayes
[23:54:29] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:29] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:29] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:29] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:29] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:29] Found gzip - /usr/bin/gzip
[23:54:29] Found vt - /usr/local/bin/vt
[23:54:29] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:29] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:29] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:29] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:29] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:29] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:29] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:29] Using reference: /data/Analysis/refe.gbk
[23:54:29] Treating reference as 'genbank' format.
[23:54:29] Will use 16 CPU cores.
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:54:29] Creating folder: HCU24011_S7
[23:54:29] Changing working directory: HCU24011_S7
[23:54:29] Creating reference folder: reference
[23:54:29] Extracting FASTA and GFF from reference.
[23:54:30] Wrote 1 sequences to ref.fa
[23:54:30] Wrote 4429 features to ref.gff
[23:54:30] Creating reference/snpeff.config
[23:54:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:30] Using BAM RG (Read Group) ID: HCU24011_S7
[23:54:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:32] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:35] Running: bwa mem  -Y -M -R '@RG\tID:HCU24011_S7\tSM:HCU24011_S7' -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 510314 sequences (133277700 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (52, 248478, 18, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (320, 504, 939)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2177)
[M::mem_pestat] mean and std.dev: (524.39, 308.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2796)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 281, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 610)
[M::mem_pestat] mean and std.dev: (292.95, 100.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 738)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 664, 1334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3814)
[M::mem_pestat] mean and std.dev: (839.61, 800.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5054)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (302, 521, 1337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3407)
[M::mem_pestat] mean and std.dev: (743.44, 552.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4442)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 510314 reads in 47.585 CPU sec, 3.060 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24011_S7\tSM:HCU24011_S7 -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz
[main] Real time: 5.537 sec; CPU: 49.200 sec
[samclip] Total SAM records 513584, removed 116348, allowed 35199, passed 397236
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:41] Running: samtools index snps.bam 2>> snps.log
[23:54:42] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:42] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:43] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 37
          no. right trimmed                     : 179
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 219

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 219
       total no. variants observed              : 2202
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:54:44] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:44] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:46] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:46] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:46] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:46] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:47] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:47] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:49] Marked 7775 heterozygous sites with 'n'
[23:54:49] Creating extra output files: BED GFF CSV TXT HTML
[23:54:49] Identified 2202 variants.
[23:54:49] Result folder: HCU24011_S7
[23:54:49] Result files:
[23:54:49] * HCU24011_S7/snps.aligned.fa
[23:54:49] * HCU24011_S7/snps.bam
[23:54:49] * HCU24011_S7/snps.bam.bai
[23:54:49] * HCU24011_S7/snps.bed
[23:54:49] * HCU24011_S7/snps.consensus.fa
[23:54:49] * HCU24011_S7/snps.consensus.subs.fa
[23:54:49] * HCU24011_S7/snps.csv
[23:54:49] * HCU24011_S7/snps.filt.vcf
[23:54:49] * HCU24011_S7/snps.gff
[23:54:49] * HCU24011_S7/snps.html
[23:54:49] * HCU24011_S7/snps.log
[23:54:49] * HCU24011_S7/snps.raw.vcf
[23:54:49] * HCU24011_S7/snps.subs.vcf
[23:54:49] * HCU24011_S7/snps.tab
[23:54:49] * HCU24011_S7/snps.txt
[23:54:49] * HCU24011_S7/snps.vcf
[23:54:49] * HCU24011_S7/snps.vcf.gz
[23:54:49] * HCU24011_S7/snps.vcf.gz.csi
[23:54:49] Walltime used: 20 seconds
[23:54:49] Wishing you a life free of homopolymer errors.
[23:54:49] Done.
[23:54:49] This is snippy 4.6.0
[23:54:49] Written by Torsten Seemann
[23:54:49] Obtained from https://github.com/tseemann/snippy
[23:54:49] Detected operating system: linux
[23:54:49] Enabling bundled linux tools.
[23:54:49] Found bwa - /usr/local/bin/bwa
[23:54:49] Found bcftools - /usr/local/bin/bcftools
[23:54:49] Found samtools - /usr/local/bin/samtools
[23:54:49] Found java - /usr/local/bin/java
[23:54:49] Found snpEff - /usr/local/bin/snpEff
[23:54:49] Found samclip - /usr/local/bin/samclip
[23:54:49] Found seqtk - /usr/local/bin/seqtk
[23:54:49] Found parallel - /usr/local/bin/parallel
[23:54:49] Found freebayes - /usr/local/bin/freebayes
[23:54:49] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:49] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:49] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:49] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:49] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:49] Found gzip - /usr/bin/gzip
[23:54:49] Found vt - /usr/local/bin/vt
[23:54:49] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:49] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:49] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:49] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:49] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:49] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:49] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:49] Using reference: /data/Analysis/refe.gbk
[23:54:49] Treating reference as 'genbank' format.
[23:54:49] Will use 16 CPU cores.
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R1.fastq.gz
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R2.fastq.gz
[23:54:49] Creating folder: HMS24017_S15
[23:54:49] Changing working directory: HMS24017_S15
[23:54:49] Creating reference folder: reference
[23:54:49] Extracting FASTA and GFF from reference.
[23:54:51] Wrote 1 sequences to ref.fa
[23:54:51] Wrote 4429 features to ref.gff
[23:54:51] Creating reference/snpeff.config
[23:54:51] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:51] Using BAM RG (Read Group) ID: HMS24017_S15
[23:54:51] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:51] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:52] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:52] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:52] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:55] Running: bwa mem  -Y -M -R '@RG\tID:HMS24017_S15\tSM:HMS24017_S15' -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 746630 sequences (160000202 bp)...
[M::process] read 218810 sequences (46953613 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 366940, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 259)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (215.34, 67.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 746630 reads in 39.279 CPU sec, 2.585 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 107505, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 260)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (215.68, 67.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 400000 records...
[M::mem_process_seqs] Processed 218810 reads in 12.831 CPU sec, 0.832 real sec
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24017_S15\tSM:HMS24017_S15 -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz
[main] Real time: 6.320 sec; CPU: 54.297 sec
[samclip] Total SAM records 967230, removed 76910, allowed 25086, passed 890320
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:55:04] Running: samtools index snps.bam 2>> snps.log
[23:55:04] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:55:04] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:55:06] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 10
          no. right trimmed                     : 74
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 87

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 87
       total no. variants observed              : 877
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:55:06] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:55:07] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:55:09] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:55:09] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:55:12] Marked 5332 heterozygous sites with 'n'
[23:55:12] Creating extra output files: BED GFF CSV TXT HTML
[23:55:12] Identified 877 variants.
[23:55:12] Result folder: HMS24017_S15
[23:55:12] Result files:
[23:55:12] * HMS24017_S15/snps.aligned.fa
[23:55:12] * HMS24017_S15/snps.bam
[23:55:12] * HMS24017_S15/snps.bam.bai
[23:55:12] * HMS24017_S15/snps.bed
[23:55:12] * HMS24017_S15/snps.consensus.fa
[23:55:12] * HMS24017_S15/snps.consensus.subs.fa
[23:55:12] * HMS24017_S15/snps.csv
[23:55:12] * HMS24017_S15/snps.filt.vcf
[23:55:12] * HMS24017_S15/snps.gff
[23:55:12] * HMS24017_S15/snps.html
[23:55:12] * HMS24017_S15/snps.log
[23:55:12] * HMS24017_S15/snps.raw.vcf
[23:55:12] * HMS24017_S15/snps.subs.vcf
[23:55:12] * HMS24017_S15/snps.tab
[23:55:12] * HMS24017_S15/snps.txt
[23:55:12] * HMS24017_S15/snps.vcf
[23:55:12] * HMS24017_S15/snps.vcf.gz
[23:55:12] * HMS24017_S15/snps.vcf.gz.csi
[23:55:12] Walltime used: 23 seconds
[23:55:12] Did you know? Snippy is a combination of SNP, Skippy, and snappy.
[23:55:12] Done.
[23:55:12] This is snippy 4.6.0
[23:55:12] Written by Torsten Seemann
[23:55:12] Obtained from https://github.com/tseemann/snippy
[23:55:12] Detected operating system: linux
[23:55:12] Enabling bundled linux tools.
[23:55:12] Found bwa - /usr/local/bin/bwa
[23:55:12] Found bcftools - /usr/local/bin/bcftools
[23:55:12] Found samtools - /usr/local/bin/samtools
[23:55:12] Found java - /usr/local/bin/java
[23:55:12] Found snpEff - /usr/local/bin/snpEff
[23:55:12] Found samclip - /usr/local/bin/samclip
[23:55:12] Found seqtk - /usr/local/bin/seqtk
[23:55:12] Found parallel - /usr/local/bin/parallel
[23:55:12] Found freebayes - /usr/local/bin/freebayes
[23:55:12] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:55:12] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:55:12] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:55:12] Found vcfuniq - /usr/local/bin/vcfuniq
[23:55:12] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:55:12] Found gzip - /usr/bin/gzip
[23:55:12] Found vt - /usr/local/bin/vt
[23:55:12] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:55:12] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:55:12] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:55:12] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:55:12] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:55:12] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:55:12] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:55:12] Using reference: /data/Analysis/refe.gbk
[23:55:12] Treating reference as 'genbank' format.
[23:55:12] Will use 16 CPU cores.
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R1.fastq.gz
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R2.fastq.gz
[23:55:12] Creating folder: HMS24046_S23
[23:55:12] Changing working directory: HMS24046_S23
[23:55:12] Creating reference folder: reference
[23:55:12] Extracting FASTA and GFF from reference.
[23:55:14] Wrote 1 sequences to ref.fa
[23:55:14] Wrote 4429 features to ref.gff
[23:55:14] Creating reference/snpeff.config
[23:55:14] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:55:14] Using BAM RG (Read Group) ID: HMS24046_S23
[23:55:14] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:55:14] Running: bwa index reference/ref.fa 2>> snps.log
[23:55:14] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:55:14] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:55:15] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:55:15] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:55:15] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:55:18] Running: bwa mem  -Y -M -R '@RG\tID:HMS24046_S23\tSM:HMS24046_S23' -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 593288 sequences (160000360 bp)...
[M::process] read 593558 sequences (160000118 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 290696, 6, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (235, 410, 549)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1177)
[M::mem_pestat] mean and std.dev: (357.00, 166.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1491)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (247, 310, 389)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 673)
[M::mem_pestat] mean and std.dev: (320.58, 111.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 815)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 593288 reads in 50.085 CPU sec, 3.126 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 290813, 12, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (246, 308, 387)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 669)
[M::mem_pestat] mean and std.dev: (319.18, 111.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 810)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1188, 1335, 2147)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4065)
[M::mem_pestat] mean and std.dev: (1270.92, 681.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5024)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (511, 819, 1070)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2188)
[M::mem_pestat] mean and std.dev: (613.22, 331.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2747)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 595752 sequences (160000212 bp)...
[M::mem_process_seqs] Processed 593558 reads in 52.371 CPU sec, 3.250 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::process] read 35140 sequences (9664990 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 291753, 9, 5)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (288, 347, 395)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (74, 609)
[M::mem_pestat] mean and std.dev: (333.00, 84.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 716)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (244, 307, 385)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 667)
[M::mem_pestat] mean and std.dev: (317.29, 110.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 808)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 595752 reads in 51.659 CPU sec, 3.280 real sec
[samclip] Processed 1200000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 17177, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (256, 321, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 700)
[M::mem_pestat] mean and std.dev: (334.50, 115.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 848)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 35140 reads in 3.534 CPU sec, 0.221 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24046_S23\tSM:HMS24046_S23 -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz
[main] Real time: 12.892 sec; CPU: 159.874 sec
[samclip] Total SAM records 1824229, removed 428700, allowed 109134, passed 1395529
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:55:34] Running: samtools index snps.bam 2>> snps.log
[23:55:35] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:55:35] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:55:39] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 12
          no. right trimmed                     : 83
          no. left and right trimmed            : 5
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 100

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 100
       total no. variants observed              : 1026
       total no. reference observed             : 0

Time elapsed: 0.02s

[23:55:39] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:55:40] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:55:41] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:55:41] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:55:41] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:55:41] Running: bcftools consensus --sample HMS24046_S23 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:55:42] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:55:42] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:55:42] Running: bcftools consensus --sample HMS24046_S23 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:55:42] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:55:42] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:55:44] Marked 1572 heterozygous sites with 'n'
[23:55:44] Creating extra output files: BED GFF CSV TXT HTML
[23:55:44] Identified 1026 variants.
[23:55:44] Result folder: HMS24046_S23
[23:55:44] Result files:
[23:55:44] * HMS24046_S23/snps.aligned.fa
[23:55:44] * HMS24046_S23/snps.bam
[23:55:44] * HMS24046_S23/snps.bam.bai
[23:55:44] * HMS24046_S23/snps.bed
[23:55:44] * HMS24046_S23/snps.consensus.fa
[23:55:44] * HMS24046_S23/snps.consensus.subs.fa
[23:55:44] * HMS24046_S23/snps.csv
[23:55:44] * HMS24046_S23/snps.filt.vcf
[23:55:44] * HMS24046_S23/snps.gff
[23:55:44] * HMS24046_S23/snps.html
[23:55:44] * HMS24046_S23/snps.log
[23:55:44] * HMS24046_S23/snps.raw.vcf
[23:55:44] * HMS24046_S23/snps.subs.vcf
[23:55:44] * HMS24046_S23/snps.tab
[23:55:44] * HMS24046_S23/snps.txt
[23:55:44] * HMS24046_S23/snps.vcf
[23:55:44] * HMS24046_S23/snps.vcf.gz
[23:55:44] * HMS24046_S23/snps.vcf.gz.csi
[23:55:44] Walltime used: 32 seconds
[23:55:44] Found a bug? Post it at https://github.com/tseemann/snippy/issues
[23:55:44] Done.
[23:55:44] This is snippy 4.6.0
[23:55:44] Written by Torsten Seemann
[23:55:44] Obtained from https://github.com/tseemann/snippy
[23:55:44] Detected operating system: linux
[23:55:44] Enabling bundled linux tools.
[23:55:44] Found bwa - /usr/local/bin/bwa
[23:55:44] Found bcftools - /usr/local/bin/bcftools
[23:55:44] Found samtools - /usr/local/bin/samtools
[23:55:44] Found java - /usr/local/bin/java
[23:55:44] Found snpEff - /usr/local/bin/snpEff
[23:55:44] Found samclip - /usr/local/bin/samclip
[23:55:44] Found seqtk - /usr/local/bin/seqtk
[23:55:44] Found parallel - /usr/local/bin/parallel
[23:55:44] Found freebayes - /usr/local/bin/freebayes
[23:55:44] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:55:44] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:55:44] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:55:44] Found vcfuniq - /usr/local/bin/vcfuniq
[23:55:44] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:55:44] Found gzip - /usr/bin/gzip
[23:55:44] Found vt - /usr/local/bin/vt
[23:55:44] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:55:44] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:55:44] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:55:44] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:55:44] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:55:44] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:55:44] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:55:44] Using reference: /data/Analysis/refe.gbk
[23:55:44] Treating reference as 'genbank' format.
[23:55:44] Will use 16 CPU cores.
[23:55:44] Using read file: /data/Analysis/HMS24051_S27_R1.fastq.gz
[23:55:44] Using read file: /data/Analysis/HMS24051_S27_R2.fastq.gz
[23:55:44] Creating folder: HMS24051_S27
[23:55:44] Changing working directory: HMS24051_S27
[23:55:44] Creating reference folder: reference
[23:55:44] Extracting FASTA and GFF from reference.
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:55] Marked 8955 heterozygous sites with 'n'
[23:53:55] Creating extra output files: BED GFF CSV TXT HTML
[23:53:55] Identified 2484 variants.
[23:53:55] Result folder: HCU24002_S2
[23:53:55] Result files:
[23:53:55] * HCU24002_S2/snps.aligned.fa
[23:53:55] * HCU24002_S2/snps.bam
[23:53:55] * HCU24002_S2/snps.bam.bai
[23:53:55] * HCU24002_S2/snps.bed
[23:53:55] * HCU24002_S2/snps.consensus.fa
[23:53:55] * HCU24002_S2/snps.consensus.subs.fa
[23:53:55] * HCU24002_S2/snps.csv
[23:53:55] * HCU24002_S2/snps.filt.vcf
[23:53:55] * HCU24002_S2/snps.gff
[23:53:55] * HCU24002_S2/snps.html
[23:53:55] * HCU24002_S2/snps.log
[23:53:55] * HCU24002_S2/snps.raw.vcf
[23:53:55] * HCU24002_S2/snps.subs.vcf
[23:53:55] * HCU24002_S2/snps.tab
[23:53:55] * HCU24002_S2/snps.txt
[23:53:55] * HCU24002_S2/snps.vcf
[23:53:55] * HCU24002_S2/snps.vcf.gz
[23:53:55] * HCU24002_S2/snps.vcf.gz.csi
[23:53:55] Walltime used: 24 seconds
[23:53:55] Wishing you a life free of homopolymer errors.
[23:53:55] Done.
[23:53:55] This is snippy 4.6.0
[23:53:55] Written by Torsten Seemann
[23:53:55] Obtained from https://github.com/tseemann/snippy
[23:53:55] Detected operating system: linux
[23:53:55] Enabling bundled linux tools.
[23:53:55] Found bwa - /usr/local/bin/bwa
[23:53:55] Found bcftools - /usr/local/bin/bcftools
[23:53:55] Found samtools - /usr/local/bin/samtools
[23:53:55] Found java - /usr/local/bin/java
[23:53:55] Found snpEff - /usr/local/bin/snpEff
[23:53:55] Found samclip - /usr/local/bin/samclip
[23:53:55] Found seqtk - /usr/local/bin/seqtk
[23:53:55] Found parallel - /usr/local/bin/parallel
[23:53:55] Found freebayes - /usr/local/bin/freebayes
[23:53:55] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:55] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:55] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:55] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:55] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:55] Found gzip - /usr/bin/gzip
[23:53:55] Found vt - /usr/local/bin/vt
[23:53:55] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:55] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:55] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:55] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:55] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:55] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:55] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:55] Using reference: /data/Analysis/refe.gbk
[23:53:56] Treating reference as 'genbank' format.
[23:53:56] Will use 16 CPU cores.
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:53:56] Creating folder: HCU24010_S6
[23:53:56] Changing working directory: HCU24010_S6
[23:53:56] Creating reference folder: reference
[23:53:56] Extracting FASTA and GFF from reference.
[23:53:57] Wrote 1 sequences to ref.fa
[23:53:57] Wrote 4429 features to ref.gff
[23:53:57] Creating reference/snpeff.config
[23:53:57] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:57] Using BAM RG (Read Group) ID: HCU24010_S6
[23:53:57] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:57] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:58] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:58] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:58] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:02] Running: bwa mem  -Y -M -R '@RG\tID:HCU24010_S6\tSM:HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.716 CPU sec, 3.057 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.756 CPU sec, 3.219 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 49.486 CPU sec, 3.143 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 15.338 CPU sec, 0.965 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24010_S6\tSM:HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.889 sec; CPU: 167.280 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:18] Running: samtools index snps.bam 2>> snps.log
[23:54:19] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:19] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:23] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 9
          no. right trimmed                     : 88
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 101

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 101
       total no. variants observed              : 941
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:54:23] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:24] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:26] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:26] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:28] Marked 1145 heterozygous sites with 'n'
[23:54:28] Creating extra output files: BED GFF CSV TXT HTML
[23:54:28] Identified 941 variants.
[23:54:28] Result folder: HCU24010_S6
[23:54:28] Result files:
[23:54:28] * HCU24010_S6/snps.aligned.fa
[23:54:28] * HCU24010_S6/snps.bam
[23:54:28] * HCU24010_S6/snps.bam.bai
[23:54:28] * HCU24010_S6/snps.bed
[23:54:28] * HCU24010_S6/snps.consensus.fa
[23:54:28] * HCU24010_S6/snps.consensus.subs.fa
[23:54:28] * HCU24010_S6/snps.csv
[23:54:28] * HCU24010_S6/snps.filt.vcf
[23:54:28] * HCU24010_S6/snps.gff
[23:54:28] * HCU24010_S6/snps.html
[23:54:28] * HCU24010_S6/snps.log
[23:54:28] * HCU24010_S6/snps.raw.vcf
[23:54:28] * HCU24010_S6/snps.subs.vcf
[23:54:28] * HCU24010_S6/snps.tab
[23:54:28] * HCU24010_S6/snps.txt
[23:54:28] * HCU24010_S6/snps.vcf
[23:54:28] * HCU24010_S6/snps.vcf.gz
[23:54:28] * HCU24010_S6/snps.vcf.gz.csi
[23:54:28] Walltime used: 33 seconds
[23:54:28] Wishing you a life free of homopolymer errors.
[23:54:28] Done.
[23:54:29] This is snippy 4.6.0
[23:54:29] Written by Torsten Seemann
[23:54:29] Obtained from https://github.com/tseemann/snippy
[23:54:29] Detected operating system: linux
[23:54:29] Enabling bundled linux tools.
[23:54:29] Found bwa - /usr/local/bin/bwa
[23:54:29] Found bcftools - /usr/local/bin/bcftools
[23:54:29] Found samtools - /usr/local/bin/samtools
[23:54:29] Found java - /usr/local/bin/java
[23:54:29] Found snpEff - /usr/local/bin/snpEff
[23:54:29] Found samclip - /usr/local/bin/samclip
[23:54:29] Found seqtk - /usr/local/bin/seqtk
[23:54:29] Found parallel - /usr/local/bin/parallel
[23:54:29] Found freebayes - /usr/local/bin/freebayes
[23:54:29] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:29] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:29] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:29] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:29] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:29] Found gzip - /usr/bin/gzip
[23:54:29] Found vt - /usr/local/bin/vt
[23:54:29] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:29] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:29] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:29] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:29] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:29] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:29] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:29] Using reference: /data/Analysis/refe.gbk
[23:54:29] Treating reference as 'genbank' format.
[23:54:29] Will use 16 CPU cores.
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:54:29] Creating folder: HCU24011_S7
[23:54:29] Changing working directory: HCU24011_S7
[23:54:29] Creating reference folder: reference
[23:54:29] Extracting FASTA and GFF from reference.
[23:54:30] Wrote 1 sequences to ref.fa
[23:54:30] Wrote 4429 features to ref.gff
[23:54:30] Creating reference/snpeff.config
[23:54:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:30] Using BAM RG (Read Group) ID: HCU24011_S7
[23:54:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:32] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:35] Running: bwa mem  -Y -M -R '@RG\tID:HCU24011_S7\tSM:HCU24011_S7' -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 510314 sequences (133277700 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (52, 248478, 18, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (320, 504, 939)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2177)
[M::mem_pestat] mean and std.dev: (524.39, 308.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2796)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 281, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 610)
[M::mem_pestat] mean and std.dev: (292.95, 100.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 738)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 664, 1334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3814)
[M::mem_pestat] mean and std.dev: (839.61, 800.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5054)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (302, 521, 1337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3407)
[M::mem_pestat] mean and std.dev: (743.44, 552.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4442)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 510314 reads in 47.585 CPU sec, 3.060 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24011_S7\tSM:HCU24011_S7 -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz
[main] Real time: 5.537 sec; CPU: 49.200 sec
[samclip] Total SAM records 513584, removed 116348, allowed 35199, passed 397236
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:41] Running: samtools index snps.bam 2>> snps.log
[23:54:42] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:42] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:43] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 37
          no. right trimmed                     : 179
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 219

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 219
       total no. variants observed              : 2202
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:54:44] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:44] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:46] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:46] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:46] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:46] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:47] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:47] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:49] Marked 7775 heterozygous sites with 'n'
[23:54:49] Creating extra output files: BED GFF CSV TXT HTML
[23:54:49] Identified 2202 variants.
[23:54:49] Result folder: HCU24011_S7
[23:54:49] Result files:
[23:54:49] * HCU24011_S7/snps.aligned.fa
[23:54:49] * HCU24011_S7/snps.bam
[23:54:49] * HCU24011_S7/snps.bam.bai
[23:54:49] * HCU24011_S7/snps.bed
[23:54:49] * HCU24011_S7/snps.consensus.fa
[23:54:49] * HCU24011_S7/snps.consensus.subs.fa
[23:54:49] * HCU24011_S7/snps.csv
[23:54:49] * HCU24011_S7/snps.filt.vcf
[23:54:49] * HCU24011_S7/snps.gff
[23:54:49] * HCU24011_S7/snps.html
[23:54:49] * HCU24011_S7/snps.log
[23:54:49] * HCU24011_S7/snps.raw.vcf
[23:54:49] * HCU24011_S7/snps.subs.vcf
[23:54:49] * HCU24011_S7/snps.tab
[23:54:49] * HCU24011_S7/snps.txt
[23:54:49] * HCU24011_S7/snps.vcf
[23:54:49] * HCU24011_S7/snps.vcf.gz
[23:54:49] * HCU24011_S7/snps.vcf.gz.csi
[23:54:49] Walltime used: 20 seconds
[23:54:49] Wishing you a life free of homopolymer errors.
[23:54:49] Done.
[23:54:49] This is snippy 4.6.0
[23:54:49] Written by Torsten Seemann
[23:54:49] Obtained from https://github.com/tseemann/snippy
[23:54:49] Detected operating system: linux
[23:54:49] Enabling bundled linux tools.
[23:54:49] Found bwa - /usr/local/bin/bwa
[23:54:49] Found bcftools - /usr/local/bin/bcftools
[23:54:49] Found samtools - /usr/local/bin/samtools
[23:54:49] Found java - /usr/local/bin/java
[23:54:49] Found snpEff - /usr/local/bin/snpEff
[23:54:49] Found samclip - /usr/local/bin/samclip
[23:54:49] Found seqtk - /usr/local/bin/seqtk
[23:54:49] Found parallel - /usr/local/bin/parallel
[23:54:49] Found freebayes - /usr/local/bin/freebayes
[23:54:49] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:49] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:49] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:49] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:49] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:49] Found gzip - /usr/bin/gzip
[23:54:49] Found vt - /usr/local/bin/vt
[23:54:49] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:49] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:49] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:49] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:49] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:49] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:49] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:49] Using reference: /data/Analysis/refe.gbk
[23:54:49] Treating reference as 'genbank' format.
[23:54:49] Will use 16 CPU cores.
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R1.fastq.gz
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R2.fastq.gz
[23:54:49] Creating folder: HMS24017_S15
[23:54:49] Changing working directory: HMS24017_S15
[23:54:49] Creating reference folder: reference
[23:54:49] Extracting FASTA and GFF from reference.
[23:54:51] Wrote 1 sequences to ref.fa
[23:54:51] Wrote 4429 features to ref.gff
[23:54:51] Creating reference/snpeff.config
[23:54:51] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:51] Using BAM RG (Read Group) ID: HMS24017_S15
[23:54:51] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:51] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:52] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:52] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:52] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:55] Running: bwa mem  -Y -M -R '@RG\tID:HMS24017_S15\tSM:HMS24017_S15' -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 746630 sequences (160000202 bp)...
[M::process] read 218810 sequences (46953613 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 366940, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 259)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (215.34, 67.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 746630 reads in 39.279 CPU sec, 2.585 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 107505, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 260)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (215.68, 67.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 400000 records...
[M::mem_process_seqs] Processed 218810 reads in 12.831 CPU sec, 0.832 real sec
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24017_S15\tSM:HMS24017_S15 -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz
[main] Real time: 6.320 sec; CPU: 54.297 sec
[samclip] Total SAM records 967230, removed 76910, allowed 25086, passed 890320
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:55:04] Running: samtools index snps.bam 2>> snps.log
[23:55:04] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:55:04] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:55:06] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 10
          no. right trimmed                     : 74
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 87

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 87
       total no. variants observed              : 877
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:55:06] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:55:07] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:55:09] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:55:09] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:55:12] Marked 5332 heterozygous sites with 'n'
[23:55:12] Creating extra output files: BED GFF CSV TXT HTML
[23:55:12] Identified 877 variants.
[23:55:12] Result folder: HMS24017_S15
[23:55:12] Result files:
[23:55:12] * HMS24017_S15/snps.aligned.fa
[23:55:12] * HMS24017_S15/snps.bam
[23:55:12] * HMS24017_S15/snps.bam.bai
[23:55:12] * HMS24017_S15/snps.bed
[23:55:12] * HMS24017_S15/snps.consensus.fa
[23:55:12] * HMS24017_S15/snps.consensus.subs.fa
[23:55:12] * HMS24017_S15/snps.csv
[23:55:12] * HMS24017_S15/snps.filt.vcf
[23:55:12] * HMS24017_S15/snps.gff
[23:55:12] * HMS24017_S15/snps.html
[23:55:12] * HMS24017_S15/snps.log
[23:55:12] * HMS24017_S15/snps.raw.vcf
[23:55:12] * HMS24017_S15/snps.subs.vcf
[23:55:12] * HMS24017_S15/snps.tab
[23:55:12] * HMS24017_S15/snps.txt
[23:55:12] * HMS24017_S15/snps.vcf
[23:55:12] * HMS24017_S15/snps.vcf.gz
[23:55:12] * HMS24017_S15/snps.vcf.gz.csi
[23:55:12] Walltime used: 23 seconds
[23:55:12] Did you know? Snippy is a combination of SNP, Skippy, and snappy.
[23:55:12] Done.
[23:55:12] This is snippy 4.6.0
[23:55:12] Written by Torsten Seemann
[23:55:12] Obtained from https://github.com/tseemann/snippy
[23:55:12] Detected operating system: linux
[23:55:12] Enabling bundled linux tools.
[23:55:12] Found bwa - /usr/local/bin/bwa
[23:55:12] Found bcftools - /usr/local/bin/bcftools
[23:55:12] Found samtools - /usr/local/bin/samtools
[23:55:12] Found java - /usr/local/bin/java
[23:55:12] Found snpEff - /usr/local/bin/snpEff
[23:55:12] Found samclip - /usr/local/bin/samclip
[23:55:12] Found seqtk - /usr/local/bin/seqtk
[23:55:12] Found parallel - /usr/local/bin/parallel
[23:55:12] Found freebayes - /usr/local/bin/freebayes
[23:55:12] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:55:12] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:55:12] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:55:12] Found vcfuniq - /usr/local/bin/vcfuniq
[23:55:12] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:55:12] Found gzip - /usr/bin/gzip
[23:55:12] Found vt - /usr/local/bin/vt
[23:55:12] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:55:12] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:55:12] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:55:12] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:55:12] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:55:12] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:55:12] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:55:12] Using reference: /data/Analysis/refe.gbk
[23:55:12] Treating reference as 'genbank' format.
[23:55:12] Will use 16 CPU cores.
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R1.fastq.gz
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R2.fastq.gz
[23:55:12] Creating folder: HMS24046_S23
[23:55:12] Changing working directory: HMS24046_S23
[23:55:12] Creating reference folder: reference
[23:55:12] Extracting FASTA and GFF from reference.
[23:55:14] Wrote 1 sequences to ref.fa
[23:55:14] Wrote 4429 features to ref.gff
[23:55:14] Creating reference/snpeff.config
[23:55:14] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:55:14] Using BAM RG (Read Group) ID: HMS24046_S23
[23:55:14] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:55:14] Running: bwa index reference/ref.fa 2>> snps.log
[23:55:14] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:55:14] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:55:15] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:55:15] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:55:15] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:55:18] Running: bwa mem  -Y -M -R '@RG\tID:HMS24046_S23\tSM:HMS24046_S23' -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 593288 sequences (160000360 bp)...
[M::process] read 593558 sequences (160000118 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 290696, 6, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (235, 410, 549)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1177)
[M::mem_pestat] mean and std.dev: (357.00, 166.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1491)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (247, 310, 389)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 673)
[M::mem_pestat] mean and std.dev: (320.58, 111.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 815)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 593288 reads in 50.085 CPU sec, 3.126 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 290813, 12, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (246, 308, 387)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 669)
[M::mem_pestat] mean and std.dev: (319.18, 111.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 810)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1188, 1335, 2147)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4065)
[M::mem_pestat] mean and std.dev: (1270.92, 681.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5024)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (511, 819, 1070)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2188)
[M::mem_pestat] mean and std.dev: (613.22, 331.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2747)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 595752 sequences (160000212 bp)...
[M::mem_process_seqs] Processed 593558 reads in 52.371 CPU sec, 3.250 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::process] read 35140 sequences (9664990 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 291753, 9, 5)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (288, 347, 395)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (74, 609)
[M::mem_pestat] mean and std.dev: (333.00, 84.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 716)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (244, 307, 385)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 667)
[M::mem_pestat] mean and std.dev: (317.29, 110.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 808)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 595752 reads in 51.659 CPU sec, 3.280 real sec
[samclip] Processed 1200000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 17177, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (256, 321, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 700)
[M::mem_pestat] mean and std.dev: (334.50, 115.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 848)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 35140 reads in 3.534 CPU sec, 0.221 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24046_S23\tSM:HMS24046_S23 -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz
[main] Real time: 12.892 sec; CPU: 159.874 sec
[samclip] Total SAM records 1824229, removed 428700, allowed 109134, passed 1395529
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:55:34] Running: samtools index snps.bam 2>> snps.log
[23:55:35] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:55:35] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:55:39] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 12
          no. right trimmed                     : 83
          no. left and right trimmed            : 5
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 100

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 100
       total no. variants observed              : 1026
       total no. reference observed             : 0

Time elapsed: 0.02s

[23:55:39] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:55:40] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:55:41] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:55:41] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:55:41] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:55:41] Running: bcftools consensus --sample HMS24046_S23 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:55:42] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:55:42] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:55:42] Running: bcftools consensus --sample HMS24046_S23 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:55:42] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:55:42] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:55:44] Marked 1572 heterozygous sites with 'n'
[23:55:44] Creating extra output files: BED GFF CSV TXT HTML
[23:55:44] Identified 1026 variants.
[23:55:44] Result folder: HMS24046_S23
[23:55:44] Result files:
[23:55:44] * HMS24046_S23/snps.aligned.fa
[23:55:44] * HMS24046_S23/snps.bam
[23:55:44] * HMS24046_S23/snps.bam.bai
[23:55:44] * HMS24046_S23/snps.bed
[23:55:44] * HMS24046_S23/snps.consensus.fa
[23:55:44] * HMS24046_S23/snps.consensus.subs.fa
[23:55:44] * HMS24046_S23/snps.csv
[23:55:44] * HMS24046_S23/snps.filt.vcf
[23:55:44] * HMS24046_S23/snps.gff
[23:55:44] * HMS24046_S23/snps.html
[23:55:44] * HMS24046_S23/snps.log
[23:55:44] * HMS24046_S23/snps.raw.vcf
[23:55:44] * HMS24046_S23/snps.subs.vcf
[23:55:44] * HMS24046_S23/snps.tab
[23:55:44] * HMS24046_S23/snps.txt
[23:55:44] * HMS24046_S23/snps.vcf
[23:55:44] * HMS24046_S23/snps.vcf.gz
[23:55:44] * HMS24046_S23/snps.vcf.gz.csi
[23:55:44] Walltime used: 32 seconds
[23:55:44] Found a bug? Post it at https://github.com/tseemann/snippy/issues
[23:55:44] Done.
[23:55:44] This is snippy 4.6.0
[23:55:44] Written by Torsten Seemann
[23:55:44] Obtained from https://github.com/tseemann/snippy
[23:55:44] Detected operating system: linux
[23:55:44] Enabling bundled linux tools.
[23:55:44] Found bwa - /usr/local/bin/bwa
[23:55:44] Found bcftools - /usr/local/bin/bcftools
[23:55:44] Found samtools - /usr/local/bin/samtools
[23:55:44] Found java - /usr/local/bin/java
[23:55:44] Found snpEff - /usr/local/bin/snpEff
[23:55:44] Found samclip - /usr/local/bin/samclip
[23:55:44] Found seqtk - /usr/local/bin/seqtk
[23:55:44] Found parallel - /usr/local/bin/parallel
[23:55:44] Found freebayes - /usr/local/bin/freebayes
[23:55:44] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:55:44] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:55:44] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:55:44] Found vcfuniq - /usr/local/bin/vcfuniq
[23:55:44] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:55:44] Found gzip - /usr/bin/gzip
[23:55:44] Found vt - /usr/local/bin/vt
[23:55:44] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:55:44] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:55:44] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:55:44] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:55:44] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:55:44] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:55:44] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:55:44] Using reference: /data/Analysis/refe.gbk
[23:55:44] Treating reference as 'genbank' format.
[23:55:44] Will use 16 CPU cores.
[23:55:44] Using read file: /data/Analysis/HMS24051_S27_R1.fastq.gz
[23:55:44] Using read file: /data/Analysis/HMS24051_S27_R2.fastq.gz
[23:55:44] Creating folder: HMS24051_S27
[23:55:44] Changing working directory: HMS24051_S27
[23:55:44] Creating reference folder: reference
[23:55:44] Extracting FASTA and GFF from reference.
[23:55:46] Wrote 1 sequences to ref.fa
[23:55:46] Wrote 4429 features to ref.gff
[23:55:46] Creating reference/snpeff.config
[23:55:46] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:55:46] Using BAM RG (Read Group) ID: HMS24051_S27
[23:55:46] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:55:46] Running: bwa index reference/ref.fa 2>> snps.log
[23:55:47] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:55:47] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:55:47] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:55:47] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:55:47] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:55:50] Running: bwa mem  -Y -M -R '@RG\tID:HMS24051_S27\tSM:HMS24051_S27' -t 16 reference/ref.fa /data/Analysis/HMS24051_S27_R1.fastq.gz /data/Analysis/HMS24051_S27_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:55] Marked 8955 heterozygous sites with 'n'
[23:53:55] Creating extra output files: BED GFF CSV TXT HTML
[23:53:55] Identified 2484 variants.
[23:53:55] Result folder: HCU24002_S2
[23:53:55] Result files:
[23:53:55] * HCU24002_S2/snps.aligned.fa
[23:53:55] * HCU24002_S2/snps.bam
[23:53:55] * HCU24002_S2/snps.bam.bai
[23:53:55] * HCU24002_S2/snps.bed
[23:53:55] * HCU24002_S2/snps.consensus.fa
[23:53:55] * HCU24002_S2/snps.consensus.subs.fa
[23:53:55] * HCU24002_S2/snps.csv
[23:53:55] * HCU24002_S2/snps.filt.vcf
[23:53:55] * HCU24002_S2/snps.gff
[23:53:55] * HCU24002_S2/snps.html
[23:53:55] * HCU24002_S2/snps.log
[23:53:55] * HCU24002_S2/snps.raw.vcf
[23:53:55] * HCU24002_S2/snps.subs.vcf
[23:53:55] * HCU24002_S2/snps.tab
[23:53:55] * HCU24002_S2/snps.txt
[23:53:55] * HCU24002_S2/snps.vcf
[23:53:55] * HCU24002_S2/snps.vcf.gz
[23:53:55] * HCU24002_S2/snps.vcf.gz.csi
[23:53:55] Walltime used: 24 seconds
[23:53:55] Wishing you a life free of homopolymer errors.
[23:53:55] Done.
[23:53:55] This is snippy 4.6.0
[23:53:55] Written by Torsten Seemann
[23:53:55] Obtained from https://github.com/tseemann/snippy
[23:53:55] Detected operating system: linux
[23:53:55] Enabling bundled linux tools.
[23:53:55] Found bwa - /usr/local/bin/bwa
[23:53:55] Found bcftools - /usr/local/bin/bcftools
[23:53:55] Found samtools - /usr/local/bin/samtools
[23:53:55] Found java - /usr/local/bin/java
[23:53:55] Found snpEff - /usr/local/bin/snpEff
[23:53:55] Found samclip - /usr/local/bin/samclip
[23:53:55] Found seqtk - /usr/local/bin/seqtk
[23:53:55] Found parallel - /usr/local/bin/parallel
[23:53:55] Found freebayes - /usr/local/bin/freebayes
[23:53:55] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:55] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:55] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:55] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:55] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:55] Found gzip - /usr/bin/gzip
[23:53:55] Found vt - /usr/local/bin/vt
[23:53:55] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:55] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:55] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:55] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:55] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:55] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:55] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:55] Using reference: /data/Analysis/refe.gbk
[23:53:56] Treating reference as 'genbank' format.
[23:53:56] Will use 16 CPU cores.
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:53:56] Creating folder: HCU24010_S6
[23:53:56] Changing working directory: HCU24010_S6
[23:53:56] Creating reference folder: reference
[23:53:56] Extracting FASTA and GFF from reference.
[23:53:57] Wrote 1 sequences to ref.fa
[23:53:57] Wrote 4429 features to ref.gff
[23:53:57] Creating reference/snpeff.config
[23:53:57] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:57] Using BAM RG (Read Group) ID: HCU24010_S6
[23:53:57] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:57] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:58] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:58] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:58] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:02] Running: bwa mem  -Y -M -R '@RG\tID:HCU24010_S6\tSM:HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.716 CPU sec, 3.057 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.756 CPU sec, 3.219 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 49.486 CPU sec, 3.143 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 15.338 CPU sec, 0.965 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24010_S6\tSM:HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.889 sec; CPU: 167.280 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:18] Running: samtools index snps.bam 2>> snps.log
[23:54:19] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:19] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:23] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 9
          no. right trimmed                     : 88
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 101

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 101
       total no. variants observed              : 941
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:54:23] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:24] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:26] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:26] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:28] Marked 1145 heterozygous sites with 'n'
[23:54:28] Creating extra output files: BED GFF CSV TXT HTML
[23:54:28] Identified 941 variants.
[23:54:28] Result folder: HCU24010_S6
[23:54:28] Result files:
[23:54:28] * HCU24010_S6/snps.aligned.fa
[23:54:28] * HCU24010_S6/snps.bam
[23:54:28] * HCU24010_S6/snps.bam.bai
[23:54:28] * HCU24010_S6/snps.bed
[23:54:28] * HCU24010_S6/snps.consensus.fa
[23:54:28] * HCU24010_S6/snps.consensus.subs.fa
[23:54:28] * HCU24010_S6/snps.csv
[23:54:28] * HCU24010_S6/snps.filt.vcf
[23:54:28] * HCU24010_S6/snps.gff
[23:54:28] * HCU24010_S6/snps.html
[23:54:28] * HCU24010_S6/snps.log
[23:54:28] * HCU24010_S6/snps.raw.vcf
[23:54:28] * HCU24010_S6/snps.subs.vcf
[23:54:28] * HCU24010_S6/snps.tab
[23:54:28] * HCU24010_S6/snps.txt
[23:54:28] * HCU24010_S6/snps.vcf
[23:54:28] * HCU24010_S6/snps.vcf.gz
[23:54:28] * HCU24010_S6/snps.vcf.gz.csi
[23:54:28] Walltime used: 33 seconds
[23:54:28] Wishing you a life free of homopolymer errors.
[23:54:28] Done.
[23:54:29] This is snippy 4.6.0
[23:54:29] Written by Torsten Seemann
[23:54:29] Obtained from https://github.com/tseemann/snippy
[23:54:29] Detected operating system: linux
[23:54:29] Enabling bundled linux tools.
[23:54:29] Found bwa - /usr/local/bin/bwa
[23:54:29] Found bcftools - /usr/local/bin/bcftools
[23:54:29] Found samtools - /usr/local/bin/samtools
[23:54:29] Found java - /usr/local/bin/java
[23:54:29] Found snpEff - /usr/local/bin/snpEff
[23:54:29] Found samclip - /usr/local/bin/samclip
[23:54:29] Found seqtk - /usr/local/bin/seqtk
[23:54:29] Found parallel - /usr/local/bin/parallel
[23:54:29] Found freebayes - /usr/local/bin/freebayes
[23:54:29] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:29] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:29] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:29] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:29] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:29] Found gzip - /usr/bin/gzip
[23:54:29] Found vt - /usr/local/bin/vt
[23:54:29] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:29] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:29] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:29] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:29] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:29] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:29] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:29] Using reference: /data/Analysis/refe.gbk
[23:54:29] Treating reference as 'genbank' format.
[23:54:29] Will use 16 CPU cores.
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:54:29] Creating folder: HCU24011_S7
[23:54:29] Changing working directory: HCU24011_S7
[23:54:29] Creating reference folder: reference
[23:54:29] Extracting FASTA and GFF from reference.
[23:54:30] Wrote 1 sequences to ref.fa
[23:54:30] Wrote 4429 features to ref.gff
[23:54:30] Creating reference/snpeff.config
[23:54:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:30] Using BAM RG (Read Group) ID: HCU24011_S7
[23:54:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:32] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:35] Running: bwa mem  -Y -M -R '@RG\tID:HCU24011_S7\tSM:HCU24011_S7' -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 510314 sequences (133277700 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (52, 248478, 18, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (320, 504, 939)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2177)
[M::mem_pestat] mean and std.dev: (524.39, 308.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2796)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 281, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 610)
[M::mem_pestat] mean and std.dev: (292.95, 100.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 738)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 664, 1334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3814)
[M::mem_pestat] mean and std.dev: (839.61, 800.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5054)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (302, 521, 1337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3407)
[M::mem_pestat] mean and std.dev: (743.44, 552.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4442)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 510314 reads in 47.585 CPU sec, 3.060 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24011_S7\tSM:HCU24011_S7 -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz
[main] Real time: 5.537 sec; CPU: 49.200 sec
[samclip] Total SAM records 513584, removed 116348, allowed 35199, passed 397236
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:41] Running: samtools index snps.bam 2>> snps.log
[23:54:42] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:42] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:43] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 37
          no. right trimmed                     : 179
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 219

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 219
       total no. variants observed              : 2202
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:54:44] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:44] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:46] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:46] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:46] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:46] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:47] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:47] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:49] Marked 7775 heterozygous sites with 'n'
[23:54:49] Creating extra output files: BED GFF CSV TXT HTML
[23:54:49] Identified 2202 variants.
[23:54:49] Result folder: HCU24011_S7
[23:54:49] Result files:
[23:54:49] * HCU24011_S7/snps.aligned.fa
[23:54:49] * HCU24011_S7/snps.bam
[23:54:49] * HCU24011_S7/snps.bam.bai
[23:54:49] * HCU24011_S7/snps.bed
[23:54:49] * HCU24011_S7/snps.consensus.fa
[23:54:49] * HCU24011_S7/snps.consensus.subs.fa
[23:54:49] * HCU24011_S7/snps.csv
[23:54:49] * HCU24011_S7/snps.filt.vcf
[23:54:49] * HCU24011_S7/snps.gff
[23:54:49] * HCU24011_S7/snps.html
[23:54:49] * HCU24011_S7/snps.log
[23:54:49] * HCU24011_S7/snps.raw.vcf
[23:54:49] * HCU24011_S7/snps.subs.vcf
[23:54:49] * HCU24011_S7/snps.tab
[23:54:49] * HCU24011_S7/snps.txt
[23:54:49] * HCU24011_S7/snps.vcf
[23:54:49] * HCU24011_S7/snps.vcf.gz
[23:54:49] * HCU24011_S7/snps.vcf.gz.csi
[23:54:49] Walltime used: 20 seconds
[23:54:49] Wishing you a life free of homopolymer errors.
[23:54:49] Done.
[23:54:49] This is snippy 4.6.0
[23:54:49] Written by Torsten Seemann
[23:54:49] Obtained from https://github.com/tseemann/snippy
[23:54:49] Detected operating system: linux
[23:54:49] Enabling bundled linux tools.
[23:54:49] Found bwa - /usr/local/bin/bwa
[23:54:49] Found bcftools - /usr/local/bin/bcftools
[23:54:49] Found samtools - /usr/local/bin/samtools
[23:54:49] Found java - /usr/local/bin/java
[23:54:49] Found snpEff - /usr/local/bin/snpEff
[23:54:49] Found samclip - /usr/local/bin/samclip
[23:54:49] Found seqtk - /usr/local/bin/seqtk
[23:54:49] Found parallel - /usr/local/bin/parallel
[23:54:49] Found freebayes - /usr/local/bin/freebayes
[23:54:49] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:49] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:49] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:49] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:49] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:49] Found gzip - /usr/bin/gzip
[23:54:49] Found vt - /usr/local/bin/vt
[23:54:49] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:49] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:49] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:49] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:49] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:49] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:49] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:49] Using reference: /data/Analysis/refe.gbk
[23:54:49] Treating reference as 'genbank' format.
[23:54:49] Will use 16 CPU cores.
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R1.fastq.gz
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R2.fastq.gz
[23:54:49] Creating folder: HMS24017_S15
[23:54:49] Changing working directory: HMS24017_S15
[23:54:49] Creating reference folder: reference
[23:54:49] Extracting FASTA and GFF from reference.
[23:54:51] Wrote 1 sequences to ref.fa
[23:54:51] Wrote 4429 features to ref.gff
[23:54:51] Creating reference/snpeff.config
[23:54:51] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:51] Using BAM RG (Read Group) ID: HMS24017_S15
[23:54:51] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:51] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:52] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:52] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:52] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:55] Running: bwa mem  -Y -M -R '@RG\tID:HMS24017_S15\tSM:HMS24017_S15' -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 746630 sequences (160000202 bp)...
[M::process] read 218810 sequences (46953613 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 366940, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 259)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (215.34, 67.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 746630 reads in 39.279 CPU sec, 2.585 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 107505, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 260)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (215.68, 67.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 400000 records...
[M::mem_process_seqs] Processed 218810 reads in 12.831 CPU sec, 0.832 real sec
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24017_S15\tSM:HMS24017_S15 -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz
[main] Real time: 6.320 sec; CPU: 54.297 sec
[samclip] Total SAM records 967230, removed 76910, allowed 25086, passed 890320
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:55:04] Running: samtools index snps.bam 2>> snps.log
[23:55:04] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:55:04] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:55:06] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 10
          no. right trimmed                     : 74
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 87

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 87
       total no. variants observed              : 877
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:55:06] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:55:07] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:55:09] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:55:09] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:55:12] Marked 5332 heterozygous sites with 'n'
[23:55:12] Creating extra output files: BED GFF CSV TXT HTML
[23:55:12] Identified 877 variants.
[23:55:12] Result folder: HMS24017_S15
[23:55:12] Result files:
[23:55:12] * HMS24017_S15/snps.aligned.fa
[23:55:12] * HMS24017_S15/snps.bam
[23:55:12] * HMS24017_S15/snps.bam.bai
[23:55:12] * HMS24017_S15/snps.bed
[23:55:12] * HMS24017_S15/snps.consensus.fa
[23:55:12] * HMS24017_S15/snps.consensus.subs.fa
[23:55:12] * HMS24017_S15/snps.csv
[23:55:12] * HMS24017_S15/snps.filt.vcf
[23:55:12] * HMS24017_S15/snps.gff
[23:55:12] * HMS24017_S15/snps.html
[23:55:12] * HMS24017_S15/snps.log
[23:55:12] * HMS24017_S15/snps.raw.vcf
[23:55:12] * HMS24017_S15/snps.subs.vcf
[23:55:12] * HMS24017_S15/snps.tab
[23:55:12] * HMS24017_S15/snps.txt
[23:55:12] * HMS24017_S15/snps.vcf
[23:55:12] * HMS24017_S15/snps.vcf.gz
[23:55:12] * HMS24017_S15/snps.vcf.gz.csi
[23:55:12] Walltime used: 23 seconds
[23:55:12] Did you know? Snippy is a combination of SNP, Skippy, and snappy.
[23:55:12] Done.
[23:55:12] This is snippy 4.6.0
[23:55:12] Written by Torsten Seemann
[23:55:12] Obtained from https://github.com/tseemann/snippy
[23:55:12] Detected operating system: linux
[23:55:12] Enabling bundled linux tools.
[23:55:12] Found bwa - /usr/local/bin/bwa
[23:55:12] Found bcftools - /usr/local/bin/bcftools
[23:55:12] Found samtools - /usr/local/bin/samtools
[23:55:12] Found java - /usr/local/bin/java
[23:55:12] Found snpEff - /usr/local/bin/snpEff
[23:55:12] Found samclip - /usr/local/bin/samclip
[23:55:12] Found seqtk - /usr/local/bin/seqtk
[23:55:12] Found parallel - /usr/local/bin/parallel
[23:55:12] Found freebayes - /usr/local/bin/freebayes
[23:55:12] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:55:12] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:55:12] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:55:12] Found vcfuniq - /usr/local/bin/vcfuniq
[23:55:12] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:55:12] Found gzip - /usr/bin/gzip
[23:55:12] Found vt - /usr/local/bin/vt
[23:55:12] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:55:12] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:55:12] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:55:12] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:55:12] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:55:12] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:55:12] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:55:12] Using reference: /data/Analysis/refe.gbk
[23:55:12] Treating reference as 'genbank' format.
[23:55:12] Will use 16 CPU cores.
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R1.fastq.gz
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R2.fastq.gz
[23:55:12] Creating folder: HMS24046_S23
[23:55:12] Changing working directory: HMS24046_S23
[23:55:12] Creating reference folder: reference
[23:55:12] Extracting FASTA and GFF from reference.
[23:55:14] Wrote 1 sequences to ref.fa
[23:55:14] Wrote 4429 features to ref.gff
[23:55:14] Creating reference/snpeff.config
[23:55:14] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:55:14] Using BAM RG (Read Group) ID: HMS24046_S23
[23:55:14] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:55:14] Running: bwa index reference/ref.fa 2>> snps.log
[23:55:14] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:55:14] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:55:15] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:55:15] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:55:15] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:55:18] Running: bwa mem  -Y -M -R '@RG\tID:HMS24046_S23\tSM:HMS24046_S23' -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 593288 sequences (160000360 bp)...
[M::process] read 593558 sequences (160000118 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 290696, 6, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (235, 410, 549)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1177)
[M::mem_pestat] mean and std.dev: (357.00, 166.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1491)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (247, 310, 389)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 673)
[M::mem_pestat] mean and std.dev: (320.58, 111.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 815)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 593288 reads in 50.085 CPU sec, 3.126 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 290813, 12, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (246, 308, 387)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 669)
[M::mem_pestat] mean and std.dev: (319.18, 111.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 810)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1188, 1335, 2147)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4065)
[M::mem_pestat] mean and std.dev: (1270.92, 681.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5024)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (511, 819, 1070)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2188)
[M::mem_pestat] mean and std.dev: (613.22, 331.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2747)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 595752 sequences (160000212 bp)...
[M::mem_process_seqs] Processed 593558 reads in 52.371 CPU sec, 3.250 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::process] read 35140 sequences (9664990 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 291753, 9, 5)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (288, 347, 395)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (74, 609)
[M::mem_pestat] mean and std.dev: (333.00, 84.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 716)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (244, 307, 385)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 667)
[M::mem_pestat] mean and std.dev: (317.29, 110.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 808)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 595752 reads in 51.659 CPU sec, 3.280 real sec
[samclip] Processed 1200000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 17177, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (256, 321, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 700)
[M::mem_pestat] mean and std.dev: (334.50, 115.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 848)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 35140 reads in 3.534 CPU sec, 0.221 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24046_S23\tSM:HMS24046_S23 -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz
[main] Real time: 12.892 sec; CPU: 159.874 sec
[samclip] Total SAM records 1824229, removed 428700, allowed 109134, passed 1395529
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:55:34] Running: samtools index snps.bam 2>> snps.log
[23:55:35] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:55:35] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:55:39] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 12
          no. right trimmed                     : 83
          no. left and right trimmed            : 5
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 100

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 100
       total no. variants observed              : 1026
       total no. reference observed             : 0

Time elapsed: 0.02s

[23:55:39] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:55:40] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:55:41] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:55:41] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:55:41] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:55:41] Running: bcftools consensus --sample HMS24046_S23 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:55:42] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:55:42] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:55:42] Running: bcftools consensus --sample HMS24046_S23 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:55:42] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:55:42] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:55:44] Marked 1572 heterozygous sites with 'n'
[23:55:44] Creating extra output files: BED GFF CSV TXT HTML
[23:55:44] Identified 1026 variants.
[23:55:44] Result folder: HMS24046_S23
[23:55:44] Result files:
[23:55:44] * HMS24046_S23/snps.aligned.fa
[23:55:44] * HMS24046_S23/snps.bam
[23:55:44] * HMS24046_S23/snps.bam.bai
[23:55:44] * HMS24046_S23/snps.bed
[23:55:44] * HMS24046_S23/snps.consensus.fa
[23:55:44] * HMS24046_S23/snps.consensus.subs.fa
[23:55:44] * HMS24046_S23/snps.csv
[23:55:44] * HMS24046_S23/snps.filt.vcf
[23:55:44] * HMS24046_S23/snps.gff
[23:55:44] * HMS24046_S23/snps.html
[23:55:44] * HMS24046_S23/snps.log
[23:55:44] * HMS24046_S23/snps.raw.vcf
[23:55:44] * HMS24046_S23/snps.subs.vcf
[23:55:44] * HMS24046_S23/snps.tab
[23:55:44] * HMS24046_S23/snps.txt
[23:55:44] * HMS24046_S23/snps.vcf
[23:55:44] * HMS24046_S23/snps.vcf.gz
[23:55:44] * HMS24046_S23/snps.vcf.gz.csi
[23:55:44] Walltime used: 32 seconds
[23:55:44] Found a bug? Post it at https://github.com/tseemann/snippy/issues
[23:55:44] Done.
[23:55:44] This is snippy 4.6.0
[23:55:44] Written by Torsten Seemann
[23:55:44] Obtained from https://github.com/tseemann/snippy
[23:55:44] Detected operating system: linux
[23:55:44] Enabling bundled linux tools.
[23:55:44] Found bwa - /usr/local/bin/bwa
[23:55:44] Found bcftools - /usr/local/bin/bcftools
[23:55:44] Found samtools - /usr/local/bin/samtools
[23:55:44] Found java - /usr/local/bin/java
[23:55:44] Found snpEff - /usr/local/bin/snpEff
[23:55:44] Found samclip - /usr/local/bin/samclip
[23:55:44] Found seqtk - /usr/local/bin/seqtk
[23:55:44] Found parallel - /usr/local/bin/parallel
[23:55:44] Found freebayes - /usr/local/bin/freebayes
[23:55:44] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:55:44] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:55:44] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:55:44] Found vcfuniq - /usr/local/bin/vcfuniq
[23:55:44] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:55:44] Found gzip - /usr/bin/gzip
[23:55:44] Found vt - /usr/local/bin/vt
[23:55:44] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:55:44] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:55:44] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:55:44] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:55:44] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:55:44] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:55:44] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:55:44] Using reference: /data/Analysis/refe.gbk
[23:55:44] Treating reference as 'genbank' format.
[23:55:44] Will use 16 CPU cores.
[23:55:44] Using read file: /data/Analysis/HMS24051_S27_R1.fastq.gz
[23:55:44] Using read file: /data/Analysis/HMS24051_S27_R2.fastq.gz
[23:55:44] Creating folder: HMS24051_S27
[23:55:44] Changing working directory: HMS24051_S27
[23:55:44] Creating reference folder: reference
[23:55:44] Extracting FASTA and GFF from reference.
[23:55:46] Wrote 1 sequences to ref.fa
[23:55:46] Wrote 4429 features to ref.gff
[23:55:46] Creating reference/snpeff.config
[23:55:46] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:55:46] Using BAM RG (Read Group) ID: HMS24051_S27
[23:55:46] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:55:46] Running: bwa index reference/ref.fa 2>> snps.log
[23:55:47] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:55:47] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:55:47] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:55:47] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:55:47] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:55:50] Running: bwa mem  -Y -M -R '@RG\tID:HMS24051_S27\tSM:HMS24051_S27' -t 16 reference/ref.fa /data/Analysis/HMS24051_S27_R1.fastq.gz /data/Analysis/HMS24051_S27_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 597786 sequences (160000212 bp)...
[M::process] read 598070 sequences (160000143 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 292017, 9, 12)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (239, 296, 374)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 644)
[M::mem_pestat] mean and std.dev: (310.59, 104.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 779)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (279, 441, 1226)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3120)
[M::mem_pestat] mean and std.dev: (552.18, 418.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4067)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 597786 reads in 54.900 CPU sec, 3.445 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::process] read 235474 sequences (63152831 bp)...
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:55] Marked 8955 heterozygous sites with 'n'
[23:53:55] Creating extra output files: BED GFF CSV TXT HTML
[23:53:55] Identified 2484 variants.
[23:53:55] Result folder: HCU24002_S2
[23:53:55] Result files:
[23:53:55] * HCU24002_S2/snps.aligned.fa
[23:53:55] * HCU24002_S2/snps.bam
[23:53:55] * HCU24002_S2/snps.bam.bai
[23:53:55] * HCU24002_S2/snps.bed
[23:53:55] * HCU24002_S2/snps.consensus.fa
[23:53:55] * HCU24002_S2/snps.consensus.subs.fa
[23:53:55] * HCU24002_S2/snps.csv
[23:53:55] * HCU24002_S2/snps.filt.vcf
[23:53:55] * HCU24002_S2/snps.gff
[23:53:55] * HCU24002_S2/snps.html
[23:53:55] * HCU24002_S2/snps.log
[23:53:55] * HCU24002_S2/snps.raw.vcf
[23:53:55] * HCU24002_S2/snps.subs.vcf
[23:53:55] * HCU24002_S2/snps.tab
[23:53:55] * HCU24002_S2/snps.txt
[23:53:55] * HCU24002_S2/snps.vcf
[23:53:55] * HCU24002_S2/snps.vcf.gz
[23:53:55] * HCU24002_S2/snps.vcf.gz.csi
[23:53:55] Walltime used: 24 seconds
[23:53:55] Wishing you a life free of homopolymer errors.
[23:53:55] Done.
[23:53:55] This is snippy 4.6.0
[23:53:55] Written by Torsten Seemann
[23:53:55] Obtained from https://github.com/tseemann/snippy
[23:53:55] Detected operating system: linux
[23:53:55] Enabling bundled linux tools.
[23:53:55] Found bwa - /usr/local/bin/bwa
[23:53:55] Found bcftools - /usr/local/bin/bcftools
[23:53:55] Found samtools - /usr/local/bin/samtools
[23:53:55] Found java - /usr/local/bin/java
[23:53:55] Found snpEff - /usr/local/bin/snpEff
[23:53:55] Found samclip - /usr/local/bin/samclip
[23:53:55] Found seqtk - /usr/local/bin/seqtk
[23:53:55] Found parallel - /usr/local/bin/parallel
[23:53:55] Found freebayes - /usr/local/bin/freebayes
[23:53:55] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:55] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:55] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:55] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:55] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:55] Found gzip - /usr/bin/gzip
[23:53:55] Found vt - /usr/local/bin/vt
[23:53:55] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:55] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:55] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:55] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:55] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:55] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:55] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:55] Using reference: /data/Analysis/refe.gbk
[23:53:56] Treating reference as 'genbank' format.
[23:53:56] Will use 16 CPU cores.
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:53:56] Creating folder: HCU24010_S6
[23:53:56] Changing working directory: HCU24010_S6
[23:53:56] Creating reference folder: reference
[23:53:56] Extracting FASTA and GFF from reference.
[23:53:57] Wrote 1 sequences to ref.fa
[23:53:57] Wrote 4429 features to ref.gff
[23:53:57] Creating reference/snpeff.config
[23:53:57] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:57] Using BAM RG (Read Group) ID: HCU24010_S6
[23:53:57] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:57] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:58] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:58] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:58] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:02] Running: bwa mem  -Y -M -R '@RG\tID:HCU24010_S6\tSM:HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.716 CPU sec, 3.057 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.756 CPU sec, 3.219 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 49.486 CPU sec, 3.143 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 15.338 CPU sec, 0.965 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24010_S6\tSM:HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.889 sec; CPU: 167.280 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:18] Running: samtools index snps.bam 2>> snps.log
[23:54:19] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:19] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:23] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 9
          no. right trimmed                     : 88
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 101

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 101
       total no. variants observed              : 941
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:54:23] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:24] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:26] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:26] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:28] Marked 1145 heterozygous sites with 'n'
[23:54:28] Creating extra output files: BED GFF CSV TXT HTML
[23:54:28] Identified 941 variants.
[23:54:28] Result folder: HCU24010_S6
[23:54:28] Result files:
[23:54:28] * HCU24010_S6/snps.aligned.fa
[23:54:28] * HCU24010_S6/snps.bam
[23:54:28] * HCU24010_S6/snps.bam.bai
[23:54:28] * HCU24010_S6/snps.bed
[23:54:28] * HCU24010_S6/snps.consensus.fa
[23:54:28] * HCU24010_S6/snps.consensus.subs.fa
[23:54:28] * HCU24010_S6/snps.csv
[23:54:28] * HCU24010_S6/snps.filt.vcf
[23:54:28] * HCU24010_S6/snps.gff
[23:54:28] * HCU24010_S6/snps.html
[23:54:28] * HCU24010_S6/snps.log
[23:54:28] * HCU24010_S6/snps.raw.vcf
[23:54:28] * HCU24010_S6/snps.subs.vcf
[23:54:28] * HCU24010_S6/snps.tab
[23:54:28] * HCU24010_S6/snps.txt
[23:54:28] * HCU24010_S6/snps.vcf
[23:54:28] * HCU24010_S6/snps.vcf.gz
[23:54:28] * HCU24010_S6/snps.vcf.gz.csi
[23:54:28] Walltime used: 33 seconds
[23:54:28] Wishing you a life free of homopolymer errors.
[23:54:28] Done.
[23:54:29] This is snippy 4.6.0
[23:54:29] Written by Torsten Seemann
[23:54:29] Obtained from https://github.com/tseemann/snippy
[23:54:29] Detected operating system: linux
[23:54:29] Enabling bundled linux tools.
[23:54:29] Found bwa - /usr/local/bin/bwa
[23:54:29] Found bcftools - /usr/local/bin/bcftools
[23:54:29] Found samtools - /usr/local/bin/samtools
[23:54:29] Found java - /usr/local/bin/java
[23:54:29] Found snpEff - /usr/local/bin/snpEff
[23:54:29] Found samclip - /usr/local/bin/samclip
[23:54:29] Found seqtk - /usr/local/bin/seqtk
[23:54:29] Found parallel - /usr/local/bin/parallel
[23:54:29] Found freebayes - /usr/local/bin/freebayes
[23:54:29] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:29] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:29] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:29] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:29] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:29] Found gzip - /usr/bin/gzip
[23:54:29] Found vt - /usr/local/bin/vt
[23:54:29] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:29] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:29] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:29] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:29] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:29] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:29] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:29] Using reference: /data/Analysis/refe.gbk
[23:54:29] Treating reference as 'genbank' format.
[23:54:29] Will use 16 CPU cores.
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:54:29] Creating folder: HCU24011_S7
[23:54:29] Changing working directory: HCU24011_S7
[23:54:29] Creating reference folder: reference
[23:54:29] Extracting FASTA and GFF from reference.
[23:54:30] Wrote 1 sequences to ref.fa
[23:54:30] Wrote 4429 features to ref.gff
[23:54:30] Creating reference/snpeff.config
[23:54:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:30] Using BAM RG (Read Group) ID: HCU24011_S7
[23:54:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:32] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:35] Running: bwa mem  -Y -M -R '@RG\tID:HCU24011_S7\tSM:HCU24011_S7' -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 510314 sequences (133277700 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (52, 248478, 18, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (320, 504, 939)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2177)
[M::mem_pestat] mean and std.dev: (524.39, 308.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2796)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 281, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 610)
[M::mem_pestat] mean and std.dev: (292.95, 100.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 738)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 664, 1334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3814)
[M::mem_pestat] mean and std.dev: (839.61, 800.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5054)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (302, 521, 1337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3407)
[M::mem_pestat] mean and std.dev: (743.44, 552.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4442)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 510314 reads in 47.585 CPU sec, 3.060 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24011_S7\tSM:HCU24011_S7 -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz
[main] Real time: 5.537 sec; CPU: 49.200 sec
[samclip] Total SAM records 513584, removed 116348, allowed 35199, passed 397236
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:41] Running: samtools index snps.bam 2>> snps.log
[23:54:42] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:42] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:43] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 37
          no. right trimmed                     : 179
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 219

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 219
       total no. variants observed              : 2202
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:54:44] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:44] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:46] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:46] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:46] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:46] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:47] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:47] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:49] Marked 7775 heterozygous sites with 'n'
[23:54:49] Creating extra output files: BED GFF CSV TXT HTML
[23:54:49] Identified 2202 variants.
[23:54:49] Result folder: HCU24011_S7
[23:54:49] Result files:
[23:54:49] * HCU24011_S7/snps.aligned.fa
[23:54:49] * HCU24011_S7/snps.bam
[23:54:49] * HCU24011_S7/snps.bam.bai
[23:54:49] * HCU24011_S7/snps.bed
[23:54:49] * HCU24011_S7/snps.consensus.fa
[23:54:49] * HCU24011_S7/snps.consensus.subs.fa
[23:54:49] * HCU24011_S7/snps.csv
[23:54:49] * HCU24011_S7/snps.filt.vcf
[23:54:49] * HCU24011_S7/snps.gff
[23:54:49] * HCU24011_S7/snps.html
[23:54:49] * HCU24011_S7/snps.log
[23:54:49] * HCU24011_S7/snps.raw.vcf
[23:54:49] * HCU24011_S7/snps.subs.vcf
[23:54:49] * HCU24011_S7/snps.tab
[23:54:49] * HCU24011_S7/snps.txt
[23:54:49] * HCU24011_S7/snps.vcf
[23:54:49] * HCU24011_S7/snps.vcf.gz
[23:54:49] * HCU24011_S7/snps.vcf.gz.csi
[23:54:49] Walltime used: 20 seconds
[23:54:49] Wishing you a life free of homopolymer errors.
[23:54:49] Done.
[23:54:49] This is snippy 4.6.0
[23:54:49] Written by Torsten Seemann
[23:54:49] Obtained from https://github.com/tseemann/snippy
[23:54:49] Detected operating system: linux
[23:54:49] Enabling bundled linux tools.
[23:54:49] Found bwa - /usr/local/bin/bwa
[23:54:49] Found bcftools - /usr/local/bin/bcftools
[23:54:49] Found samtools - /usr/local/bin/samtools
[23:54:49] Found java - /usr/local/bin/java
[23:54:49] Found snpEff - /usr/local/bin/snpEff
[23:54:49] Found samclip - /usr/local/bin/samclip
[23:54:49] Found seqtk - /usr/local/bin/seqtk
[23:54:49] Found parallel - /usr/local/bin/parallel
[23:54:49] Found freebayes - /usr/local/bin/freebayes
[23:54:49] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:49] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:49] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:49] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:49] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:49] Found gzip - /usr/bin/gzip
[23:54:49] Found vt - /usr/local/bin/vt
[23:54:49] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:49] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:49] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:49] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:49] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:49] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:49] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:49] Using reference: /data/Analysis/refe.gbk
[23:54:49] Treating reference as 'genbank' format.
[23:54:49] Will use 16 CPU cores.
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R1.fastq.gz
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R2.fastq.gz
[23:54:49] Creating folder: HMS24017_S15
[23:54:49] Changing working directory: HMS24017_S15
[23:54:49] Creating reference folder: reference
[23:54:49] Extracting FASTA and GFF from reference.
[23:54:51] Wrote 1 sequences to ref.fa
[23:54:51] Wrote 4429 features to ref.gff
[23:54:51] Creating reference/snpeff.config
[23:54:51] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:51] Using BAM RG (Read Group) ID: HMS24017_S15
[23:54:51] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:51] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:52] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:52] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:52] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:55] Running: bwa mem  -Y -M -R '@RG\tID:HMS24017_S15\tSM:HMS24017_S15' -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 746630 sequences (160000202 bp)...
[M::process] read 218810 sequences (46953613 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 366940, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 259)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (215.34, 67.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 746630 reads in 39.279 CPU sec, 2.585 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 107505, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 260)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (215.68, 67.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 400000 records...
[M::mem_process_seqs] Processed 218810 reads in 12.831 CPU sec, 0.832 real sec
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24017_S15\tSM:HMS24017_S15 -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz
[main] Real time: 6.320 sec; CPU: 54.297 sec
[samclip] Total SAM records 967230, removed 76910, allowed 25086, passed 890320
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:55:04] Running: samtools index snps.bam 2>> snps.log
[23:55:04] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:55:04] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:55:06] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 10
          no. right trimmed                     : 74
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 87

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 87
       total no. variants observed              : 877
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:55:06] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:55:07] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:55:09] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:55:09] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:55:12] Marked 5332 heterozygous sites with 'n'
[23:55:12] Creating extra output files: BED GFF CSV TXT HTML
[23:55:12] Identified 877 variants.
[23:55:12] Result folder: HMS24017_S15
[23:55:12] Result files:
[23:55:12] * HMS24017_S15/snps.aligned.fa
[23:55:12] * HMS24017_S15/snps.bam
[23:55:12] * HMS24017_S15/snps.bam.bai
[23:55:12] * HMS24017_S15/snps.bed
[23:55:12] * HMS24017_S15/snps.consensus.fa
[23:55:12] * HMS24017_S15/snps.consensus.subs.fa
[23:55:12] * HMS24017_S15/snps.csv
[23:55:12] * HMS24017_S15/snps.filt.vcf
[23:55:12] * HMS24017_S15/snps.gff
[23:55:12] * HMS24017_S15/snps.html
[23:55:12] * HMS24017_S15/snps.log
[23:55:12] * HMS24017_S15/snps.raw.vcf
[23:55:12] * HMS24017_S15/snps.subs.vcf
[23:55:12] * HMS24017_S15/snps.tab
[23:55:12] * HMS24017_S15/snps.txt
[23:55:12] * HMS24017_S15/snps.vcf
[23:55:12] * HMS24017_S15/snps.vcf.gz
[23:55:12] * HMS24017_S15/snps.vcf.gz.csi
[23:55:12] Walltime used: 23 seconds
[23:55:12] Did you know? Snippy is a combination of SNP, Skippy, and snappy.
[23:55:12] Done.
[23:55:12] This is snippy 4.6.0
[23:55:12] Written by Torsten Seemann
[23:55:12] Obtained from https://github.com/tseemann/snippy
[23:55:12] Detected operating system: linux
[23:55:12] Enabling bundled linux tools.
[23:55:12] Found bwa - /usr/local/bin/bwa
[23:55:12] Found bcftools - /usr/local/bin/bcftools
[23:55:12] Found samtools - /usr/local/bin/samtools
[23:55:12] Found java - /usr/local/bin/java
[23:55:12] Found snpEff - /usr/local/bin/snpEff
[23:55:12] Found samclip - /usr/local/bin/samclip
[23:55:12] Found seqtk - /usr/local/bin/seqtk
[23:55:12] Found parallel - /usr/local/bin/parallel
[23:55:12] Found freebayes - /usr/local/bin/freebayes
[23:55:12] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:55:12] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:55:12] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:55:12] Found vcfuniq - /usr/local/bin/vcfuniq
[23:55:12] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:55:12] Found gzip - /usr/bin/gzip
[23:55:12] Found vt - /usr/local/bin/vt
[23:55:12] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:55:12] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:55:12] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:55:12] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:55:12] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:55:12] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:55:12] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:55:12] Using reference: /data/Analysis/refe.gbk
[23:55:12] Treating reference as 'genbank' format.
[23:55:12] Will use 16 CPU cores.
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R1.fastq.gz
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R2.fastq.gz
[23:55:12] Creating folder: HMS24046_S23
[23:55:12] Changing working directory: HMS24046_S23
[23:55:12] Creating reference folder: reference
[23:55:12] Extracting FASTA and GFF from reference.
[23:55:14] Wrote 1 sequences to ref.fa
[23:55:14] Wrote 4429 features to ref.gff
[23:55:14] Creating reference/snpeff.config
[23:55:14] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:55:14] Using BAM RG (Read Group) ID: HMS24046_S23
[23:55:14] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:55:14] Running: bwa index reference/ref.fa 2>> snps.log
[23:55:14] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:55:14] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:55:15] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:55:15] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:55:15] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:55:18] Running: bwa mem  -Y -M -R '@RG\tID:HMS24046_S23\tSM:HMS24046_S23' -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 593288 sequences (160000360 bp)...
[M::process] read 593558 sequences (160000118 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 290696, 6, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (235, 410, 549)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1177)
[M::mem_pestat] mean and std.dev: (357.00, 166.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1491)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (247, 310, 389)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 673)
[M::mem_pestat] mean and std.dev: (320.58, 111.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 815)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 593288 reads in 50.085 CPU sec, 3.126 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 290813, 12, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (246, 308, 387)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 669)
[M::mem_pestat] mean and std.dev: (319.18, 111.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 810)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1188, 1335, 2147)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4065)
[M::mem_pestat] mean and std.dev: (1270.92, 681.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5024)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (511, 819, 1070)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2188)
[M::mem_pestat] mean and std.dev: (613.22, 331.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2747)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 595752 sequences (160000212 bp)...
[M::mem_process_seqs] Processed 593558 reads in 52.371 CPU sec, 3.250 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::process] read 35140 sequences (9664990 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 291753, 9, 5)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (288, 347, 395)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (74, 609)
[M::mem_pestat] mean and std.dev: (333.00, 84.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 716)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (244, 307, 385)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 667)
[M::mem_pestat] mean and std.dev: (317.29, 110.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 808)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 595752 reads in 51.659 CPU sec, 3.280 real sec
[samclip] Processed 1200000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 17177, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (256, 321, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 700)
[M::mem_pestat] mean and std.dev: (334.50, 115.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 848)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 35140 reads in 3.534 CPU sec, 0.221 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24046_S23\tSM:HMS24046_S23 -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz
[main] Real time: 12.892 sec; CPU: 159.874 sec
[samclip] Total SAM records 1824229, removed 428700, allowed 109134, passed 1395529
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:55:34] Running: samtools index snps.bam 2>> snps.log
[23:55:35] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:55:35] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:55:39] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 12
          no. right trimmed                     : 83
          no. left and right trimmed            : 5
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 100

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 100
       total no. variants observed              : 1026
       total no. reference observed             : 0

Time elapsed: 0.02s

[23:55:39] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:55:40] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:55:41] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:55:41] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:55:41] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:55:41] Running: bcftools consensus --sample HMS24046_S23 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:55:42] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:55:42] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:55:42] Running: bcftools consensus --sample HMS24046_S23 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:55:42] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:55:42] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:55:44] Marked 1572 heterozygous sites with 'n'
[23:55:44] Creating extra output files: BED GFF CSV TXT HTML
[23:55:44] Identified 1026 variants.
[23:55:44] Result folder: HMS24046_S23
[23:55:44] Result files:
[23:55:44] * HMS24046_S23/snps.aligned.fa
[23:55:44] * HMS24046_S23/snps.bam
[23:55:44] * HMS24046_S23/snps.bam.bai
[23:55:44] * HMS24046_S23/snps.bed
[23:55:44] * HMS24046_S23/snps.consensus.fa
[23:55:44] * HMS24046_S23/snps.consensus.subs.fa
[23:55:44] * HMS24046_S23/snps.csv
[23:55:44] * HMS24046_S23/snps.filt.vcf
[23:55:44] * HMS24046_S23/snps.gff
[23:55:44] * HMS24046_S23/snps.html
[23:55:44] * HMS24046_S23/snps.log
[23:55:44] * HMS24046_S23/snps.raw.vcf
[23:55:44] * HMS24046_S23/snps.subs.vcf
[23:55:44] * HMS24046_S23/snps.tab
[23:55:44] * HMS24046_S23/snps.txt
[23:55:44] * HMS24046_S23/snps.vcf
[23:55:44] * HMS24046_S23/snps.vcf.gz
[23:55:44] * HMS24046_S23/snps.vcf.gz.csi
[23:55:44] Walltime used: 32 seconds
[23:55:44] Found a bug? Post it at https://github.com/tseemann/snippy/issues
[23:55:44] Done.
[23:55:44] This is snippy 4.6.0
[23:55:44] Written by Torsten Seemann
[23:55:44] Obtained from https://github.com/tseemann/snippy
[23:55:44] Detected operating system: linux
[23:55:44] Enabling bundled linux tools.
[23:55:44] Found bwa - /usr/local/bin/bwa
[23:55:44] Found bcftools - /usr/local/bin/bcftools
[23:55:44] Found samtools - /usr/local/bin/samtools
[23:55:44] Found java - /usr/local/bin/java
[23:55:44] Found snpEff - /usr/local/bin/snpEff
[23:55:44] Found samclip - /usr/local/bin/samclip
[23:55:44] Found seqtk - /usr/local/bin/seqtk
[23:55:44] Found parallel - /usr/local/bin/parallel
[23:55:44] Found freebayes - /usr/local/bin/freebayes
[23:55:44] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:55:44] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:55:44] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:55:44] Found vcfuniq - /usr/local/bin/vcfuniq
[23:55:44] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:55:44] Found gzip - /usr/bin/gzip
[23:55:44] Found vt - /usr/local/bin/vt
[23:55:44] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:55:44] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:55:44] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:55:44] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:55:44] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:55:44] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:55:44] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:55:44] Using reference: /data/Analysis/refe.gbk
[23:55:44] Treating reference as 'genbank' format.
[23:55:44] Will use 16 CPU cores.
[23:55:44] Using read file: /data/Analysis/HMS24051_S27_R1.fastq.gz
[23:55:44] Using read file: /data/Analysis/HMS24051_S27_R2.fastq.gz
[23:55:44] Creating folder: HMS24051_S27
[23:55:44] Changing working directory: HMS24051_S27
[23:55:44] Creating reference folder: reference
[23:55:44] Extracting FASTA and GFF from reference.
[23:55:46] Wrote 1 sequences to ref.fa
[23:55:46] Wrote 4429 features to ref.gff
[23:55:46] Creating reference/snpeff.config
[23:55:46] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:55:46] Using BAM RG (Read Group) ID: HMS24051_S27
[23:55:46] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:55:46] Running: bwa index reference/ref.fa 2>> snps.log
[23:55:47] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:55:47] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:55:47] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:55:47] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:55:47] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:55:50] Running: bwa mem  -Y -M -R '@RG\tID:HMS24051_S27\tSM:HMS24051_S27' -t 16 reference/ref.fa /data/Analysis/HMS24051_S27_R1.fastq.gz /data/Analysis/HMS24051_S27_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 597786 sequences (160000212 bp)...
[M::process] read 598070 sequences (160000143 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 292017, 9, 12)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (239, 296, 374)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 644)
[M::mem_pestat] mean and std.dev: (310.59, 104.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 779)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (279, 441, 1226)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3120)
[M::mem_pestat] mean and std.dev: (552.18, 418.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4067)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 597786 reads in 54.900 CPU sec, 3.445 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::process] read 235474 sequences (63152831 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 291898, 12, 10)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (291, 340, 515)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 963)
[M::mem_pestat] mean and std.dev: (393.10, 200.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1197)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 295, 372)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (309.11, 103.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 774)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (2044, 2346, 5595)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12697)
[M::mem_pestat] mean and std.dev: (2868.33, 1647.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16248)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (242, 507, 555)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1181)
[M::mem_pestat] mean and std.dev: (389.56, 157.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1494)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 598070 reads in 56.623 CPU sec, 3.573 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 114867, 5, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (239, 297, 376)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 650)
[M::mem_pestat] mean and std.dev: (312.20, 105.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 787)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1100000 records...
[M::mem_process_seqs] Processed 235474 reads in 24.357 CPU sec, 1.523 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24051_S27\tSM:HMS24051_S27 -t 16 reference/ref.fa /data/Analysis/HMS24051_S27_R1.fastq.gz /data/Analysis/HMS24051_S27_R2.fastq.gz
[main] Real time: 10.830 sec; CPU: 137.845 sec
[samclip] Total SAM records 1437126, removed 312079, allowed 105886, passed 1125047
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:56:04] Running: samtools index snps.bam 2>> snps.log
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:55] Marked 8955 heterozygous sites with 'n'
[23:53:55] Creating extra output files: BED GFF CSV TXT HTML
[23:53:55] Identified 2484 variants.
[23:53:55] Result folder: HCU24002_S2
[23:53:55] Result files:
[23:53:55] * HCU24002_S2/snps.aligned.fa
[23:53:55] * HCU24002_S2/snps.bam
[23:53:55] * HCU24002_S2/snps.bam.bai
[23:53:55] * HCU24002_S2/snps.bed
[23:53:55] * HCU24002_S2/snps.consensus.fa
[23:53:55] * HCU24002_S2/snps.consensus.subs.fa
[23:53:55] * HCU24002_S2/snps.csv
[23:53:55] * HCU24002_S2/snps.filt.vcf
[23:53:55] * HCU24002_S2/snps.gff
[23:53:55] * HCU24002_S2/snps.html
[23:53:55] * HCU24002_S2/snps.log
[23:53:55] * HCU24002_S2/snps.raw.vcf
[23:53:55] * HCU24002_S2/snps.subs.vcf
[23:53:55] * HCU24002_S2/snps.tab
[23:53:55] * HCU24002_S2/snps.txt
[23:53:55] * HCU24002_S2/snps.vcf
[23:53:55] * HCU24002_S2/snps.vcf.gz
[23:53:55] * HCU24002_S2/snps.vcf.gz.csi
[23:53:55] Walltime used: 24 seconds
[23:53:55] Wishing you a life free of homopolymer errors.
[23:53:55] Done.
[23:53:55] This is snippy 4.6.0
[23:53:55] Written by Torsten Seemann
[23:53:55] Obtained from https://github.com/tseemann/snippy
[23:53:55] Detected operating system: linux
[23:53:55] Enabling bundled linux tools.
[23:53:55] Found bwa - /usr/local/bin/bwa
[23:53:55] Found bcftools - /usr/local/bin/bcftools
[23:53:55] Found samtools - /usr/local/bin/samtools
[23:53:55] Found java - /usr/local/bin/java
[23:53:55] Found snpEff - /usr/local/bin/snpEff
[23:53:55] Found samclip - /usr/local/bin/samclip
[23:53:55] Found seqtk - /usr/local/bin/seqtk
[23:53:55] Found parallel - /usr/local/bin/parallel
[23:53:55] Found freebayes - /usr/local/bin/freebayes
[23:53:55] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:55] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:55] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:55] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:55] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:55] Found gzip - /usr/bin/gzip
[23:53:55] Found vt - /usr/local/bin/vt
[23:53:55] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:55] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:55] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:55] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:55] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:55] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:55] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:55] Using reference: /data/Analysis/refe.gbk
[23:53:56] Treating reference as 'genbank' format.
[23:53:56] Will use 16 CPU cores.
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:53:56] Creating folder: HCU24010_S6
[23:53:56] Changing working directory: HCU24010_S6
[23:53:56] Creating reference folder: reference
[23:53:56] Extracting FASTA and GFF from reference.
[23:53:57] Wrote 1 sequences to ref.fa
[23:53:57] Wrote 4429 features to ref.gff
[23:53:57] Creating reference/snpeff.config
[23:53:57] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:57] Using BAM RG (Read Group) ID: HCU24010_S6
[23:53:57] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:57] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:58] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:58] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:58] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:02] Running: bwa mem  -Y -M -R '@RG\tID:HCU24010_S6\tSM:HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.716 CPU sec, 3.057 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.756 CPU sec, 3.219 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 49.486 CPU sec, 3.143 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 15.338 CPU sec, 0.965 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24010_S6\tSM:HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.889 sec; CPU: 167.280 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:18] Running: samtools index snps.bam 2>> snps.log
[23:54:19] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:19] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:23] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 9
          no. right trimmed                     : 88
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 101

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 101
       total no. variants observed              : 941
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:54:23] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:24] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:26] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:26] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:28] Marked 1145 heterozygous sites with 'n'
[23:54:28] Creating extra output files: BED GFF CSV TXT HTML
[23:54:28] Identified 941 variants.
[23:54:28] Result folder: HCU24010_S6
[23:54:28] Result files:
[23:54:28] * HCU24010_S6/snps.aligned.fa
[23:54:28] * HCU24010_S6/snps.bam
[23:54:28] * HCU24010_S6/snps.bam.bai
[23:54:28] * HCU24010_S6/snps.bed
[23:54:28] * HCU24010_S6/snps.consensus.fa
[23:54:28] * HCU24010_S6/snps.consensus.subs.fa
[23:54:28] * HCU24010_S6/snps.csv
[23:54:28] * HCU24010_S6/snps.filt.vcf
[23:54:28] * HCU24010_S6/snps.gff
[23:54:28] * HCU24010_S6/snps.html
[23:54:28] * HCU24010_S6/snps.log
[23:54:28] * HCU24010_S6/snps.raw.vcf
[23:54:28] * HCU24010_S6/snps.subs.vcf
[23:54:28] * HCU24010_S6/snps.tab
[23:54:28] * HCU24010_S6/snps.txt
[23:54:28] * HCU24010_S6/snps.vcf
[23:54:28] * HCU24010_S6/snps.vcf.gz
[23:54:28] * HCU24010_S6/snps.vcf.gz.csi
[23:54:28] Walltime used: 33 seconds
[23:54:28] Wishing you a life free of homopolymer errors.
[23:54:28] Done.
[23:54:29] This is snippy 4.6.0
[23:54:29] Written by Torsten Seemann
[23:54:29] Obtained from https://github.com/tseemann/snippy
[23:54:29] Detected operating system: linux
[23:54:29] Enabling bundled linux tools.
[23:54:29] Found bwa - /usr/local/bin/bwa
[23:54:29] Found bcftools - /usr/local/bin/bcftools
[23:54:29] Found samtools - /usr/local/bin/samtools
[23:54:29] Found java - /usr/local/bin/java
[23:54:29] Found snpEff - /usr/local/bin/snpEff
[23:54:29] Found samclip - /usr/local/bin/samclip
[23:54:29] Found seqtk - /usr/local/bin/seqtk
[23:54:29] Found parallel - /usr/local/bin/parallel
[23:54:29] Found freebayes - /usr/local/bin/freebayes
[23:54:29] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:29] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:29] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:29] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:29] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:29] Found gzip - /usr/bin/gzip
[23:54:29] Found vt - /usr/local/bin/vt
[23:54:29] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:29] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:29] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:29] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:29] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:29] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:29] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:29] Using reference: /data/Analysis/refe.gbk
[23:54:29] Treating reference as 'genbank' format.
[23:54:29] Will use 16 CPU cores.
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:54:29] Creating folder: HCU24011_S7
[23:54:29] Changing working directory: HCU24011_S7
[23:54:29] Creating reference folder: reference
[23:54:29] Extracting FASTA and GFF from reference.
[23:54:30] Wrote 1 sequences to ref.fa
[23:54:30] Wrote 4429 features to ref.gff
[23:54:30] Creating reference/snpeff.config
[23:54:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:30] Using BAM RG (Read Group) ID: HCU24011_S7
[23:54:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:32] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:35] Running: bwa mem  -Y -M -R '@RG\tID:HCU24011_S7\tSM:HCU24011_S7' -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 510314 sequences (133277700 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (52, 248478, 18, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (320, 504, 939)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2177)
[M::mem_pestat] mean and std.dev: (524.39, 308.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2796)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 281, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 610)
[M::mem_pestat] mean and std.dev: (292.95, 100.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 738)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 664, 1334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3814)
[M::mem_pestat] mean and std.dev: (839.61, 800.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5054)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (302, 521, 1337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3407)
[M::mem_pestat] mean and std.dev: (743.44, 552.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4442)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 510314 reads in 47.585 CPU sec, 3.060 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24011_S7\tSM:HCU24011_S7 -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz
[main] Real time: 5.537 sec; CPU: 49.200 sec
[samclip] Total SAM records 513584, removed 116348, allowed 35199, passed 397236
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:41] Running: samtools index snps.bam 2>> snps.log
[23:54:42] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:42] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:43] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 37
          no. right trimmed                     : 179
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 219

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 219
       total no. variants observed              : 2202
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:54:44] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:44] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:46] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:46] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:46] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:46] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:47] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:47] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:49] Marked 7775 heterozygous sites with 'n'
[23:54:49] Creating extra output files: BED GFF CSV TXT HTML
[23:54:49] Identified 2202 variants.
[23:54:49] Result folder: HCU24011_S7
[23:54:49] Result files:
[23:54:49] * HCU24011_S7/snps.aligned.fa
[23:54:49] * HCU24011_S7/snps.bam
[23:54:49] * HCU24011_S7/snps.bam.bai
[23:54:49] * HCU24011_S7/snps.bed
[23:54:49] * HCU24011_S7/snps.consensus.fa
[23:54:49] * HCU24011_S7/snps.consensus.subs.fa
[23:54:49] * HCU24011_S7/snps.csv
[23:54:49] * HCU24011_S7/snps.filt.vcf
[23:54:49] * HCU24011_S7/snps.gff
[23:54:49] * HCU24011_S7/snps.html
[23:54:49] * HCU24011_S7/snps.log
[23:54:49] * HCU24011_S7/snps.raw.vcf
[23:54:49] * HCU24011_S7/snps.subs.vcf
[23:54:49] * HCU24011_S7/snps.tab
[23:54:49] * HCU24011_S7/snps.txt
[23:54:49] * HCU24011_S7/snps.vcf
[23:54:49] * HCU24011_S7/snps.vcf.gz
[23:54:49] * HCU24011_S7/snps.vcf.gz.csi
[23:54:49] Walltime used: 20 seconds
[23:54:49] Wishing you a life free of homopolymer errors.
[23:54:49] Done.
[23:54:49] This is snippy 4.6.0
[23:54:49] Written by Torsten Seemann
[23:54:49] Obtained from https://github.com/tseemann/snippy
[23:54:49] Detected operating system: linux
[23:54:49] Enabling bundled linux tools.
[23:54:49] Found bwa - /usr/local/bin/bwa
[23:54:49] Found bcftools - /usr/local/bin/bcftools
[23:54:49] Found samtools - /usr/local/bin/samtools
[23:54:49] Found java - /usr/local/bin/java
[23:54:49] Found snpEff - /usr/local/bin/snpEff
[23:54:49] Found samclip - /usr/local/bin/samclip
[23:54:49] Found seqtk - /usr/local/bin/seqtk
[23:54:49] Found parallel - /usr/local/bin/parallel
[23:54:49] Found freebayes - /usr/local/bin/freebayes
[23:54:49] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:49] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:49] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:49] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:49] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:49] Found gzip - /usr/bin/gzip
[23:54:49] Found vt - /usr/local/bin/vt
[23:54:49] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:49] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:49] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:49] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:49] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:49] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:49] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:49] Using reference: /data/Analysis/refe.gbk
[23:54:49] Treating reference as 'genbank' format.
[23:54:49] Will use 16 CPU cores.
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R1.fastq.gz
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R2.fastq.gz
[23:54:49] Creating folder: HMS24017_S15
[23:54:49] Changing working directory: HMS24017_S15
[23:54:49] Creating reference folder: reference
[23:54:49] Extracting FASTA and GFF from reference.
[23:54:51] Wrote 1 sequences to ref.fa
[23:54:51] Wrote 4429 features to ref.gff
[23:54:51] Creating reference/snpeff.config
[23:54:51] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:51] Using BAM RG (Read Group) ID: HMS24017_S15
[23:54:51] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:51] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:52] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:52] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:52] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:55] Running: bwa mem  -Y -M -R '@RG\tID:HMS24017_S15\tSM:HMS24017_S15' -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 746630 sequences (160000202 bp)...
[M::process] read 218810 sequences (46953613 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 366940, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 259)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (215.34, 67.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 746630 reads in 39.279 CPU sec, 2.585 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 107505, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 260)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (215.68, 67.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 400000 records...
[M::mem_process_seqs] Processed 218810 reads in 12.831 CPU sec, 0.832 real sec
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24017_S15\tSM:HMS24017_S15 -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz
[main] Real time: 6.320 sec; CPU: 54.297 sec
[samclip] Total SAM records 967230, removed 76910, allowed 25086, passed 890320
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:55:04] Running: samtools index snps.bam 2>> snps.log
[23:55:04] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:55:04] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:55:06] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 10
          no. right trimmed                     : 74
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 87

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 87
       total no. variants observed              : 877
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:55:06] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:55:07] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:55:09] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:55:09] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:55:12] Marked 5332 heterozygous sites with 'n'
[23:55:12] Creating extra output files: BED GFF CSV TXT HTML
[23:55:12] Identified 877 variants.
[23:55:12] Result folder: HMS24017_S15
[23:55:12] Result files:
[23:55:12] * HMS24017_S15/snps.aligned.fa
[23:55:12] * HMS24017_S15/snps.bam
[23:55:12] * HMS24017_S15/snps.bam.bai
[23:55:12] * HMS24017_S15/snps.bed
[23:55:12] * HMS24017_S15/snps.consensus.fa
[23:55:12] * HMS24017_S15/snps.consensus.subs.fa
[23:55:12] * HMS24017_S15/snps.csv
[23:55:12] * HMS24017_S15/snps.filt.vcf
[23:55:12] * HMS24017_S15/snps.gff
[23:55:12] * HMS24017_S15/snps.html
[23:55:12] * HMS24017_S15/snps.log
[23:55:12] * HMS24017_S15/snps.raw.vcf
[23:55:12] * HMS24017_S15/snps.subs.vcf
[23:55:12] * HMS24017_S15/snps.tab
[23:55:12] * HMS24017_S15/snps.txt
[23:55:12] * HMS24017_S15/snps.vcf
[23:55:12] * HMS24017_S15/snps.vcf.gz
[23:55:12] * HMS24017_S15/snps.vcf.gz.csi
[23:55:12] Walltime used: 23 seconds
[23:55:12] Did you know? Snippy is a combination of SNP, Skippy, and snappy.
[23:55:12] Done.
[23:55:12] This is snippy 4.6.0
[23:55:12] Written by Torsten Seemann
[23:55:12] Obtained from https://github.com/tseemann/snippy
[23:55:12] Detected operating system: linux
[23:55:12] Enabling bundled linux tools.
[23:55:12] Found bwa - /usr/local/bin/bwa
[23:55:12] Found bcftools - /usr/local/bin/bcftools
[23:55:12] Found samtools - /usr/local/bin/samtools
[23:55:12] Found java - /usr/local/bin/java
[23:55:12] Found snpEff - /usr/local/bin/snpEff
[23:55:12] Found samclip - /usr/local/bin/samclip
[23:55:12] Found seqtk - /usr/local/bin/seqtk
[23:55:12] Found parallel - /usr/local/bin/parallel
[23:55:12] Found freebayes - /usr/local/bin/freebayes
[23:55:12] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:55:12] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:55:12] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:55:12] Found vcfuniq - /usr/local/bin/vcfuniq
[23:55:12] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:55:12] Found gzip - /usr/bin/gzip
[23:55:12] Found vt - /usr/local/bin/vt
[23:55:12] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:55:12] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:55:12] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:55:12] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:55:12] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:55:12] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:55:12] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:55:12] Using reference: /data/Analysis/refe.gbk
[23:55:12] Treating reference as 'genbank' format.
[23:55:12] Will use 16 CPU cores.
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R1.fastq.gz
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R2.fastq.gz
[23:55:12] Creating folder: HMS24046_S23
[23:55:12] Changing working directory: HMS24046_S23
[23:55:12] Creating reference folder: reference
[23:55:12] Extracting FASTA and GFF from reference.
[23:55:14] Wrote 1 sequences to ref.fa
[23:55:14] Wrote 4429 features to ref.gff
[23:55:14] Creating reference/snpeff.config
[23:55:14] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:55:14] Using BAM RG (Read Group) ID: HMS24046_S23
[23:55:14] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:55:14] Running: bwa index reference/ref.fa 2>> snps.log
[23:55:14] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:55:14] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:55:15] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:55:15] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:55:15] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:55:18] Running: bwa mem  -Y -M -R '@RG\tID:HMS24046_S23\tSM:HMS24046_S23' -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 593288 sequences (160000360 bp)...
[M::process] read 593558 sequences (160000118 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 290696, 6, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (235, 410, 549)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1177)
[M::mem_pestat] mean and std.dev: (357.00, 166.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1491)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (247, 310, 389)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 673)
[M::mem_pestat] mean and std.dev: (320.58, 111.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 815)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 593288 reads in 50.085 CPU sec, 3.126 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 290813, 12, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (246, 308, 387)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 669)
[M::mem_pestat] mean and std.dev: (319.18, 111.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 810)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1188, 1335, 2147)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4065)
[M::mem_pestat] mean and std.dev: (1270.92, 681.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5024)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (511, 819, 1070)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2188)
[M::mem_pestat] mean and std.dev: (613.22, 331.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2747)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 595752 sequences (160000212 bp)...
[M::mem_process_seqs] Processed 593558 reads in 52.371 CPU sec, 3.250 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::process] read 35140 sequences (9664990 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 291753, 9, 5)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (288, 347, 395)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (74, 609)
[M::mem_pestat] mean and std.dev: (333.00, 84.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 716)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (244, 307, 385)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 667)
[M::mem_pestat] mean and std.dev: (317.29, 110.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 808)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 595752 reads in 51.659 CPU sec, 3.280 real sec
[samclip] Processed 1200000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 17177, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (256, 321, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 700)
[M::mem_pestat] mean and std.dev: (334.50, 115.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 848)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 35140 reads in 3.534 CPU sec, 0.221 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24046_S23\tSM:HMS24046_S23 -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz
[main] Real time: 12.892 sec; CPU: 159.874 sec
[samclip] Total SAM records 1824229, removed 428700, allowed 109134, passed 1395529
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:55:34] Running: samtools index snps.bam 2>> snps.log
[23:55:35] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:55:35] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:55:39] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 12
          no. right trimmed                     : 83
          no. left and right trimmed            : 5
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 100

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 100
       total no. variants observed              : 1026
       total no. reference observed             : 0

Time elapsed: 0.02s

[23:55:39] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:55:40] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:55:41] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:55:41] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:55:41] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:55:41] Running: bcftools consensus --sample HMS24046_S23 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:55:42] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:55:42] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:55:42] Running: bcftools consensus --sample HMS24046_S23 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:55:42] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:55:42] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:55:44] Marked 1572 heterozygous sites with 'n'
[23:55:44] Creating extra output files: BED GFF CSV TXT HTML
[23:55:44] Identified 1026 variants.
[23:55:44] Result folder: HMS24046_S23
[23:55:44] Result files:
[23:55:44] * HMS24046_S23/snps.aligned.fa
[23:55:44] * HMS24046_S23/snps.bam
[23:55:44] * HMS24046_S23/snps.bam.bai
[23:55:44] * HMS24046_S23/snps.bed
[23:55:44] * HMS24046_S23/snps.consensus.fa
[23:55:44] * HMS24046_S23/snps.consensus.subs.fa
[23:55:44] * HMS24046_S23/snps.csv
[23:55:44] * HMS24046_S23/snps.filt.vcf
[23:55:44] * HMS24046_S23/snps.gff
[23:55:44] * HMS24046_S23/snps.html
[23:55:44] * HMS24046_S23/snps.log
[23:55:44] * HMS24046_S23/snps.raw.vcf
[23:55:44] * HMS24046_S23/snps.subs.vcf
[23:55:44] * HMS24046_S23/snps.tab
[23:55:44] * HMS24046_S23/snps.txt
[23:55:44] * HMS24046_S23/snps.vcf
[23:55:44] * HMS24046_S23/snps.vcf.gz
[23:55:44] * HMS24046_S23/snps.vcf.gz.csi
[23:55:44] Walltime used: 32 seconds
[23:55:44] Found a bug? Post it at https://github.com/tseemann/snippy/issues
[23:55:44] Done.
[23:55:44] This is snippy 4.6.0
[23:55:44] Written by Torsten Seemann
[23:55:44] Obtained from https://github.com/tseemann/snippy
[23:55:44] Detected operating system: linux
[23:55:44] Enabling bundled linux tools.
[23:55:44] Found bwa - /usr/local/bin/bwa
[23:55:44] Found bcftools - /usr/local/bin/bcftools
[23:55:44] Found samtools - /usr/local/bin/samtools
[23:55:44] Found java - /usr/local/bin/java
[23:55:44] Found snpEff - /usr/local/bin/snpEff
[23:55:44] Found samclip - /usr/local/bin/samclip
[23:55:44] Found seqtk - /usr/local/bin/seqtk
[23:55:44] Found parallel - /usr/local/bin/parallel
[23:55:44] Found freebayes - /usr/local/bin/freebayes
[23:55:44] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:55:44] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:55:44] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:55:44] Found vcfuniq - /usr/local/bin/vcfuniq
[23:55:44] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:55:44] Found gzip - /usr/bin/gzip
[23:55:44] Found vt - /usr/local/bin/vt
[23:55:44] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:55:44] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:55:44] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:55:44] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:55:44] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:55:44] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:55:44] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:55:44] Using reference: /data/Analysis/refe.gbk
[23:55:44] Treating reference as 'genbank' format.
[23:55:44] Will use 16 CPU cores.
[23:55:44] Using read file: /data/Analysis/HMS24051_S27_R1.fastq.gz
[23:55:44] Using read file: /data/Analysis/HMS24051_S27_R2.fastq.gz
[23:55:44] Creating folder: HMS24051_S27
[23:55:44] Changing working directory: HMS24051_S27
[23:55:44] Creating reference folder: reference
[23:55:44] Extracting FASTA and GFF from reference.
[23:55:46] Wrote 1 sequences to ref.fa
[23:55:46] Wrote 4429 features to ref.gff
[23:55:46] Creating reference/snpeff.config
[23:55:46] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:55:46] Using BAM RG (Read Group) ID: HMS24051_S27
[23:55:46] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:55:46] Running: bwa index reference/ref.fa 2>> snps.log
[23:55:47] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:55:47] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:55:47] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:55:47] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:55:47] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:55:50] Running: bwa mem  -Y -M -R '@RG\tID:HMS24051_S27\tSM:HMS24051_S27' -t 16 reference/ref.fa /data/Analysis/HMS24051_S27_R1.fastq.gz /data/Analysis/HMS24051_S27_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 597786 sequences (160000212 bp)...
[M::process] read 598070 sequences (160000143 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 292017, 9, 12)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (239, 296, 374)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 644)
[M::mem_pestat] mean and std.dev: (310.59, 104.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 779)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (279, 441, 1226)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3120)
[M::mem_pestat] mean and std.dev: (552.18, 418.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4067)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 597786 reads in 54.900 CPU sec, 3.445 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::process] read 235474 sequences (63152831 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 291898, 12, 10)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (291, 340, 515)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 963)
[M::mem_pestat] mean and std.dev: (393.10, 200.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1197)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 295, 372)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (309.11, 103.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 774)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (2044, 2346, 5595)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12697)
[M::mem_pestat] mean and std.dev: (2868.33, 1647.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16248)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (242, 507, 555)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1181)
[M::mem_pestat] mean and std.dev: (389.56, 157.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1494)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 598070 reads in 56.623 CPU sec, 3.573 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 114867, 5, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (239, 297, 376)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 650)
[M::mem_pestat] mean and std.dev: (312.20, 105.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 787)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1100000 records...
[M::mem_process_seqs] Processed 235474 reads in 24.357 CPU sec, 1.523 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24051_S27\tSM:HMS24051_S27 -t 16 reference/ref.fa /data/Analysis/HMS24051_S27_R1.fastq.gz /data/Analysis/HMS24051_S27_R2.fastq.gz
[main] Real time: 10.830 sec; CPU: 137.845 sec
[samclip] Total SAM records 1437126, removed 312079, allowed 105886, passed 1125047
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:56:04] Running: samtools index snps.bam 2>> snps.log
[23:56:05] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:56:05] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:56:08] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 18
          no. right trimmed                     : 90
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 111

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 111
       total no. variants observed              : 924
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:56:08] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:56:09] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:56:11] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:56:11] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:56:11] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:56:11] Running: bcftools consensus --sample HMS24051_S27 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:56:11] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:56:11] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:56:11] Running: bcftools consensus --sample HMS24051_S27 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:56:11] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:55] Marked 8955 heterozygous sites with 'n'
[23:53:55] Creating extra output files: BED GFF CSV TXT HTML
[23:53:55] Identified 2484 variants.
[23:53:55] Result folder: HCU24002_S2
[23:53:55] Result files:
[23:53:55] * HCU24002_S2/snps.aligned.fa
[23:53:55] * HCU24002_S2/snps.bam
[23:53:55] * HCU24002_S2/snps.bam.bai
[23:53:55] * HCU24002_S2/snps.bed
[23:53:55] * HCU24002_S2/snps.consensus.fa
[23:53:55] * HCU24002_S2/snps.consensus.subs.fa
[23:53:55] * HCU24002_S2/snps.csv
[23:53:55] * HCU24002_S2/snps.filt.vcf
[23:53:55] * HCU24002_S2/snps.gff
[23:53:55] * HCU24002_S2/snps.html
[23:53:55] * HCU24002_S2/snps.log
[23:53:55] * HCU24002_S2/snps.raw.vcf
[23:53:55] * HCU24002_S2/snps.subs.vcf
[23:53:55] * HCU24002_S2/snps.tab
[23:53:55] * HCU24002_S2/snps.txt
[23:53:55] * HCU24002_S2/snps.vcf
[23:53:55] * HCU24002_S2/snps.vcf.gz
[23:53:55] * HCU24002_S2/snps.vcf.gz.csi
[23:53:55] Walltime used: 24 seconds
[23:53:55] Wishing you a life free of homopolymer errors.
[23:53:55] Done.
[23:53:55] This is snippy 4.6.0
[23:53:55] Written by Torsten Seemann
[23:53:55] Obtained from https://github.com/tseemann/snippy
[23:53:55] Detected operating system: linux
[23:53:55] Enabling bundled linux tools.
[23:53:55] Found bwa - /usr/local/bin/bwa
[23:53:55] Found bcftools - /usr/local/bin/bcftools
[23:53:55] Found samtools - /usr/local/bin/samtools
[23:53:55] Found java - /usr/local/bin/java
[23:53:55] Found snpEff - /usr/local/bin/snpEff
[23:53:55] Found samclip - /usr/local/bin/samclip
[23:53:55] Found seqtk - /usr/local/bin/seqtk
[23:53:55] Found parallel - /usr/local/bin/parallel
[23:53:55] Found freebayes - /usr/local/bin/freebayes
[23:53:55] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:55] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:55] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:55] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:55] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:55] Found gzip - /usr/bin/gzip
[23:53:55] Found vt - /usr/local/bin/vt
[23:53:55] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:55] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:55] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:55] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:55] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:55] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:55] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:55] Using reference: /data/Analysis/refe.gbk
[23:53:56] Treating reference as 'genbank' format.
[23:53:56] Will use 16 CPU cores.
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:53:56] Creating folder: HCU24010_S6
[23:53:56] Changing working directory: HCU24010_S6
[23:53:56] Creating reference folder: reference
[23:53:56] Extracting FASTA and GFF from reference.
[23:53:57] Wrote 1 sequences to ref.fa
[23:53:57] Wrote 4429 features to ref.gff
[23:53:57] Creating reference/snpeff.config
[23:53:57] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:57] Using BAM RG (Read Group) ID: HCU24010_S6
[23:53:57] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:57] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:58] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:58] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:58] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:02] Running: bwa mem  -Y -M -R '@RG\tID:HCU24010_S6\tSM:HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.716 CPU sec, 3.057 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.756 CPU sec, 3.219 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 49.486 CPU sec, 3.143 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 15.338 CPU sec, 0.965 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24010_S6\tSM:HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.889 sec; CPU: 167.280 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:18] Running: samtools index snps.bam 2>> snps.log
[23:54:19] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:19] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:23] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 9
          no. right trimmed                     : 88
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 101

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 101
       total no. variants observed              : 941
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:54:23] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:24] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:26] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:26] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:28] Marked 1145 heterozygous sites with 'n'
[23:54:28] Creating extra output files: BED GFF CSV TXT HTML
[23:54:28] Identified 941 variants.
[23:54:28] Result folder: HCU24010_S6
[23:54:28] Result files:
[23:54:28] * HCU24010_S6/snps.aligned.fa
[23:54:28] * HCU24010_S6/snps.bam
[23:54:28] * HCU24010_S6/snps.bam.bai
[23:54:28] * HCU24010_S6/snps.bed
[23:54:28] * HCU24010_S6/snps.consensus.fa
[23:54:28] * HCU24010_S6/snps.consensus.subs.fa
[23:54:28] * HCU24010_S6/snps.csv
[23:54:28] * HCU24010_S6/snps.filt.vcf
[23:54:28] * HCU24010_S6/snps.gff
[23:54:28] * HCU24010_S6/snps.html
[23:54:28] * HCU24010_S6/snps.log
[23:54:28] * HCU24010_S6/snps.raw.vcf
[23:54:28] * HCU24010_S6/snps.subs.vcf
[23:54:28] * HCU24010_S6/snps.tab
[23:54:28] * HCU24010_S6/snps.txt
[23:54:28] * HCU24010_S6/snps.vcf
[23:54:28] * HCU24010_S6/snps.vcf.gz
[23:54:28] * HCU24010_S6/snps.vcf.gz.csi
[23:54:28] Walltime used: 33 seconds
[23:54:28] Wishing you a life free of homopolymer errors.
[23:54:28] Done.
[23:54:29] This is snippy 4.6.0
[23:54:29] Written by Torsten Seemann
[23:54:29] Obtained from https://github.com/tseemann/snippy
[23:54:29] Detected operating system: linux
[23:54:29] Enabling bundled linux tools.
[23:54:29] Found bwa - /usr/local/bin/bwa
[23:54:29] Found bcftools - /usr/local/bin/bcftools
[23:54:29] Found samtools - /usr/local/bin/samtools
[23:54:29] Found java - /usr/local/bin/java
[23:54:29] Found snpEff - /usr/local/bin/snpEff
[23:54:29] Found samclip - /usr/local/bin/samclip
[23:54:29] Found seqtk - /usr/local/bin/seqtk
[23:54:29] Found parallel - /usr/local/bin/parallel
[23:54:29] Found freebayes - /usr/local/bin/freebayes
[23:54:29] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:29] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:29] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:29] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:29] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:29] Found gzip - /usr/bin/gzip
[23:54:29] Found vt - /usr/local/bin/vt
[23:54:29] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:29] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:29] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:29] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:29] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:29] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:29] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:29] Using reference: /data/Analysis/refe.gbk
[23:54:29] Treating reference as 'genbank' format.
[23:54:29] Will use 16 CPU cores.
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:54:29] Creating folder: HCU24011_S7
[23:54:29] Changing working directory: HCU24011_S7
[23:54:29] Creating reference folder: reference
[23:54:29] Extracting FASTA and GFF from reference.
[23:54:30] Wrote 1 sequences to ref.fa
[23:54:30] Wrote 4429 features to ref.gff
[23:54:30] Creating reference/snpeff.config
[23:54:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:30] Using BAM RG (Read Group) ID: HCU24011_S7
[23:54:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:32] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:35] Running: bwa mem  -Y -M -R '@RG\tID:HCU24011_S7\tSM:HCU24011_S7' -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 510314 sequences (133277700 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (52, 248478, 18, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (320, 504, 939)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2177)
[M::mem_pestat] mean and std.dev: (524.39, 308.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2796)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 281, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 610)
[M::mem_pestat] mean and std.dev: (292.95, 100.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 738)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 664, 1334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3814)
[M::mem_pestat] mean and std.dev: (839.61, 800.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5054)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (302, 521, 1337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3407)
[M::mem_pestat] mean and std.dev: (743.44, 552.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4442)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 510314 reads in 47.585 CPU sec, 3.060 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24011_S7\tSM:HCU24011_S7 -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz
[main] Real time: 5.537 sec; CPU: 49.200 sec
[samclip] Total SAM records 513584, removed 116348, allowed 35199, passed 397236
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:41] Running: samtools index snps.bam 2>> snps.log
[23:54:42] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:42] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:43] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 37
          no. right trimmed                     : 179
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 219

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 219
       total no. variants observed              : 2202
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:54:44] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:44] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:46] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:46] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:46] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:46] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:47] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:47] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:49] Marked 7775 heterozygous sites with 'n'
[23:54:49] Creating extra output files: BED GFF CSV TXT HTML
[23:54:49] Identified 2202 variants.
[23:54:49] Result folder: HCU24011_S7
[23:54:49] Result files:
[23:54:49] * HCU24011_S7/snps.aligned.fa
[23:54:49] * HCU24011_S7/snps.bam
[23:54:49] * HCU24011_S7/snps.bam.bai
[23:54:49] * HCU24011_S7/snps.bed
[23:54:49] * HCU24011_S7/snps.consensus.fa
[23:54:49] * HCU24011_S7/snps.consensus.subs.fa
[23:54:49] * HCU24011_S7/snps.csv
[23:54:49] * HCU24011_S7/snps.filt.vcf
[23:54:49] * HCU24011_S7/snps.gff
[23:54:49] * HCU24011_S7/snps.html
[23:54:49] * HCU24011_S7/snps.log
[23:54:49] * HCU24011_S7/snps.raw.vcf
[23:54:49] * HCU24011_S7/snps.subs.vcf
[23:54:49] * HCU24011_S7/snps.tab
[23:54:49] * HCU24011_S7/snps.txt
[23:54:49] * HCU24011_S7/snps.vcf
[23:54:49] * HCU24011_S7/snps.vcf.gz
[23:54:49] * HCU24011_S7/snps.vcf.gz.csi
[23:54:49] Walltime used: 20 seconds
[23:54:49] Wishing you a life free of homopolymer errors.
[23:54:49] Done.
[23:54:49] This is snippy 4.6.0
[23:54:49] Written by Torsten Seemann
[23:54:49] Obtained from https://github.com/tseemann/snippy
[23:54:49] Detected operating system: linux
[23:54:49] Enabling bundled linux tools.
[23:54:49] Found bwa - /usr/local/bin/bwa
[23:54:49] Found bcftools - /usr/local/bin/bcftools
[23:54:49] Found samtools - /usr/local/bin/samtools
[23:54:49] Found java - /usr/local/bin/java
[23:54:49] Found snpEff - /usr/local/bin/snpEff
[23:54:49] Found samclip - /usr/local/bin/samclip
[23:54:49] Found seqtk - /usr/local/bin/seqtk
[23:54:49] Found parallel - /usr/local/bin/parallel
[23:54:49] Found freebayes - /usr/local/bin/freebayes
[23:54:49] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:49] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:49] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:49] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:49] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:49] Found gzip - /usr/bin/gzip
[23:54:49] Found vt - /usr/local/bin/vt
[23:54:49] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:49] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:49] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:49] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:49] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:49] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:49] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:49] Using reference: /data/Analysis/refe.gbk
[23:54:49] Treating reference as 'genbank' format.
[23:54:49] Will use 16 CPU cores.
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R1.fastq.gz
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R2.fastq.gz
[23:54:49] Creating folder: HMS24017_S15
[23:54:49] Changing working directory: HMS24017_S15
[23:54:49] Creating reference folder: reference
[23:54:49] Extracting FASTA and GFF from reference.
[23:54:51] Wrote 1 sequences to ref.fa
[23:54:51] Wrote 4429 features to ref.gff
[23:54:51] Creating reference/snpeff.config
[23:54:51] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:51] Using BAM RG (Read Group) ID: HMS24017_S15
[23:54:51] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:51] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:52] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:52] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:52] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:55] Running: bwa mem  -Y -M -R '@RG\tID:HMS24017_S15\tSM:HMS24017_S15' -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 746630 sequences (160000202 bp)...
[M::process] read 218810 sequences (46953613 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 366940, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 259)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (215.34, 67.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 746630 reads in 39.279 CPU sec, 2.585 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 107505, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 260)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (215.68, 67.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 400000 records...
[M::mem_process_seqs] Processed 218810 reads in 12.831 CPU sec, 0.832 real sec
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24017_S15\tSM:HMS24017_S15 -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz
[main] Real time: 6.320 sec; CPU: 54.297 sec
[samclip] Total SAM records 967230, removed 76910, allowed 25086, passed 890320
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:55:04] Running: samtools index snps.bam 2>> snps.log
[23:55:04] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:55:04] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:55:06] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 10
          no. right trimmed                     : 74
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 87

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 87
       total no. variants observed              : 877
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:55:06] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:55:07] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:55:09] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:55:09] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:55:12] Marked 5332 heterozygous sites with 'n'
[23:55:12] Creating extra output files: BED GFF CSV TXT HTML
[23:55:12] Identified 877 variants.
[23:55:12] Result folder: HMS24017_S15
[23:55:12] Result files:
[23:55:12] * HMS24017_S15/snps.aligned.fa
[23:55:12] * HMS24017_S15/snps.bam
[23:55:12] * HMS24017_S15/snps.bam.bai
[23:55:12] * HMS24017_S15/snps.bed
[23:55:12] * HMS24017_S15/snps.consensus.fa
[23:55:12] * HMS24017_S15/snps.consensus.subs.fa
[23:55:12] * HMS24017_S15/snps.csv
[23:55:12] * HMS24017_S15/snps.filt.vcf
[23:55:12] * HMS24017_S15/snps.gff
[23:55:12] * HMS24017_S15/snps.html
[23:55:12] * HMS24017_S15/snps.log
[23:55:12] * HMS24017_S15/snps.raw.vcf
[23:55:12] * HMS24017_S15/snps.subs.vcf
[23:55:12] * HMS24017_S15/snps.tab
[23:55:12] * HMS24017_S15/snps.txt
[23:55:12] * HMS24017_S15/snps.vcf
[23:55:12] * HMS24017_S15/snps.vcf.gz
[23:55:12] * HMS24017_S15/snps.vcf.gz.csi
[23:55:12] Walltime used: 23 seconds
[23:55:12] Did you know? Snippy is a combination of SNP, Skippy, and snappy.
[23:55:12] Done.
[23:55:12] This is snippy 4.6.0
[23:55:12] Written by Torsten Seemann
[23:55:12] Obtained from https://github.com/tseemann/snippy
[23:55:12] Detected operating system: linux
[23:55:12] Enabling bundled linux tools.
[23:55:12] Found bwa - /usr/local/bin/bwa
[23:55:12] Found bcftools - /usr/local/bin/bcftools
[23:55:12] Found samtools - /usr/local/bin/samtools
[23:55:12] Found java - /usr/local/bin/java
[23:55:12] Found snpEff - /usr/local/bin/snpEff
[23:55:12] Found samclip - /usr/local/bin/samclip
[23:55:12] Found seqtk - /usr/local/bin/seqtk
[23:55:12] Found parallel - /usr/local/bin/parallel
[23:55:12] Found freebayes - /usr/local/bin/freebayes
[23:55:12] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:55:12] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:55:12] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:55:12] Found vcfuniq - /usr/local/bin/vcfuniq
[23:55:12] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:55:12] Found gzip - /usr/bin/gzip
[23:55:12] Found vt - /usr/local/bin/vt
[23:55:12] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:55:12] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:55:12] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:55:12] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:55:12] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:55:12] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:55:12] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:55:12] Using reference: /data/Analysis/refe.gbk
[23:55:12] Treating reference as 'genbank' format.
[23:55:12] Will use 16 CPU cores.
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R1.fastq.gz
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R2.fastq.gz
[23:55:12] Creating folder: HMS24046_S23
[23:55:12] Changing working directory: HMS24046_S23
[23:55:12] Creating reference folder: reference
[23:55:12] Extracting FASTA and GFF from reference.
[23:55:14] Wrote 1 sequences to ref.fa
[23:55:14] Wrote 4429 features to ref.gff
[23:55:14] Creating reference/snpeff.config
[23:55:14] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:55:14] Using BAM RG (Read Group) ID: HMS24046_S23
[23:55:14] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:55:14] Running: bwa index reference/ref.fa 2>> snps.log
[23:55:14] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:55:14] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:55:15] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:55:15] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:55:15] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:55:18] Running: bwa mem  -Y -M -R '@RG\tID:HMS24046_S23\tSM:HMS24046_S23' -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 593288 sequences (160000360 bp)...
[M::process] read 593558 sequences (160000118 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 290696, 6, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (235, 410, 549)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1177)
[M::mem_pestat] mean and std.dev: (357.00, 166.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1491)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (247, 310, 389)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 673)
[M::mem_pestat] mean and std.dev: (320.58, 111.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 815)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 593288 reads in 50.085 CPU sec, 3.126 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 290813, 12, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (246, 308, 387)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 669)
[M::mem_pestat] mean and std.dev: (319.18, 111.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 810)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1188, 1335, 2147)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4065)
[M::mem_pestat] mean and std.dev: (1270.92, 681.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5024)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (511, 819, 1070)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2188)
[M::mem_pestat] mean and std.dev: (613.22, 331.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2747)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 595752 sequences (160000212 bp)...
[M::mem_process_seqs] Processed 593558 reads in 52.371 CPU sec, 3.250 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::process] read 35140 sequences (9664990 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 291753, 9, 5)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (288, 347, 395)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (74, 609)
[M::mem_pestat] mean and std.dev: (333.00, 84.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 716)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (244, 307, 385)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 667)
[M::mem_pestat] mean and std.dev: (317.29, 110.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 808)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 595752 reads in 51.659 CPU sec, 3.280 real sec
[samclip] Processed 1200000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 17177, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (256, 321, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 700)
[M::mem_pestat] mean and std.dev: (334.50, 115.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 848)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 35140 reads in 3.534 CPU sec, 0.221 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24046_S23\tSM:HMS24046_S23 -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz
[main] Real time: 12.892 sec; CPU: 159.874 sec
[samclip] Total SAM records 1824229, removed 428700, allowed 109134, passed 1395529
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:55:34] Running: samtools index snps.bam 2>> snps.log
[23:55:35] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:55:35] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:55:39] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 12
          no. right trimmed                     : 83
          no. left and right trimmed            : 5
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 100

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 100
       total no. variants observed              : 1026
       total no. reference observed             : 0

Time elapsed: 0.02s

[23:55:39] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:55:40] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:55:41] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:55:41] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:55:41] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:55:41] Running: bcftools consensus --sample HMS24046_S23 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:55:42] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:55:42] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:55:42] Running: bcftools consensus --sample HMS24046_S23 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:55:42] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:55:42] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:55:44] Marked 1572 heterozygous sites with 'n'
[23:55:44] Creating extra output files: BED GFF CSV TXT HTML
[23:55:44] Identified 1026 variants.
[23:55:44] Result folder: HMS24046_S23
[23:55:44] Result files:
[23:55:44] * HMS24046_S23/snps.aligned.fa
[23:55:44] * HMS24046_S23/snps.bam
[23:55:44] * HMS24046_S23/snps.bam.bai
[23:55:44] * HMS24046_S23/snps.bed
[23:55:44] * HMS24046_S23/snps.consensus.fa
[23:55:44] * HMS24046_S23/snps.consensus.subs.fa
[23:55:44] * HMS24046_S23/snps.csv
[23:55:44] * HMS24046_S23/snps.filt.vcf
[23:55:44] * HMS24046_S23/snps.gff
[23:55:44] * HMS24046_S23/snps.html
[23:55:44] * HMS24046_S23/snps.log
[23:55:44] * HMS24046_S23/snps.raw.vcf
[23:55:44] * HMS24046_S23/snps.subs.vcf
[23:55:44] * HMS24046_S23/snps.tab
[23:55:44] * HMS24046_S23/snps.txt
[23:55:44] * HMS24046_S23/snps.vcf
[23:55:44] * HMS24046_S23/snps.vcf.gz
[23:55:44] * HMS24046_S23/snps.vcf.gz.csi
[23:55:44] Walltime used: 32 seconds
[23:55:44] Found a bug? Post it at https://github.com/tseemann/snippy/issues
[23:55:44] Done.
[23:55:44] This is snippy 4.6.0
[23:55:44] Written by Torsten Seemann
[23:55:44] Obtained from https://github.com/tseemann/snippy
[23:55:44] Detected operating system: linux
[23:55:44] Enabling bundled linux tools.
[23:55:44] Found bwa - /usr/local/bin/bwa
[23:55:44] Found bcftools - /usr/local/bin/bcftools
[23:55:44] Found samtools - /usr/local/bin/samtools
[23:55:44] Found java - /usr/local/bin/java
[23:55:44] Found snpEff - /usr/local/bin/snpEff
[23:55:44] Found samclip - /usr/local/bin/samclip
[23:55:44] Found seqtk - /usr/local/bin/seqtk
[23:55:44] Found parallel - /usr/local/bin/parallel
[23:55:44] Found freebayes - /usr/local/bin/freebayes
[23:55:44] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:55:44] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:55:44] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:55:44] Found vcfuniq - /usr/local/bin/vcfuniq
[23:55:44] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:55:44] Found gzip - /usr/bin/gzip
[23:55:44] Found vt - /usr/local/bin/vt
[23:55:44] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:55:44] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:55:44] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:55:44] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:55:44] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:55:44] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:55:44] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:55:44] Using reference: /data/Analysis/refe.gbk
[23:55:44] Treating reference as 'genbank' format.
[23:55:44] Will use 16 CPU cores.
[23:55:44] Using read file: /data/Analysis/HMS24051_S27_R1.fastq.gz
[23:55:44] Using read file: /data/Analysis/HMS24051_S27_R2.fastq.gz
[23:55:44] Creating folder: HMS24051_S27
[23:55:44] Changing working directory: HMS24051_S27
[23:55:44] Creating reference folder: reference
[23:55:44] Extracting FASTA and GFF from reference.
[23:55:46] Wrote 1 sequences to ref.fa
[23:55:46] Wrote 4429 features to ref.gff
[23:55:46] Creating reference/snpeff.config
[23:55:46] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:55:46] Using BAM RG (Read Group) ID: HMS24051_S27
[23:55:46] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:55:46] Running: bwa index reference/ref.fa 2>> snps.log
[23:55:47] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:55:47] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:55:47] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:55:47] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:55:47] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:55:50] Running: bwa mem  -Y -M -R '@RG\tID:HMS24051_S27\tSM:HMS24051_S27' -t 16 reference/ref.fa /data/Analysis/HMS24051_S27_R1.fastq.gz /data/Analysis/HMS24051_S27_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 597786 sequences (160000212 bp)...
[M::process] read 598070 sequences (160000143 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 292017, 9, 12)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (239, 296, 374)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 644)
[M::mem_pestat] mean and std.dev: (310.59, 104.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 779)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (279, 441, 1226)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3120)
[M::mem_pestat] mean and std.dev: (552.18, 418.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4067)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 597786 reads in 54.900 CPU sec, 3.445 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::process] read 235474 sequences (63152831 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 291898, 12, 10)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (291, 340, 515)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 963)
[M::mem_pestat] mean and std.dev: (393.10, 200.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1197)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 295, 372)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (309.11, 103.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 774)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (2044, 2346, 5595)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12697)
[M::mem_pestat] mean and std.dev: (2868.33, 1647.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16248)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (242, 507, 555)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1181)
[M::mem_pestat] mean and std.dev: (389.56, 157.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1494)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 598070 reads in 56.623 CPU sec, 3.573 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 114867, 5, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (239, 297, 376)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 650)
[M::mem_pestat] mean and std.dev: (312.20, 105.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 787)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1100000 records...
[M::mem_process_seqs] Processed 235474 reads in 24.357 CPU sec, 1.523 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24051_S27\tSM:HMS24051_S27 -t 16 reference/ref.fa /data/Analysis/HMS24051_S27_R1.fastq.gz /data/Analysis/HMS24051_S27_R2.fastq.gz
[main] Real time: 10.830 sec; CPU: 137.845 sec
[samclip] Total SAM records 1437126, removed 312079, allowed 105886, passed 1125047
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:56:04] Running: samtools index snps.bam 2>> snps.log
[23:56:05] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:56:05] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:56:08] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 18
          no. right trimmed                     : 90
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 111

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 111
       total no. variants observed              : 924
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:56:08] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:56:09] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:56:11] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:56:11] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:56:11] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:56:11] Running: bcftools consensus --sample HMS24051_S27 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:56:11] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:56:11] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:56:11] Running: bcftools consensus --sample HMS24051_S27 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:56:11] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:56:11] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:56:13] Marked 2929 heterozygous sites with 'n'
[23:56:13] Creating extra output files: BED GFF CSV TXT HTML
[23:56:13] Identified 924 variants.
[23:56:13] Result folder: HMS24051_S27
[23:56:13] Result files:
[23:56:13] * HMS24051_S27/snps.aligned.fa
[23:56:13] * HMS24051_S27/snps.bam
[23:56:13] * HMS24051_S27/snps.bam.bai
[23:56:13] * HMS24051_S27/snps.bed
[23:56:13] * HMS24051_S27/snps.consensus.fa
[23:56:13] * HMS24051_S27/snps.consensus.subs.fa
[23:56:13] * HMS24051_S27/snps.csv
[23:56:13] * HMS24051_S27/snps.filt.vcf
[23:56:13] * HMS24051_S27/snps.gff
[23:56:13] * HMS24051_S27/snps.html
[23:56:13] * HMS24051_S27/snps.log
[23:56:13] * HMS24051_S27/snps.raw.vcf
[23:56:13] * HMS24051_S27/snps.subs.vcf
[23:56:13] * HMS24051_S27/snps.tab
[23:56:13] * HMS24051_S27/snps.txt
[23:56:13] * HMS24051_S27/snps.vcf
[23:56:13] * HMS24051_S27/snps.vcf.gz
[23:56:13] * HMS24051_S27/snps.vcf.gz.csi
[23:56:13] Walltime used: 29 seconds
[23:56:13] Found a bug? Post it at https://github.com/tseemann/snippy/issues
[23:56:13] Done.
[23:56:14] This is snippy 4.6.0
[23:56:14] Written by Torsten Seemann
[23:56:14] Obtained from https://github.com/tseemann/snippy
[23:56:14] Detected operating system: linux
[23:56:14] Enabling bundled linux tools.
[23:56:14] Found bwa - /usr/local/bin/bwa
[23:56:14] Found bcftools - /usr/local/bin/bcftools
[23:56:14] Found samtools - /usr/local/bin/samtools
[23:56:14] Found java - /usr/local/bin/java
[23:56:14] Found snpEff - /usr/local/bin/snpEff
[23:56:14] Found samclip - /usr/local/bin/samclip
[23:56:14] Found seqtk - /usr/local/bin/seqtk
[23:56:14] Found parallel - /usr/local/bin/parallel
[23:56:14] Found freebayes - /usr/local/bin/freebayes
[23:56:14] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:56:14] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:56:14] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:56:14] Found vcfuniq - /usr/local/bin/vcfuniq
[23:56:14] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:56:14] Found gzip - /usr/bin/gzip
[23:56:14] Found vt - /usr/local/bin/vt
[23:56:14] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:56:14] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:56:14] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:56:14] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:56:14] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:56:14] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:56:14] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:56:14] Using reference: /data/Analysis/refe.gbk
[23:56:14] Treating reference as 'genbank' format.
[23:56:14] Will use 16 CPU cores.
[23:56:14] Using read file: /data/Analysis/HMS24052_S28_R1.fastq.gz
[23:56:14] Using read file: /data/Analysis/HMS24052_S28_R2.fastq.gz
[23:56:14] Creating folder: HMS24052_S28
[23:56:14] Changing working directory: HMS24052_S28
[23:56:14] Creating reference folder: reference
[23:56:14] Extracting FASTA and GFF from reference.
[23:56:15] Wrote 1 sequences to ref.fa
[23:56:15] Wrote 4429 features to ref.gff
[23:56:15] Creating reference/snpeff.config
[23:56:15] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:56:15] Using BAM RG (Read Group) ID: HMS24052_S28
[23:56:15] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:56:15] Running: bwa index reference/ref.fa 2>> snps.log
[23:56:16] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:56:16] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:56:16] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:56:16] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:56:17] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:55] Marked 8955 heterozygous sites with 'n'
[23:53:55] Creating extra output files: BED GFF CSV TXT HTML
[23:53:55] Identified 2484 variants.
[23:53:55] Result folder: HCU24002_S2
[23:53:55] Result files:
[23:53:55] * HCU24002_S2/snps.aligned.fa
[23:53:55] * HCU24002_S2/snps.bam
[23:53:55] * HCU24002_S2/snps.bam.bai
[23:53:55] * HCU24002_S2/snps.bed
[23:53:55] * HCU24002_S2/snps.consensus.fa
[23:53:55] * HCU24002_S2/snps.consensus.subs.fa
[23:53:55] * HCU24002_S2/snps.csv
[23:53:55] * HCU24002_S2/snps.filt.vcf
[23:53:55] * HCU24002_S2/snps.gff
[23:53:55] * HCU24002_S2/snps.html
[23:53:55] * HCU24002_S2/snps.log
[23:53:55] * HCU24002_S2/snps.raw.vcf
[23:53:55] * HCU24002_S2/snps.subs.vcf
[23:53:55] * HCU24002_S2/snps.tab
[23:53:55] * HCU24002_S2/snps.txt
[23:53:55] * HCU24002_S2/snps.vcf
[23:53:55] * HCU24002_S2/snps.vcf.gz
[23:53:55] * HCU24002_S2/snps.vcf.gz.csi
[23:53:55] Walltime used: 24 seconds
[23:53:55] Wishing you a life free of homopolymer errors.
[23:53:55] Done.
[23:53:55] This is snippy 4.6.0
[23:53:55] Written by Torsten Seemann
[23:53:55] Obtained from https://github.com/tseemann/snippy
[23:53:55] Detected operating system: linux
[23:53:55] Enabling bundled linux tools.
[23:53:55] Found bwa - /usr/local/bin/bwa
[23:53:55] Found bcftools - /usr/local/bin/bcftools
[23:53:55] Found samtools - /usr/local/bin/samtools
[23:53:55] Found java - /usr/local/bin/java
[23:53:55] Found snpEff - /usr/local/bin/snpEff
[23:53:55] Found samclip - /usr/local/bin/samclip
[23:53:55] Found seqtk - /usr/local/bin/seqtk
[23:53:55] Found parallel - /usr/local/bin/parallel
[23:53:55] Found freebayes - /usr/local/bin/freebayes
[23:53:55] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:55] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:55] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:55] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:55] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:55] Found gzip - /usr/bin/gzip
[23:53:55] Found vt - /usr/local/bin/vt
[23:53:55] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:55] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:55] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:55] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:55] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:55] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:55] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:55] Using reference: /data/Analysis/refe.gbk
[23:53:56] Treating reference as 'genbank' format.
[23:53:56] Will use 16 CPU cores.
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:53:56] Creating folder: HCU24010_S6
[23:53:56] Changing working directory: HCU24010_S6
[23:53:56] Creating reference folder: reference
[23:53:56] Extracting FASTA and GFF from reference.
[23:53:57] Wrote 1 sequences to ref.fa
[23:53:57] Wrote 4429 features to ref.gff
[23:53:57] Creating reference/snpeff.config
[23:53:57] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:57] Using BAM RG (Read Group) ID: HCU24010_S6
[23:53:57] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:57] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:58] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:58] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:58] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:02] Running: bwa mem  -Y -M -R '@RG\tID:HCU24010_S6\tSM:HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.716 CPU sec, 3.057 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.756 CPU sec, 3.219 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 49.486 CPU sec, 3.143 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 15.338 CPU sec, 0.965 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24010_S6\tSM:HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.889 sec; CPU: 167.280 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:18] Running: samtools index snps.bam 2>> snps.log
[23:54:19] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:19] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:23] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 9
          no. right trimmed                     : 88
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 101

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 101
       total no. variants observed              : 941
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:54:23] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:24] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:26] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:26] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:28] Marked 1145 heterozygous sites with 'n'
[23:54:28] Creating extra output files: BED GFF CSV TXT HTML
[23:54:28] Identified 941 variants.
[23:54:28] Result folder: HCU24010_S6
[23:54:28] Result files:
[23:54:28] * HCU24010_S6/snps.aligned.fa
[23:54:28] * HCU24010_S6/snps.bam
[23:54:28] * HCU24010_S6/snps.bam.bai
[23:54:28] * HCU24010_S6/snps.bed
[23:54:28] * HCU24010_S6/snps.consensus.fa
[23:54:28] * HCU24010_S6/snps.consensus.subs.fa
[23:54:28] * HCU24010_S6/snps.csv
[23:54:28] * HCU24010_S6/snps.filt.vcf
[23:54:28] * HCU24010_S6/snps.gff
[23:54:28] * HCU24010_S6/snps.html
[23:54:28] * HCU24010_S6/snps.log
[23:54:28] * HCU24010_S6/snps.raw.vcf
[23:54:28] * HCU24010_S6/snps.subs.vcf
[23:54:28] * HCU24010_S6/snps.tab
[23:54:28] * HCU24010_S6/snps.txt
[23:54:28] * HCU24010_S6/snps.vcf
[23:54:28] * HCU24010_S6/snps.vcf.gz
[23:54:28] * HCU24010_S6/snps.vcf.gz.csi
[23:54:28] Walltime used: 33 seconds
[23:54:28] Wishing you a life free of homopolymer errors.
[23:54:28] Done.
[23:54:29] This is snippy 4.6.0
[23:54:29] Written by Torsten Seemann
[23:54:29] Obtained from https://github.com/tseemann/snippy
[23:54:29] Detected operating system: linux
[23:54:29] Enabling bundled linux tools.
[23:54:29] Found bwa - /usr/local/bin/bwa
[23:54:29] Found bcftools - /usr/local/bin/bcftools
[23:54:29] Found samtools - /usr/local/bin/samtools
[23:54:29] Found java - /usr/local/bin/java
[23:54:29] Found snpEff - /usr/local/bin/snpEff
[23:54:29] Found samclip - /usr/local/bin/samclip
[23:54:29] Found seqtk - /usr/local/bin/seqtk
[23:54:29] Found parallel - /usr/local/bin/parallel
[23:54:29] Found freebayes - /usr/local/bin/freebayes
[23:54:29] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:29] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:29] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:29] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:29] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:29] Found gzip - /usr/bin/gzip
[23:54:29] Found vt - /usr/local/bin/vt
[23:54:29] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:29] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:29] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:29] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:29] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:29] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:29] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:29] Using reference: /data/Analysis/refe.gbk
[23:54:29] Treating reference as 'genbank' format.
[23:54:29] Will use 16 CPU cores.
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:54:29] Creating folder: HCU24011_S7
[23:54:29] Changing working directory: HCU24011_S7
[23:54:29] Creating reference folder: reference
[23:54:29] Extracting FASTA and GFF from reference.
[23:54:30] Wrote 1 sequences to ref.fa
[23:54:30] Wrote 4429 features to ref.gff
[23:54:30] Creating reference/snpeff.config
[23:54:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:30] Using BAM RG (Read Group) ID: HCU24011_S7
[23:54:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:32] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:35] Running: bwa mem  -Y -M -R '@RG\tID:HCU24011_S7\tSM:HCU24011_S7' -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 510314 sequences (133277700 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (52, 248478, 18, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (320, 504, 939)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2177)
[M::mem_pestat] mean and std.dev: (524.39, 308.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2796)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 281, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 610)
[M::mem_pestat] mean and std.dev: (292.95, 100.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 738)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 664, 1334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3814)
[M::mem_pestat] mean and std.dev: (839.61, 800.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5054)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (302, 521, 1337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3407)
[M::mem_pestat] mean and std.dev: (743.44, 552.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4442)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 510314 reads in 47.585 CPU sec, 3.060 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24011_S7\tSM:HCU24011_S7 -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz
[main] Real time: 5.537 sec; CPU: 49.200 sec
[samclip] Total SAM records 513584, removed 116348, allowed 35199, passed 397236
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:41] Running: samtools index snps.bam 2>> snps.log
[23:54:42] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:42] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:43] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 37
          no. right trimmed                     : 179
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 219

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 219
       total no. variants observed              : 2202
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:54:44] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:44] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:46] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:46] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:46] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:46] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:47] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:47] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:49] Marked 7775 heterozygous sites with 'n'
[23:54:49] Creating extra output files: BED GFF CSV TXT HTML
[23:54:49] Identified 2202 variants.
[23:54:49] Result folder: HCU24011_S7
[23:54:49] Result files:
[23:54:49] * HCU24011_S7/snps.aligned.fa
[23:54:49] * HCU24011_S7/snps.bam
[23:54:49] * HCU24011_S7/snps.bam.bai
[23:54:49] * HCU24011_S7/snps.bed
[23:54:49] * HCU24011_S7/snps.consensus.fa
[23:54:49] * HCU24011_S7/snps.consensus.subs.fa
[23:54:49] * HCU24011_S7/snps.csv
[23:54:49] * HCU24011_S7/snps.filt.vcf
[23:54:49] * HCU24011_S7/snps.gff
[23:54:49] * HCU24011_S7/snps.html
[23:54:49] * HCU24011_S7/snps.log
[23:54:49] * HCU24011_S7/snps.raw.vcf
[23:54:49] * HCU24011_S7/snps.subs.vcf
[23:54:49] * HCU24011_S7/snps.tab
[23:54:49] * HCU24011_S7/snps.txt
[23:54:49] * HCU24011_S7/snps.vcf
[23:54:49] * HCU24011_S7/snps.vcf.gz
[23:54:49] * HCU24011_S7/snps.vcf.gz.csi
[23:54:49] Walltime used: 20 seconds
[23:54:49] Wishing you a life free of homopolymer errors.
[23:54:49] Done.
[23:54:49] This is snippy 4.6.0
[23:54:49] Written by Torsten Seemann
[23:54:49] Obtained from https://github.com/tseemann/snippy
[23:54:49] Detected operating system: linux
[23:54:49] Enabling bundled linux tools.
[23:54:49] Found bwa - /usr/local/bin/bwa
[23:54:49] Found bcftools - /usr/local/bin/bcftools
[23:54:49] Found samtools - /usr/local/bin/samtools
[23:54:49] Found java - /usr/local/bin/java
[23:54:49] Found snpEff - /usr/local/bin/snpEff
[23:54:49] Found samclip - /usr/local/bin/samclip
[23:54:49] Found seqtk - /usr/local/bin/seqtk
[23:54:49] Found parallel - /usr/local/bin/parallel
[23:54:49] Found freebayes - /usr/local/bin/freebayes
[23:54:49] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:49] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:49] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:49] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:49] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:49] Found gzip - /usr/bin/gzip
[23:54:49] Found vt - /usr/local/bin/vt
[23:54:49] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:49] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:49] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:49] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:49] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:49] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:49] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:49] Using reference: /data/Analysis/refe.gbk
[23:54:49] Treating reference as 'genbank' format.
[23:54:49] Will use 16 CPU cores.
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R1.fastq.gz
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R2.fastq.gz
[23:54:49] Creating folder: HMS24017_S15
[23:54:49] Changing working directory: HMS24017_S15
[23:54:49] Creating reference folder: reference
[23:54:49] Extracting FASTA and GFF from reference.
[23:54:51] Wrote 1 sequences to ref.fa
[23:54:51] Wrote 4429 features to ref.gff
[23:54:51] Creating reference/snpeff.config
[23:54:51] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:51] Using BAM RG (Read Group) ID: HMS24017_S15
[23:54:51] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:51] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:52] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:52] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:52] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:55] Running: bwa mem  -Y -M -R '@RG\tID:HMS24017_S15\tSM:HMS24017_S15' -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 746630 sequences (160000202 bp)...
[M::process] read 218810 sequences (46953613 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 366940, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 259)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (215.34, 67.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 746630 reads in 39.279 CPU sec, 2.585 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 107505, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 260)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (215.68, 67.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 400000 records...
[M::mem_process_seqs] Processed 218810 reads in 12.831 CPU sec, 0.832 real sec
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24017_S15\tSM:HMS24017_S15 -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz
[main] Real time: 6.320 sec; CPU: 54.297 sec
[samclip] Total SAM records 967230, removed 76910, allowed 25086, passed 890320
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:55:04] Running: samtools index snps.bam 2>> snps.log
[23:55:04] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:55:04] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:55:06] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 10
          no. right trimmed                     : 74
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 87

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 87
       total no. variants observed              : 877
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:55:06] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:55:07] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:55:09] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:55:09] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:55:12] Marked 5332 heterozygous sites with 'n'
[23:55:12] Creating extra output files: BED GFF CSV TXT HTML
[23:55:12] Identified 877 variants.
[23:55:12] Result folder: HMS24017_S15
[23:55:12] Result files:
[23:55:12] * HMS24017_S15/snps.aligned.fa
[23:55:12] * HMS24017_S15/snps.bam
[23:55:12] * HMS24017_S15/snps.bam.bai
[23:55:12] * HMS24017_S15/snps.bed
[23:55:12] * HMS24017_S15/snps.consensus.fa
[23:55:12] * HMS24017_S15/snps.consensus.subs.fa
[23:55:12] * HMS24017_S15/snps.csv
[23:55:12] * HMS24017_S15/snps.filt.vcf
[23:55:12] * HMS24017_S15/snps.gff
[23:55:12] * HMS24017_S15/snps.html
[23:55:12] * HMS24017_S15/snps.log
[23:55:12] * HMS24017_S15/snps.raw.vcf
[23:55:12] * HMS24017_S15/snps.subs.vcf
[23:55:12] * HMS24017_S15/snps.tab
[23:55:12] * HMS24017_S15/snps.txt
[23:55:12] * HMS24017_S15/snps.vcf
[23:55:12] * HMS24017_S15/snps.vcf.gz
[23:55:12] * HMS24017_S15/snps.vcf.gz.csi
[23:55:12] Walltime used: 23 seconds
[23:55:12] Did you know? Snippy is a combination of SNP, Skippy, and snappy.
[23:55:12] Done.
[23:55:12] This is snippy 4.6.0
[23:55:12] Written by Torsten Seemann
[23:55:12] Obtained from https://github.com/tseemann/snippy
[23:55:12] Detected operating system: linux
[23:55:12] Enabling bundled linux tools.
[23:55:12] Found bwa - /usr/local/bin/bwa
[23:55:12] Found bcftools - /usr/local/bin/bcftools
[23:55:12] Found samtools - /usr/local/bin/samtools
[23:55:12] Found java - /usr/local/bin/java
[23:55:12] Found snpEff - /usr/local/bin/snpEff
[23:55:12] Found samclip - /usr/local/bin/samclip
[23:55:12] Found seqtk - /usr/local/bin/seqtk
[23:55:12] Found parallel - /usr/local/bin/parallel
[23:55:12] Found freebayes - /usr/local/bin/freebayes
[23:55:12] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:55:12] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:55:12] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:55:12] Found vcfuniq - /usr/local/bin/vcfuniq
[23:55:12] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:55:12] Found gzip - /usr/bin/gzip
[23:55:12] Found vt - /usr/local/bin/vt
[23:55:12] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:55:12] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:55:12] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:55:12] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:55:12] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:55:12] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:55:12] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:55:12] Using reference: /data/Analysis/refe.gbk
[23:55:12] Treating reference as 'genbank' format.
[23:55:12] Will use 16 CPU cores.
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R1.fastq.gz
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R2.fastq.gz
[23:55:12] Creating folder: HMS24046_S23
[23:55:12] Changing working directory: HMS24046_S23
[23:55:12] Creating reference folder: reference
[23:55:12] Extracting FASTA and GFF from reference.
[23:55:14] Wrote 1 sequences to ref.fa
[23:55:14] Wrote 4429 features to ref.gff
[23:55:14] Creating reference/snpeff.config
[23:55:14] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:55:14] Using BAM RG (Read Group) ID: HMS24046_S23
[23:55:14] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:55:14] Running: bwa index reference/ref.fa 2>> snps.log
[23:55:14] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:55:14] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:55:15] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:55:15] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:55:15] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:55:18] Running: bwa mem  -Y -M -R '@RG\tID:HMS24046_S23\tSM:HMS24046_S23' -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 593288 sequences (160000360 bp)...
[M::process] read 593558 sequences (160000118 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 290696, 6, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (235, 410, 549)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1177)
[M::mem_pestat] mean and std.dev: (357.00, 166.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1491)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (247, 310, 389)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 673)
[M::mem_pestat] mean and std.dev: (320.58, 111.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 815)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 593288 reads in 50.085 CPU sec, 3.126 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 290813, 12, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (246, 308, 387)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 669)
[M::mem_pestat] mean and std.dev: (319.18, 111.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 810)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1188, 1335, 2147)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4065)
[M::mem_pestat] mean and std.dev: (1270.92, 681.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5024)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (511, 819, 1070)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2188)
[M::mem_pestat] mean and std.dev: (613.22, 331.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2747)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 595752 sequences (160000212 bp)...
[M::mem_process_seqs] Processed 593558 reads in 52.371 CPU sec, 3.250 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::process] read 35140 sequences (9664990 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 291753, 9, 5)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (288, 347, 395)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (74, 609)
[M::mem_pestat] mean and std.dev: (333.00, 84.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 716)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (244, 307, 385)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 667)
[M::mem_pestat] mean and std.dev: (317.29, 110.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 808)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 595752 reads in 51.659 CPU sec, 3.280 real sec
[samclip] Processed 1200000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 17177, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (256, 321, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 700)
[M::mem_pestat] mean and std.dev: (334.50, 115.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 848)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 35140 reads in 3.534 CPU sec, 0.221 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24046_S23\tSM:HMS24046_S23 -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz
[main] Real time: 12.892 sec; CPU: 159.874 sec
[samclip] Total SAM records 1824229, removed 428700, allowed 109134, passed 1395529
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:55:34] Running: samtools index snps.bam 2>> snps.log
[23:55:35] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:55:35] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:55:39] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 12
          no. right trimmed                     : 83
          no. left and right trimmed            : 5
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 100

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 100
       total no. variants observed              : 1026
       total no. reference observed             : 0

Time elapsed: 0.02s

[23:55:39] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:55:40] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:55:41] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:55:41] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:55:41] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:55:41] Running: bcftools consensus --sample HMS24046_S23 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:55:42] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:55:42] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:55:42] Running: bcftools consensus --sample HMS24046_S23 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:55:42] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:55:42] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:55:44] Marked 1572 heterozygous sites with 'n'
[23:55:44] Creating extra output files: BED GFF CSV TXT HTML
[23:55:44] Identified 1026 variants.
[23:55:44] Result folder: HMS24046_S23
[23:55:44] Result files:
[23:55:44] * HMS24046_S23/snps.aligned.fa
[23:55:44] * HMS24046_S23/snps.bam
[23:55:44] * HMS24046_S23/snps.bam.bai
[23:55:44] * HMS24046_S23/snps.bed
[23:55:44] * HMS24046_S23/snps.consensus.fa
[23:55:44] * HMS24046_S23/snps.consensus.subs.fa
[23:55:44] * HMS24046_S23/snps.csv
[23:55:44] * HMS24046_S23/snps.filt.vcf
[23:55:44] * HMS24046_S23/snps.gff
[23:55:44] * HMS24046_S23/snps.html
[23:55:44] * HMS24046_S23/snps.log
[23:55:44] * HMS24046_S23/snps.raw.vcf
[23:55:44] * HMS24046_S23/snps.subs.vcf
[23:55:44] * HMS24046_S23/snps.tab
[23:55:44] * HMS24046_S23/snps.txt
[23:55:44] * HMS24046_S23/snps.vcf
[23:55:44] * HMS24046_S23/snps.vcf.gz
[23:55:44] * HMS24046_S23/snps.vcf.gz.csi
[23:55:44] Walltime used: 32 seconds
[23:55:44] Found a bug? Post it at https://github.com/tseemann/snippy/issues
[23:55:44] Done.
[23:55:44] This is snippy 4.6.0
[23:55:44] Written by Torsten Seemann
[23:55:44] Obtained from https://github.com/tseemann/snippy
[23:55:44] Detected operating system: linux
[23:55:44] Enabling bundled linux tools.
[23:55:44] Found bwa - /usr/local/bin/bwa
[23:55:44] Found bcftools - /usr/local/bin/bcftools
[23:55:44] Found samtools - /usr/local/bin/samtools
[23:55:44] Found java - /usr/local/bin/java
[23:55:44] Found snpEff - /usr/local/bin/snpEff
[23:55:44] Found samclip - /usr/local/bin/samclip
[23:55:44] Found seqtk - /usr/local/bin/seqtk
[23:55:44] Found parallel - /usr/local/bin/parallel
[23:55:44] Found freebayes - /usr/local/bin/freebayes
[23:55:44] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:55:44] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:55:44] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:55:44] Found vcfuniq - /usr/local/bin/vcfuniq
[23:55:44] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:55:44] Found gzip - /usr/bin/gzip
[23:55:44] Found vt - /usr/local/bin/vt
[23:55:44] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:55:44] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:55:44] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:55:44] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:55:44] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:55:44] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:55:44] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:55:44] Using reference: /data/Analysis/refe.gbk
[23:55:44] Treating reference as 'genbank' format.
[23:55:44] Will use 16 CPU cores.
[23:55:44] Using read file: /data/Analysis/HMS24051_S27_R1.fastq.gz
[23:55:44] Using read file: /data/Analysis/HMS24051_S27_R2.fastq.gz
[23:55:44] Creating folder: HMS24051_S27
[23:55:44] Changing working directory: HMS24051_S27
[23:55:44] Creating reference folder: reference
[23:55:44] Extracting FASTA and GFF from reference.
[23:55:46] Wrote 1 sequences to ref.fa
[23:55:46] Wrote 4429 features to ref.gff
[23:55:46] Creating reference/snpeff.config
[23:55:46] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:55:46] Using BAM RG (Read Group) ID: HMS24051_S27
[23:55:46] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:55:46] Running: bwa index reference/ref.fa 2>> snps.log
[23:55:47] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:55:47] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:55:47] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:55:47] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:55:47] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:55:50] Running: bwa mem  -Y -M -R '@RG\tID:HMS24051_S27\tSM:HMS24051_S27' -t 16 reference/ref.fa /data/Analysis/HMS24051_S27_R1.fastq.gz /data/Analysis/HMS24051_S27_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 597786 sequences (160000212 bp)...
[M::process] read 598070 sequences (160000143 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 292017, 9, 12)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (239, 296, 374)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 644)
[M::mem_pestat] mean and std.dev: (310.59, 104.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 779)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (279, 441, 1226)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3120)
[M::mem_pestat] mean and std.dev: (552.18, 418.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4067)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 597786 reads in 54.900 CPU sec, 3.445 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::process] read 235474 sequences (63152831 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 291898, 12, 10)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (291, 340, 515)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 963)
[M::mem_pestat] mean and std.dev: (393.10, 200.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1197)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 295, 372)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (309.11, 103.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 774)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (2044, 2346, 5595)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12697)
[M::mem_pestat] mean and std.dev: (2868.33, 1647.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16248)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (242, 507, 555)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1181)
[M::mem_pestat] mean and std.dev: (389.56, 157.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1494)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 598070 reads in 56.623 CPU sec, 3.573 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 114867, 5, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (239, 297, 376)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 650)
[M::mem_pestat] mean and std.dev: (312.20, 105.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 787)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1100000 records...
[M::mem_process_seqs] Processed 235474 reads in 24.357 CPU sec, 1.523 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24051_S27\tSM:HMS24051_S27 -t 16 reference/ref.fa /data/Analysis/HMS24051_S27_R1.fastq.gz /data/Analysis/HMS24051_S27_R2.fastq.gz
[main] Real time: 10.830 sec; CPU: 137.845 sec
[samclip] Total SAM records 1437126, removed 312079, allowed 105886, passed 1125047
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:56:04] Running: samtools index snps.bam 2>> snps.log
[23:56:05] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:56:05] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:56:08] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 18
          no. right trimmed                     : 90
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 111

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 111
       total no. variants observed              : 924
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:56:08] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:56:09] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:56:11] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:56:11] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:56:11] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:56:11] Running: bcftools consensus --sample HMS24051_S27 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:56:11] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:56:11] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:56:11] Running: bcftools consensus --sample HMS24051_S27 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:56:11] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:56:11] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:56:13] Marked 2929 heterozygous sites with 'n'
[23:56:13] Creating extra output files: BED GFF CSV TXT HTML
[23:56:13] Identified 924 variants.
[23:56:13] Result folder: HMS24051_S27
[23:56:13] Result files:
[23:56:13] * HMS24051_S27/snps.aligned.fa
[23:56:13] * HMS24051_S27/snps.bam
[23:56:13] * HMS24051_S27/snps.bam.bai
[23:56:13] * HMS24051_S27/snps.bed
[23:56:13] * HMS24051_S27/snps.consensus.fa
[23:56:13] * HMS24051_S27/snps.consensus.subs.fa
[23:56:13] * HMS24051_S27/snps.csv
[23:56:13] * HMS24051_S27/snps.filt.vcf
[23:56:13] * HMS24051_S27/snps.gff
[23:56:13] * HMS24051_S27/snps.html
[23:56:13] * HMS24051_S27/snps.log
[23:56:13] * HMS24051_S27/snps.raw.vcf
[23:56:13] * HMS24051_S27/snps.subs.vcf
[23:56:13] * HMS24051_S27/snps.tab
[23:56:13] * HMS24051_S27/snps.txt
[23:56:13] * HMS24051_S27/snps.vcf
[23:56:13] * HMS24051_S27/snps.vcf.gz
[23:56:13] * HMS24051_S27/snps.vcf.gz.csi
[23:56:13] Walltime used: 29 seconds
[23:56:13] Found a bug? Post it at https://github.com/tseemann/snippy/issues
[23:56:13] Done.
[23:56:14] This is snippy 4.6.0
[23:56:14] Written by Torsten Seemann
[23:56:14] Obtained from https://github.com/tseemann/snippy
[23:56:14] Detected operating system: linux
[23:56:14] Enabling bundled linux tools.
[23:56:14] Found bwa - /usr/local/bin/bwa
[23:56:14] Found bcftools - /usr/local/bin/bcftools
[23:56:14] Found samtools - /usr/local/bin/samtools
[23:56:14] Found java - /usr/local/bin/java
[23:56:14] Found snpEff - /usr/local/bin/snpEff
[23:56:14] Found samclip - /usr/local/bin/samclip
[23:56:14] Found seqtk - /usr/local/bin/seqtk
[23:56:14] Found parallel - /usr/local/bin/parallel
[23:56:14] Found freebayes - /usr/local/bin/freebayes
[23:56:14] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:56:14] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:56:14] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:56:14] Found vcfuniq - /usr/local/bin/vcfuniq
[23:56:14] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:56:14] Found gzip - /usr/bin/gzip
[23:56:14] Found vt - /usr/local/bin/vt
[23:56:14] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:56:14] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:56:14] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:56:14] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:56:14] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:56:14] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:56:14] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:56:14] Using reference: /data/Analysis/refe.gbk
[23:56:14] Treating reference as 'genbank' format.
[23:56:14] Will use 16 CPU cores.
[23:56:14] Using read file: /data/Analysis/HMS24052_S28_R1.fastq.gz
[23:56:14] Using read file: /data/Analysis/HMS24052_S28_R2.fastq.gz
[23:56:14] Creating folder: HMS24052_S28
[23:56:14] Changing working directory: HMS24052_S28
[23:56:14] Creating reference folder: reference
[23:56:14] Extracting FASTA and GFF from reference.
[23:56:15] Wrote 1 sequences to ref.fa
[23:56:15] Wrote 4429 features to ref.gff
[23:56:15] Creating reference/snpeff.config
[23:56:15] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:56:15] Using BAM RG (Read Group) ID: HMS24052_S28
[23:56:15] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:56:15] Running: bwa index reference/ref.fa 2>> snps.log
[23:56:16] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:56:16] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:56:16] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:56:16] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:56:17] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:56:20] Running: bwa mem  -Y -M -R '@RG\tID:HMS24052_S28\tSM:HMS24052_S28' -t 16 reference/ref.fa /data/Analysis/HMS24052_S28_R1.fastq.gz /data/Analysis/HMS24052_S28_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 613970 sequences (160000327 bp)...
[M::process] read 615382 sequences (160000193 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 299720, 22, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (227, 286, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 626)
[M::mem_pestat] mean and std.dev: (297.04, 104.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 759)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1356, 2212, 2289)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4155)
[M::mem_pestat] mean and std.dev: (1770.57, 796.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5088)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (410, 1374, 1516)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3728)
[M::mem_pestat] mean and std.dev: (1131.18, 884.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4834)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:55] Marked 8955 heterozygous sites with 'n'
[23:53:55] Creating extra output files: BED GFF CSV TXT HTML
[23:53:55] Identified 2484 variants.
[23:53:55] Result folder: HCU24002_S2
[23:53:55] Result files:
[23:53:55] * HCU24002_S2/snps.aligned.fa
[23:53:55] * HCU24002_S2/snps.bam
[23:53:55] * HCU24002_S2/snps.bam.bai
[23:53:55] * HCU24002_S2/snps.bed
[23:53:55] * HCU24002_S2/snps.consensus.fa
[23:53:55] * HCU24002_S2/snps.consensus.subs.fa
[23:53:55] * HCU24002_S2/snps.csv
[23:53:55] * HCU24002_S2/snps.filt.vcf
[23:53:55] * HCU24002_S2/snps.gff
[23:53:55] * HCU24002_S2/snps.html
[23:53:55] * HCU24002_S2/snps.log
[23:53:55] * HCU24002_S2/snps.raw.vcf
[23:53:55] * HCU24002_S2/snps.subs.vcf
[23:53:55] * HCU24002_S2/snps.tab
[23:53:55] * HCU24002_S2/snps.txt
[23:53:55] * HCU24002_S2/snps.vcf
[23:53:55] * HCU24002_S2/snps.vcf.gz
[23:53:55] * HCU24002_S2/snps.vcf.gz.csi
[23:53:55] Walltime used: 24 seconds
[23:53:55] Wishing you a life free of homopolymer errors.
[23:53:55] Done.
[23:53:55] This is snippy 4.6.0
[23:53:55] Written by Torsten Seemann
[23:53:55] Obtained from https://github.com/tseemann/snippy
[23:53:55] Detected operating system: linux
[23:53:55] Enabling bundled linux tools.
[23:53:55] Found bwa - /usr/local/bin/bwa
[23:53:55] Found bcftools - /usr/local/bin/bcftools
[23:53:55] Found samtools - /usr/local/bin/samtools
[23:53:55] Found java - /usr/local/bin/java
[23:53:55] Found snpEff - /usr/local/bin/snpEff
[23:53:55] Found samclip - /usr/local/bin/samclip
[23:53:55] Found seqtk - /usr/local/bin/seqtk
[23:53:55] Found parallel - /usr/local/bin/parallel
[23:53:55] Found freebayes - /usr/local/bin/freebayes
[23:53:55] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:55] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:55] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:55] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:55] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:55] Found gzip - /usr/bin/gzip
[23:53:55] Found vt - /usr/local/bin/vt
[23:53:55] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:55] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:55] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:55] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:55] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:55] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:55] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:55] Using reference: /data/Analysis/refe.gbk
[23:53:56] Treating reference as 'genbank' format.
[23:53:56] Will use 16 CPU cores.
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:53:56] Creating folder: HCU24010_S6
[23:53:56] Changing working directory: HCU24010_S6
[23:53:56] Creating reference folder: reference
[23:53:56] Extracting FASTA and GFF from reference.
[23:53:57] Wrote 1 sequences to ref.fa
[23:53:57] Wrote 4429 features to ref.gff
[23:53:57] Creating reference/snpeff.config
[23:53:57] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:57] Using BAM RG (Read Group) ID: HCU24010_S6
[23:53:57] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:57] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:58] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:58] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:58] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:02] Running: bwa mem  -Y -M -R '@RG\tID:HCU24010_S6\tSM:HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.716 CPU sec, 3.057 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.756 CPU sec, 3.219 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 49.486 CPU sec, 3.143 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 15.338 CPU sec, 0.965 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24010_S6\tSM:HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.889 sec; CPU: 167.280 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:18] Running: samtools index snps.bam 2>> snps.log
[23:54:19] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:19] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:23] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 9
          no. right trimmed                     : 88
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 101

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 101
       total no. variants observed              : 941
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:54:23] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:24] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:26] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:26] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:28] Marked 1145 heterozygous sites with 'n'
[23:54:28] Creating extra output files: BED GFF CSV TXT HTML
[23:54:28] Identified 941 variants.
[23:54:28] Result folder: HCU24010_S6
[23:54:28] Result files:
[23:54:28] * HCU24010_S6/snps.aligned.fa
[23:54:28] * HCU24010_S6/snps.bam
[23:54:28] * HCU24010_S6/snps.bam.bai
[23:54:28] * HCU24010_S6/snps.bed
[23:54:28] * HCU24010_S6/snps.consensus.fa
[23:54:28] * HCU24010_S6/snps.consensus.subs.fa
[23:54:28] * HCU24010_S6/snps.csv
[23:54:28] * HCU24010_S6/snps.filt.vcf
[23:54:28] * HCU24010_S6/snps.gff
[23:54:28] * HCU24010_S6/snps.html
[23:54:28] * HCU24010_S6/snps.log
[23:54:28] * HCU24010_S6/snps.raw.vcf
[23:54:28] * HCU24010_S6/snps.subs.vcf
[23:54:28] * HCU24010_S6/snps.tab
[23:54:28] * HCU24010_S6/snps.txt
[23:54:28] * HCU24010_S6/snps.vcf
[23:54:28] * HCU24010_S6/snps.vcf.gz
[23:54:28] * HCU24010_S6/snps.vcf.gz.csi
[23:54:28] Walltime used: 33 seconds
[23:54:28] Wishing you a life free of homopolymer errors.
[23:54:28] Done.
[23:54:29] This is snippy 4.6.0
[23:54:29] Written by Torsten Seemann
[23:54:29] Obtained from https://github.com/tseemann/snippy
[23:54:29] Detected operating system: linux
[23:54:29] Enabling bundled linux tools.
[23:54:29] Found bwa - /usr/local/bin/bwa
[23:54:29] Found bcftools - /usr/local/bin/bcftools
[23:54:29] Found samtools - /usr/local/bin/samtools
[23:54:29] Found java - /usr/local/bin/java
[23:54:29] Found snpEff - /usr/local/bin/snpEff
[23:54:29] Found samclip - /usr/local/bin/samclip
[23:54:29] Found seqtk - /usr/local/bin/seqtk
[23:54:29] Found parallel - /usr/local/bin/parallel
[23:54:29] Found freebayes - /usr/local/bin/freebayes
[23:54:29] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:29] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:29] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:29] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:29] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:29] Found gzip - /usr/bin/gzip
[23:54:29] Found vt - /usr/local/bin/vt
[23:54:29] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:29] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:29] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:29] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:29] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:29] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:29] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:29] Using reference: /data/Analysis/refe.gbk
[23:54:29] Treating reference as 'genbank' format.
[23:54:29] Will use 16 CPU cores.
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:54:29] Creating folder: HCU24011_S7
[23:54:29] Changing working directory: HCU24011_S7
[23:54:29] Creating reference folder: reference
[23:54:29] Extracting FASTA and GFF from reference.
[23:54:30] Wrote 1 sequences to ref.fa
[23:54:30] Wrote 4429 features to ref.gff
[23:54:30] Creating reference/snpeff.config
[23:54:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:30] Using BAM RG (Read Group) ID: HCU24011_S7
[23:54:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:32] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:35] Running: bwa mem  -Y -M -R '@RG\tID:HCU24011_S7\tSM:HCU24011_S7' -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 510314 sequences (133277700 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (52, 248478, 18, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (320, 504, 939)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2177)
[M::mem_pestat] mean and std.dev: (524.39, 308.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2796)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 281, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 610)
[M::mem_pestat] mean and std.dev: (292.95, 100.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 738)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 664, 1334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3814)
[M::mem_pestat] mean and std.dev: (839.61, 800.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5054)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (302, 521, 1337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3407)
[M::mem_pestat] mean and std.dev: (743.44, 552.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4442)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 510314 reads in 47.585 CPU sec, 3.060 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24011_S7\tSM:HCU24011_S7 -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz
[main] Real time: 5.537 sec; CPU: 49.200 sec
[samclip] Total SAM records 513584, removed 116348, allowed 35199, passed 397236
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:41] Running: samtools index snps.bam 2>> snps.log
[23:54:42] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:42] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:43] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 37
          no. right trimmed                     : 179
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 219

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 219
       total no. variants observed              : 2202
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:54:44] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:44] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:46] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:46] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:46] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:46] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:47] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:47] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:49] Marked 7775 heterozygous sites with 'n'
[23:54:49] Creating extra output files: BED GFF CSV TXT HTML
[23:54:49] Identified 2202 variants.
[23:54:49] Result folder: HCU24011_S7
[23:54:49] Result files:
[23:54:49] * HCU24011_S7/snps.aligned.fa
[23:54:49] * HCU24011_S7/snps.bam
[23:54:49] * HCU24011_S7/snps.bam.bai
[23:54:49] * HCU24011_S7/snps.bed
[23:54:49] * HCU24011_S7/snps.consensus.fa
[23:54:49] * HCU24011_S7/snps.consensus.subs.fa
[23:54:49] * HCU24011_S7/snps.csv
[23:54:49] * HCU24011_S7/snps.filt.vcf
[23:54:49] * HCU24011_S7/snps.gff
[23:54:49] * HCU24011_S7/snps.html
[23:54:49] * HCU24011_S7/snps.log
[23:54:49] * HCU24011_S7/snps.raw.vcf
[23:54:49] * HCU24011_S7/snps.subs.vcf
[23:54:49] * HCU24011_S7/snps.tab
[23:54:49] * HCU24011_S7/snps.txt
[23:54:49] * HCU24011_S7/snps.vcf
[23:54:49] * HCU24011_S7/snps.vcf.gz
[23:54:49] * HCU24011_S7/snps.vcf.gz.csi
[23:54:49] Walltime used: 20 seconds
[23:54:49] Wishing you a life free of homopolymer errors.
[23:54:49] Done.
[23:54:49] This is snippy 4.6.0
[23:54:49] Written by Torsten Seemann
[23:54:49] Obtained from https://github.com/tseemann/snippy
[23:54:49] Detected operating system: linux
[23:54:49] Enabling bundled linux tools.
[23:54:49] Found bwa - /usr/local/bin/bwa
[23:54:49] Found bcftools - /usr/local/bin/bcftools
[23:54:49] Found samtools - /usr/local/bin/samtools
[23:54:49] Found java - /usr/local/bin/java
[23:54:49] Found snpEff - /usr/local/bin/snpEff
[23:54:49] Found samclip - /usr/local/bin/samclip
[23:54:49] Found seqtk - /usr/local/bin/seqtk
[23:54:49] Found parallel - /usr/local/bin/parallel
[23:54:49] Found freebayes - /usr/local/bin/freebayes
[23:54:49] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:49] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:49] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:49] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:49] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:49] Found gzip - /usr/bin/gzip
[23:54:49] Found vt - /usr/local/bin/vt
[23:54:49] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:49] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:49] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:49] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:49] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:49] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:49] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:49] Using reference: /data/Analysis/refe.gbk
[23:54:49] Treating reference as 'genbank' format.
[23:54:49] Will use 16 CPU cores.
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R1.fastq.gz
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R2.fastq.gz
[23:54:49] Creating folder: HMS24017_S15
[23:54:49] Changing working directory: HMS24017_S15
[23:54:49] Creating reference folder: reference
[23:54:49] Extracting FASTA and GFF from reference.
[23:54:51] Wrote 1 sequences to ref.fa
[23:54:51] Wrote 4429 features to ref.gff
[23:54:51] Creating reference/snpeff.config
[23:54:51] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:51] Using BAM RG (Read Group) ID: HMS24017_S15
[23:54:51] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:51] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:52] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:52] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:52] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:55] Running: bwa mem  -Y -M -R '@RG\tID:HMS24017_S15\tSM:HMS24017_S15' -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 746630 sequences (160000202 bp)...
[M::process] read 218810 sequences (46953613 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 366940, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 259)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (215.34, 67.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 746630 reads in 39.279 CPU sec, 2.585 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 107505, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 260)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (215.68, 67.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 400000 records...
[M::mem_process_seqs] Processed 218810 reads in 12.831 CPU sec, 0.832 real sec
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24017_S15\tSM:HMS24017_S15 -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz
[main] Real time: 6.320 sec; CPU: 54.297 sec
[samclip] Total SAM records 967230, removed 76910, allowed 25086, passed 890320
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:55:04] Running: samtools index snps.bam 2>> snps.log
[23:55:04] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:55:04] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:55:06] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 10
          no. right trimmed                     : 74
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 87

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 87
       total no. variants observed              : 877
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:55:06] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:55:07] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:55:09] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:55:09] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:55:12] Marked 5332 heterozygous sites with 'n'
[23:55:12] Creating extra output files: BED GFF CSV TXT HTML
[23:55:12] Identified 877 variants.
[23:55:12] Result folder: HMS24017_S15
[23:55:12] Result files:
[23:55:12] * HMS24017_S15/snps.aligned.fa
[23:55:12] * HMS24017_S15/snps.bam
[23:55:12] * HMS24017_S15/snps.bam.bai
[23:55:12] * HMS24017_S15/snps.bed
[23:55:12] * HMS24017_S15/snps.consensus.fa
[23:55:12] * HMS24017_S15/snps.consensus.subs.fa
[23:55:12] * HMS24017_S15/snps.csv
[23:55:12] * HMS24017_S15/snps.filt.vcf
[23:55:12] * HMS24017_S15/snps.gff
[23:55:12] * HMS24017_S15/snps.html
[23:55:12] * HMS24017_S15/snps.log
[23:55:12] * HMS24017_S15/snps.raw.vcf
[23:55:12] * HMS24017_S15/snps.subs.vcf
[23:55:12] * HMS24017_S15/snps.tab
[23:55:12] * HMS24017_S15/snps.txt
[23:55:12] * HMS24017_S15/snps.vcf
[23:55:12] * HMS24017_S15/snps.vcf.gz
[23:55:12] * HMS24017_S15/snps.vcf.gz.csi
[23:55:12] Walltime used: 23 seconds
[23:55:12] Did you know? Snippy is a combination of SNP, Skippy, and snappy.
[23:55:12] Done.
[23:55:12] This is snippy 4.6.0
[23:55:12] Written by Torsten Seemann
[23:55:12] Obtained from https://github.com/tseemann/snippy
[23:55:12] Detected operating system: linux
[23:55:12] Enabling bundled linux tools.
[23:55:12] Found bwa - /usr/local/bin/bwa
[23:55:12] Found bcftools - /usr/local/bin/bcftools
[23:55:12] Found samtools - /usr/local/bin/samtools
[23:55:12] Found java - /usr/local/bin/java
[23:55:12] Found snpEff - /usr/local/bin/snpEff
[23:55:12] Found samclip - /usr/local/bin/samclip
[23:55:12] Found seqtk - /usr/local/bin/seqtk
[23:55:12] Found parallel - /usr/local/bin/parallel
[23:55:12] Found freebayes - /usr/local/bin/freebayes
[23:55:12] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:55:12] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:55:12] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:55:12] Found vcfuniq - /usr/local/bin/vcfuniq
[23:55:12] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:55:12] Found gzip - /usr/bin/gzip
[23:55:12] Found vt - /usr/local/bin/vt
[23:55:12] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:55:12] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:55:12] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:55:12] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:55:12] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:55:12] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:55:12] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:55:12] Using reference: /data/Analysis/refe.gbk
[23:55:12] Treating reference as 'genbank' format.
[23:55:12] Will use 16 CPU cores.
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R1.fastq.gz
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R2.fastq.gz
[23:55:12] Creating folder: HMS24046_S23
[23:55:12] Changing working directory: HMS24046_S23
[23:55:12] Creating reference folder: reference
[23:55:12] Extracting FASTA and GFF from reference.
[23:55:14] Wrote 1 sequences to ref.fa
[23:55:14] Wrote 4429 features to ref.gff
[23:55:14] Creating reference/snpeff.config
[23:55:14] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:55:14] Using BAM RG (Read Group) ID: HMS24046_S23
[23:55:14] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:55:14] Running: bwa index reference/ref.fa 2>> snps.log
[23:55:14] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:55:14] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:55:15] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:55:15] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:55:15] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:55:18] Running: bwa mem  -Y -M -R '@RG\tID:HMS24046_S23\tSM:HMS24046_S23' -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 593288 sequences (160000360 bp)...
[M::process] read 593558 sequences (160000118 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 290696, 6, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (235, 410, 549)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1177)
[M::mem_pestat] mean and std.dev: (357.00, 166.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1491)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (247, 310, 389)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 673)
[M::mem_pestat] mean and std.dev: (320.58, 111.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 815)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 593288 reads in 50.085 CPU sec, 3.126 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 290813, 12, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (246, 308, 387)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 669)
[M::mem_pestat] mean and std.dev: (319.18, 111.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 810)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1188, 1335, 2147)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4065)
[M::mem_pestat] mean and std.dev: (1270.92, 681.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5024)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (511, 819, 1070)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2188)
[M::mem_pestat] mean and std.dev: (613.22, 331.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2747)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 595752 sequences (160000212 bp)...
[M::mem_process_seqs] Processed 593558 reads in 52.371 CPU sec, 3.250 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::process] read 35140 sequences (9664990 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 291753, 9, 5)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (288, 347, 395)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (74, 609)
[M::mem_pestat] mean and std.dev: (333.00, 84.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 716)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (244, 307, 385)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 667)
[M::mem_pestat] mean and std.dev: (317.29, 110.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 808)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 595752 reads in 51.659 CPU sec, 3.280 real sec
[samclip] Processed 1200000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 17177, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (256, 321, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 700)
[M::mem_pestat] mean and std.dev: (334.50, 115.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 848)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 35140 reads in 3.534 CPU sec, 0.221 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24046_S23\tSM:HMS24046_S23 -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz
[main] Real time: 12.892 sec; CPU: 159.874 sec
[samclip] Total SAM records 1824229, removed 428700, allowed 109134, passed 1395529
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:55:34] Running: samtools index snps.bam 2>> snps.log
[23:55:35] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:55:35] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:55:39] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 12
          no. right trimmed                     : 83
          no. left and right trimmed            : 5
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 100

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 100
       total no. variants observed              : 1026
       total no. reference observed             : 0

Time elapsed: 0.02s

[23:55:39] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:55:40] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:55:41] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:55:41] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:55:41] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:55:41] Running: bcftools consensus --sample HMS24046_S23 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:55:42] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:55:42] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:55:42] Running: bcftools consensus --sample HMS24046_S23 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:55:42] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:55:42] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:55:44] Marked 1572 heterozygous sites with 'n'
[23:55:44] Creating extra output files: BED GFF CSV TXT HTML
[23:55:44] Identified 1026 variants.
[23:55:44] Result folder: HMS24046_S23
[23:55:44] Result files:
[23:55:44] * HMS24046_S23/snps.aligned.fa
[23:55:44] * HMS24046_S23/snps.bam
[23:55:44] * HMS24046_S23/snps.bam.bai
[23:55:44] * HMS24046_S23/snps.bed
[23:55:44] * HMS24046_S23/snps.consensus.fa
[23:55:44] * HMS24046_S23/snps.consensus.subs.fa
[23:55:44] * HMS24046_S23/snps.csv
[23:55:44] * HMS24046_S23/snps.filt.vcf
[23:55:44] * HMS24046_S23/snps.gff
[23:55:44] * HMS24046_S23/snps.html
[23:55:44] * HMS24046_S23/snps.log
[23:55:44] * HMS24046_S23/snps.raw.vcf
[23:55:44] * HMS24046_S23/snps.subs.vcf
[23:55:44] * HMS24046_S23/snps.tab
[23:55:44] * HMS24046_S23/snps.txt
[23:55:44] * HMS24046_S23/snps.vcf
[23:55:44] * HMS24046_S23/snps.vcf.gz
[23:55:44] * HMS24046_S23/snps.vcf.gz.csi
[23:55:44] Walltime used: 32 seconds
[23:55:44] Found a bug? Post it at https://github.com/tseemann/snippy/issues
[23:55:44] Done.
[23:55:44] This is snippy 4.6.0
[23:55:44] Written by Torsten Seemann
[23:55:44] Obtained from https://github.com/tseemann/snippy
[23:55:44] Detected operating system: linux
[23:55:44] Enabling bundled linux tools.
[23:55:44] Found bwa - /usr/local/bin/bwa
[23:55:44] Found bcftools - /usr/local/bin/bcftools
[23:55:44] Found samtools - /usr/local/bin/samtools
[23:55:44] Found java - /usr/local/bin/java
[23:55:44] Found snpEff - /usr/local/bin/snpEff
[23:55:44] Found samclip - /usr/local/bin/samclip
[23:55:44] Found seqtk - /usr/local/bin/seqtk
[23:55:44] Found parallel - /usr/local/bin/parallel
[23:55:44] Found freebayes - /usr/local/bin/freebayes
[23:55:44] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:55:44] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:55:44] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:55:44] Found vcfuniq - /usr/local/bin/vcfuniq
[23:55:44] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:55:44] Found gzip - /usr/bin/gzip
[23:55:44] Found vt - /usr/local/bin/vt
[23:55:44] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:55:44] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:55:44] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:55:44] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:55:44] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:55:44] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:55:44] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:55:44] Using reference: /data/Analysis/refe.gbk
[23:55:44] Treating reference as 'genbank' format.
[23:55:44] Will use 16 CPU cores.
[23:55:44] Using read file: /data/Analysis/HMS24051_S27_R1.fastq.gz
[23:55:44] Using read file: /data/Analysis/HMS24051_S27_R2.fastq.gz
[23:55:44] Creating folder: HMS24051_S27
[23:55:44] Changing working directory: HMS24051_S27
[23:55:44] Creating reference folder: reference
[23:55:44] Extracting FASTA and GFF from reference.
[23:55:46] Wrote 1 sequences to ref.fa
[23:55:46] Wrote 4429 features to ref.gff
[23:55:46] Creating reference/snpeff.config
[23:55:46] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:55:46] Using BAM RG (Read Group) ID: HMS24051_S27
[23:55:46] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:55:46] Running: bwa index reference/ref.fa 2>> snps.log
[23:55:47] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:55:47] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:55:47] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:55:47] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:55:47] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:55:50] Running: bwa mem  -Y -M -R '@RG\tID:HMS24051_S27\tSM:HMS24051_S27' -t 16 reference/ref.fa /data/Analysis/HMS24051_S27_R1.fastq.gz /data/Analysis/HMS24051_S27_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 597786 sequences (160000212 bp)...
[M::process] read 598070 sequences (160000143 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 292017, 9, 12)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (239, 296, 374)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 644)
[M::mem_pestat] mean and std.dev: (310.59, 104.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 779)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (279, 441, 1226)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3120)
[M::mem_pestat] mean and std.dev: (552.18, 418.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4067)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 597786 reads in 54.900 CPU sec, 3.445 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::process] read 235474 sequences (63152831 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 291898, 12, 10)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (291, 340, 515)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 963)
[M::mem_pestat] mean and std.dev: (393.10, 200.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1197)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 295, 372)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (309.11, 103.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 774)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (2044, 2346, 5595)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12697)
[M::mem_pestat] mean and std.dev: (2868.33, 1647.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16248)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (242, 507, 555)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1181)
[M::mem_pestat] mean and std.dev: (389.56, 157.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1494)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 598070 reads in 56.623 CPU sec, 3.573 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 114867, 5, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (239, 297, 376)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 650)
[M::mem_pestat] mean and std.dev: (312.20, 105.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 787)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1100000 records...
[M::mem_process_seqs] Processed 235474 reads in 24.357 CPU sec, 1.523 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24051_S27\tSM:HMS24051_S27 -t 16 reference/ref.fa /data/Analysis/HMS24051_S27_R1.fastq.gz /data/Analysis/HMS24051_S27_R2.fastq.gz
[main] Real time: 10.830 sec; CPU: 137.845 sec
[samclip] Total SAM records 1437126, removed 312079, allowed 105886, passed 1125047
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:56:04] Running: samtools index snps.bam 2>> snps.log
[23:56:05] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:56:05] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:56:08] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 18
          no. right trimmed                     : 90
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 111

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 111
       total no. variants observed              : 924
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:56:08] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:56:09] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:56:11] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:56:11] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:56:11] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:56:11] Running: bcftools consensus --sample HMS24051_S27 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:56:11] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:56:11] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:56:11] Running: bcftools consensus --sample HMS24051_S27 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:56:11] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:56:11] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:56:13] Marked 2929 heterozygous sites with 'n'
[23:56:13] Creating extra output files: BED GFF CSV TXT HTML
[23:56:13] Identified 924 variants.
[23:56:13] Result folder: HMS24051_S27
[23:56:13] Result files:
[23:56:13] * HMS24051_S27/snps.aligned.fa
[23:56:13] * HMS24051_S27/snps.bam
[23:56:13] * HMS24051_S27/snps.bam.bai
[23:56:13] * HMS24051_S27/snps.bed
[23:56:13] * HMS24051_S27/snps.consensus.fa
[23:56:13] * HMS24051_S27/snps.consensus.subs.fa
[23:56:13] * HMS24051_S27/snps.csv
[23:56:13] * HMS24051_S27/snps.filt.vcf
[23:56:13] * HMS24051_S27/snps.gff
[23:56:13] * HMS24051_S27/snps.html
[23:56:13] * HMS24051_S27/snps.log
[23:56:13] * HMS24051_S27/snps.raw.vcf
[23:56:13] * HMS24051_S27/snps.subs.vcf
[23:56:13] * HMS24051_S27/snps.tab
[23:56:13] * HMS24051_S27/snps.txt
[23:56:13] * HMS24051_S27/snps.vcf
[23:56:13] * HMS24051_S27/snps.vcf.gz
[23:56:13] * HMS24051_S27/snps.vcf.gz.csi
[23:56:13] Walltime used: 29 seconds
[23:56:13] Found a bug? Post it at https://github.com/tseemann/snippy/issues
[23:56:13] Done.
[23:56:14] This is snippy 4.6.0
[23:56:14] Written by Torsten Seemann
[23:56:14] Obtained from https://github.com/tseemann/snippy
[23:56:14] Detected operating system: linux
[23:56:14] Enabling bundled linux tools.
[23:56:14] Found bwa - /usr/local/bin/bwa
[23:56:14] Found bcftools - /usr/local/bin/bcftools
[23:56:14] Found samtools - /usr/local/bin/samtools
[23:56:14] Found java - /usr/local/bin/java
[23:56:14] Found snpEff - /usr/local/bin/snpEff
[23:56:14] Found samclip - /usr/local/bin/samclip
[23:56:14] Found seqtk - /usr/local/bin/seqtk
[23:56:14] Found parallel - /usr/local/bin/parallel
[23:56:14] Found freebayes - /usr/local/bin/freebayes
[23:56:14] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:56:14] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:56:14] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:56:14] Found vcfuniq - /usr/local/bin/vcfuniq
[23:56:14] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:56:14] Found gzip - /usr/bin/gzip
[23:56:14] Found vt - /usr/local/bin/vt
[23:56:14] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:56:14] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:56:14] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:56:14] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:56:14] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:56:14] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:56:14] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:56:14] Using reference: /data/Analysis/refe.gbk
[23:56:14] Treating reference as 'genbank' format.
[23:56:14] Will use 16 CPU cores.
[23:56:14] Using read file: /data/Analysis/HMS24052_S28_R1.fastq.gz
[23:56:14] Using read file: /data/Analysis/HMS24052_S28_R2.fastq.gz
[23:56:14] Creating folder: HMS24052_S28
[23:56:14] Changing working directory: HMS24052_S28
[23:56:14] Creating reference folder: reference
[23:56:14] Extracting FASTA and GFF from reference.
[23:56:15] Wrote 1 sequences to ref.fa
[23:56:15] Wrote 4429 features to ref.gff
[23:56:15] Creating reference/snpeff.config
[23:56:15] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:56:15] Using BAM RG (Read Group) ID: HMS24052_S28
[23:56:15] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:56:15] Running: bwa index reference/ref.fa 2>> snps.log
[23:56:16] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:56:16] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:56:16] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:56:16] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:56:17] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:56:20] Running: bwa mem  -Y -M -R '@RG\tID:HMS24052_S28\tSM:HMS24052_S28' -t 16 reference/ref.fa /data/Analysis/HMS24052_S28_R1.fastq.gz /data/Analysis/HMS24052_S28_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 613970 sequences (160000327 bp)...
[M::process] read 615382 sequences (160000193 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 299720, 22, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (227, 286, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 626)
[M::mem_pestat] mean and std.dev: (297.04, 104.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 759)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1356, 2212, 2289)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4155)
[M::mem_pestat] mean and std.dev: (1770.57, 796.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5088)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (410, 1374, 1516)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3728)
[M::mem_pestat] mean and std.dev: (1131.18, 884.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4834)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 613970 reads in 49.239 CPU sec, 3.092 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 300381, 13, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (227, 285, 359)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 623)
[M::mem_pestat] mean and std.dev: (296.10, 104.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 755)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1333, 1377, 2329)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4321)
[M::mem_pestat] mean and std.dev: (1647.69, 642.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5317)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::process] read 614488 sequences (160000150 bp)...
[M::mem_process_seqs] Processed 615382 reads in 48.591 CPU sec, 3.032 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 299915, 20, 11)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (532, 1264, 1464)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3328)
[M::mem_pestat] mean and std.dev: (1152.21, 730.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4260)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 285, 359)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 625)
[M::mem_pestat] mean and std.dev: (296.16, 104.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 758)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (2064, 2192, 2279)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1634, 2709)
[M::mem_pestat] mean and std.dev: (2215.50, 112.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1419, 2924)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (393, 680, 1350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3264)
[M::mem_pestat] mean and std.dev: (784.91, 478.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4221)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 618126 sequences (160000338 bp)...
[M::mem_process_seqs] Processed 614488 reads in 51.512 CPU sec, 3.212 real sec
Reading: input.tab
Generating output commands for 8 isolates
Done.
[23:52:59] This is snippy 4.6.0
[23:52:59] Written by Torsten Seemann
[23:52:59] Obtained from https://github.com/tseemann/snippy
[23:52:59] Detected operating system: linux
[23:52:59] Enabling bundled linux tools.
[23:52:59] Found bwa - /usr/local/bin/bwa
[23:52:59] Found bcftools - /usr/local/bin/bcftools
[23:52:59] Found samtools - /usr/local/bin/samtools
[23:52:59] Found java - /usr/local/bin/java
[23:52:59] Found snpEff - /usr/local/bin/snpEff
[23:52:59] Found samclip - /usr/local/bin/samclip
[23:52:59] Found seqtk - /usr/local/bin/seqtk
[23:52:59] Found parallel - /usr/local/bin/parallel
[23:52:59] Found freebayes - /usr/local/bin/freebayes
[23:52:59] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:52:59] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:52:59] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:52:59] Found vcfuniq - /usr/local/bin/vcfuniq
[23:52:59] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:52:59] Found gzip - /usr/bin/gzip
[23:52:59] Found vt - /usr/local/bin/vt
[23:52:59] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:52:59] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:52:59] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:52:59] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:52:59] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:52:59] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:52:59] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:52:59] Using reference: /data/Analysis/refe.gbk
[23:52:59] Treating reference as 'genbank' format.
[23:52:59] Will use 16 CPU cores.
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R1.fastq.gz
[23:52:59] Using read file: /data/Analysis/HCU24001_S1_R2.fastq.gz
[23:52:59] Creating folder: HCU24001_S1
[23:52:59] Changing working directory: HCU24001_S1
[23:52:59] Creating reference folder: reference
[23:52:59] Extracting FASTA and GFF from reference.
[23:53:01] Wrote 1 sequences to ref.fa
[23:53:01] Wrote 4429 features to ref.gff
[23:53:01] Creating reference/snpeff.config
[23:53:01] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:01] Using BAM RG (Read Group) ID: HCU24001_S1
[23:53:01] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:01] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:02] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:02] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:02] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:02] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:05] Running: bwa mem  -Y -M -R '@RG\tID:HCU24001_S1\tSM:HCU24001_S1' -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 588102 sequences (160000136 bp)...
[M::process] read 587354 sequences (160000326 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 288148, 11, 13)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (283, 585, 2989)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8401)
[M::mem_pestat] mean and std.dev: (1722.18, 2134.81)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 11107)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.52, 118.98)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1930, 2137, 2196)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1398, 2728)
[M::mem_pestat] mean and std.dev: (2111.10, 192.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1132, 2994)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (388, 972, 2579)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6961)
[M::mem_pestat] mean and std.dev: (1241.69, 1108.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 9152)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 588102 reads in 51.399 CPU sec, 3.200 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (15, 287648, 13, 12)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (553, 748, 1079)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2131)
[M::mem_pestat] mean and std.dev: (780.43, 482.61)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2711)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (254, 319, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (331.64, 118.52)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 854)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1269, 2054, 2297)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4353)
[M::mem_pestat] mean and std.dev: (1918.31, 819.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5381)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (261, 564, 1065)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2673)
[M::mem_pestat] mean and std.dev: (608.09, 381.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3477)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 568702 sequences (154472003 bp)...
[M::mem_process_seqs] Processed 587354 reads in 54.820 CPU sec, 3.399 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 278672, 16, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (252, 318, 402)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 702)
[M::mem_pestat] mean and std.dev: (330.22, 118.25)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 852)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 2182, 2373)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4375)
[M::mem_pestat] mean and std.dev: (2013.69, 950.68)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5816)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (197, 562, 1116)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2954)
[M::mem_pestat] mean and std.dev: (665.30, 560.43)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 3873)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 568702 reads in 51.825 CPU sec, 3.284 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24001_S1\tSM:HCU24001_S1 -t 16 reference/ref.fa /data/Analysis/HCU24001_S1_R1.fastq.gz /data/Analysis/HCU24001_S1_R2.fastq.gz
[main] Real time: 12.886 sec; CPU: 160.130 sec
[samclip] Total SAM records 1748685, removed 418224, allowed 119604, passed 1330461
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:22] Running: samtools index snps.bam 2>> snps.log
[23:53:22] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:22] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:26] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 7
          no. right trimmed                     : 66
          no. left and right trimmed            : 2
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 75

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 75
       total no. variants observed              : 609
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:53:26] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:27] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:28] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:29] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: bcftools consensus --sample HCU24001_S1 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:29] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:29] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:31] Marked 1460 heterozygous sites with 'n'
[23:53:31] Creating extra output files: BED GFF CSV TXT HTML
[23:53:31] Identified 609 variants.
[23:53:31] Result folder: HCU24001_S1
[23:53:31] Result files:
[23:53:31] * HCU24001_S1/snps.aligned.fa
[23:53:31] * HCU24001_S1/snps.bam
[23:53:31] * HCU24001_S1/snps.bam.bai
[23:53:31] * HCU24001_S1/snps.bed
[23:53:31] * HCU24001_S1/snps.consensus.fa
[23:53:31] * HCU24001_S1/snps.consensus.subs.fa
[23:53:31] * HCU24001_S1/snps.csv
[23:53:31] * HCU24001_S1/snps.filt.vcf
[23:53:31] * HCU24001_S1/snps.gff
[23:53:31] * HCU24001_S1/snps.html
[23:53:31] * HCU24001_S1/snps.log
[23:53:31] * HCU24001_S1/snps.raw.vcf
[23:53:31] * HCU24001_S1/snps.subs.vcf
[23:53:31] * HCU24001_S1/snps.tab
[23:53:31] * HCU24001_S1/snps.txt
[23:53:31] * HCU24001_S1/snps.vcf
[23:53:31] * HCU24001_S1/snps.vcf.gz
[23:53:31] * HCU24001_S1/snps.vcf.gz.csi
[23:53:31] Walltime used: 32 seconds
[23:53:31] Have a suggestion? Tell me at https://github.com/tseemann/snippy/issues
[23:53:31] Done.
[23:53:31] This is snippy 4.6.0
[23:53:31] Written by Torsten Seemann
[23:53:31] Obtained from https://github.com/tseemann/snippy
[23:53:31] Detected operating system: linux
[23:53:31] Enabling bundled linux tools.
[23:53:31] Found bwa - /usr/local/bin/bwa
[23:53:31] Found bcftools - /usr/local/bin/bcftools
[23:53:31] Found samtools - /usr/local/bin/samtools
[23:53:31] Found java - /usr/local/bin/java
[23:53:31] Found snpEff - /usr/local/bin/snpEff
[23:53:31] Found samclip - /usr/local/bin/samclip
[23:53:31] Found seqtk - /usr/local/bin/seqtk
[23:53:31] Found parallel - /usr/local/bin/parallel
[23:53:31] Found freebayes - /usr/local/bin/freebayes
[23:53:31] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:31] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:31] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:31] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:31] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:31] Found gzip - /usr/bin/gzip
[23:53:31] Found vt - /usr/local/bin/vt
[23:53:31] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:31] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:31] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:31] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:31] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:31] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:31] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:31] Using reference: /data/Analysis/refe.gbk
[23:53:31] Treating reference as 'genbank' format.
[23:53:31] Will use 16 CPU cores.
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R1.fastq.gz
[23:53:31] Using read file: /data/Analysis/HCU24002_S2_R2.fastq.gz
[23:53:31] Creating folder: HCU24002_S2
[23:53:31] Changing working directory: HCU24002_S2
[23:53:31] Creating reference folder: reference
[23:53:31] Extracting FASTA and GFF from reference.
[23:53:33] Wrote 1 sequences to ref.fa
[23:53:33] Wrote 4429 features to ref.gff
[23:53:33] Creating reference/snpeff.config
[23:53:33] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:33] Using BAM RG (Read Group) ID: HCU24002_S2
[23:53:33] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:33] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:34] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:34] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:34] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:34] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:53:37] Running: bwa mem  -Y -M -R '@RG\tID:HCU24002_S2\tSM:HCU24002_S2' -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 673048 sequences (160000523 bp)...
[M::process] read 321608 sequences (75781981 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 329958, 4, 7)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (210, 308, 518)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1134)
[M::mem_pestat] mean and std.dev: (413.07, 292.57)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1583)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (191, 242, 310)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 548)
[M::mem_pestat] mean and std.dev: (253.12, 91.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 667)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 673048 reads in 51.014 CPU sec, 3.281 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 157721, 3, 8)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (189, 239, 306)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 540)
[M::mem_pestat] mean and std.dev: (249.91, 90.34)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 600000 records...
[M::mem_process_seqs] Processed 321608 reads in 25.544 CPU sec, 1.631 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24002_S2\tSM:HCU24002_S2 -t 16 reference/ref.fa /data/Analysis/HCU24002_S2_R1.fastq.gz /data/Analysis/HCU24002_S2_R2.fastq.gz
[main] Real time: 7.396 sec; CPU: 78.568 sec
[samclip] Total SAM records 998333, removed 174806, allowed 39058, passed 823527
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:53:47] Running: samtools index snps.bam 2>> snps.log
[23:53:47] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:53:47] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:53:50] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 56
          no. right trimmed                     : 234
          no. left and right trimmed            : 6
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 296

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 296
       total no. variants observed              : 2484
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:53:50] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:53:51] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:53:53] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:53:53] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: bcftools consensus --sample HCU24002_S2 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:53:53] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:53:53] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:53:55] Marked 8955 heterozygous sites with 'n'
[23:53:55] Creating extra output files: BED GFF CSV TXT HTML
[23:53:55] Identified 2484 variants.
[23:53:55] Result folder: HCU24002_S2
[23:53:55] Result files:
[23:53:55] * HCU24002_S2/snps.aligned.fa
[23:53:55] * HCU24002_S2/snps.bam
[23:53:55] * HCU24002_S2/snps.bam.bai
[23:53:55] * HCU24002_S2/snps.bed
[23:53:55] * HCU24002_S2/snps.consensus.fa
[23:53:55] * HCU24002_S2/snps.consensus.subs.fa
[23:53:55] * HCU24002_S2/snps.csv
[23:53:55] * HCU24002_S2/snps.filt.vcf
[23:53:55] * HCU24002_S2/snps.gff
[23:53:55] * HCU24002_S2/snps.html
[23:53:55] * HCU24002_S2/snps.log
[23:53:55] * HCU24002_S2/snps.raw.vcf
[23:53:55] * HCU24002_S2/snps.subs.vcf
[23:53:55] * HCU24002_S2/snps.tab
[23:53:55] * HCU24002_S2/snps.txt
[23:53:55] * HCU24002_S2/snps.vcf
[23:53:55] * HCU24002_S2/snps.vcf.gz
[23:53:55] * HCU24002_S2/snps.vcf.gz.csi
[23:53:55] Walltime used: 24 seconds
[23:53:55] Wishing you a life free of homopolymer errors.
[23:53:55] Done.
[23:53:55] This is snippy 4.6.0
[23:53:55] Written by Torsten Seemann
[23:53:55] Obtained from https://github.com/tseemann/snippy
[23:53:55] Detected operating system: linux
[23:53:55] Enabling bundled linux tools.
[23:53:55] Found bwa - /usr/local/bin/bwa
[23:53:55] Found bcftools - /usr/local/bin/bcftools
[23:53:55] Found samtools - /usr/local/bin/samtools
[23:53:55] Found java - /usr/local/bin/java
[23:53:55] Found snpEff - /usr/local/bin/snpEff
[23:53:55] Found samclip - /usr/local/bin/samclip
[23:53:55] Found seqtk - /usr/local/bin/seqtk
[23:53:55] Found parallel - /usr/local/bin/parallel
[23:53:55] Found freebayes - /usr/local/bin/freebayes
[23:53:55] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:53:55] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:53:55] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:53:55] Found vcfuniq - /usr/local/bin/vcfuniq
[23:53:55] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:53:55] Found gzip - /usr/bin/gzip
[23:53:55] Found vt - /usr/local/bin/vt
[23:53:55] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:53:55] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:53:55] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:53:55] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:53:55] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:53:55] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:53:55] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:53:55] Using reference: /data/Analysis/refe.gbk
[23:53:56] Treating reference as 'genbank' format.
[23:53:56] Will use 16 CPU cores.
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R1.fastq.gz
[23:53:56] Using read file: /data/Analysis/HCU24010_S6_R2.fastq.gz
[23:53:56] Creating folder: HCU24010_S6
[23:53:56] Changing working directory: HCU24010_S6
[23:53:56] Creating reference folder: reference
[23:53:56] Extracting FASTA and GFF from reference.
[23:53:57] Wrote 1 sequences to ref.fa
[23:53:57] Wrote 4429 features to ref.gff
[23:53:57] Creating reference/snpeff.config
[23:53:57] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:53:57] Using BAM RG (Read Group) ID: HCU24010_S6
[23:53:57] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:53:57] Running: bwa index reference/ref.fa 2>> snps.log
[23:53:58] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:53:58] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:53:58] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:53:58] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:02] Running: bwa mem  -Y -M -R '@RG\tID:HCU24010_S6\tSM:HCU24010_S6' -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 609826 sequences (160000094 bp)...
[M::process] read 609544 sequences (160000563 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 298630, 15, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (245, 422, 533)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1109)
[M::mem_pestat] mean and std.dev: (406.75, 200.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1397)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 291, 366)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 636)
[M::mem_pestat] mean and std.dev: (300.52, 105.84)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 771)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1372, 1827, 2630)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5146)
[M::mem_pestat] mean and std.dev: (2019.67, 1229.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6937)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 609826 reads in 48.716 CPU sec, 3.057 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 298415, 14, 13)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (231, 290, 365)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 633)
[M::mem_pestat] mean and std.dev: (300.19, 105.35)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (274, 1335, 2334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6454)
[M::mem_pestat] mean and std.dev: (1477.71, 1194.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 8514)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 656, 771)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1837)
[M::mem_pestat] mean and std.dev: (521.17, 297.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2370)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 615306 sequences (160000067 bp)...
[M::mem_process_seqs] Processed 609544 reads in 51.756 CPU sec, 3.219 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::process] read 153546 sequences (41061042 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (8, 301191, 15, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 624)
[M::mem_pestat] mean and std.dev: (295.54, 104.09)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 756)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1354, 2101, 2409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4519)
[M::mem_pestat] mean and std.dev: (2008.21, 1090.04)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 6368)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (196, 329, 410)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 838)
[M::mem_pestat] mean and std.dev: (273.12, 92.36)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 615306 reads in 49.486 CPU sec, 3.143 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (5, 75062, 4, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 298, 377)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 655)
[M::mem_pestat] mean and std.dev: (310.52, 108.19)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 794)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1600000 records...
[M::mem_process_seqs] Processed 153546 reads in 15.338 CPU sec, 0.965 real sec
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[samclip] Processed 1900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24010_S6\tSM:HCU24010_S6 -t 16 reference/ref.fa /data/Analysis/HCU24010_S6_R1.fastq.gz /data/Analysis/HCU24010_S6_R2.fastq.gz
[main] Real time: 12.889 sec; CPU: 167.280 sec
[samclip] Total SAM records 1995217, removed 393104, allowed 117014, passed 1602113
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:18] Running: samtools index snps.bam 2>> snps.log
[23:54:19] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:19] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:23] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 9
          no. right trimmed                     : 88
          no. left and right trimmed            : 4
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 101

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 101
       total no. variants observed              : 941
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:54:23] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:24] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:26] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:26] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: bcftools consensus --sample HCU24010_S6 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:26] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:26] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:28] Marked 1145 heterozygous sites with 'n'
[23:54:28] Creating extra output files: BED GFF CSV TXT HTML
[23:54:28] Identified 941 variants.
[23:54:28] Result folder: HCU24010_S6
[23:54:28] Result files:
[23:54:28] * HCU24010_S6/snps.aligned.fa
[23:54:28] * HCU24010_S6/snps.bam
[23:54:28] * HCU24010_S6/snps.bam.bai
[23:54:28] * HCU24010_S6/snps.bed
[23:54:28] * HCU24010_S6/snps.consensus.fa
[23:54:28] * HCU24010_S6/snps.consensus.subs.fa
[23:54:28] * HCU24010_S6/snps.csv
[23:54:28] * HCU24010_S6/snps.filt.vcf
[23:54:28] * HCU24010_S6/snps.gff
[23:54:28] * HCU24010_S6/snps.html
[23:54:28] * HCU24010_S6/snps.log
[23:54:28] * HCU24010_S6/snps.raw.vcf
[23:54:28] * HCU24010_S6/snps.subs.vcf
[23:54:28] * HCU24010_S6/snps.tab
[23:54:28] * HCU24010_S6/snps.txt
[23:54:28] * HCU24010_S6/snps.vcf
[23:54:28] * HCU24010_S6/snps.vcf.gz
[23:54:28] * HCU24010_S6/snps.vcf.gz.csi
[23:54:28] Walltime used: 33 seconds
[23:54:28] Wishing you a life free of homopolymer errors.
[23:54:28] Done.
[23:54:29] This is snippy 4.6.0
[23:54:29] Written by Torsten Seemann
[23:54:29] Obtained from https://github.com/tseemann/snippy
[23:54:29] Detected operating system: linux
[23:54:29] Enabling bundled linux tools.
[23:54:29] Found bwa - /usr/local/bin/bwa
[23:54:29] Found bcftools - /usr/local/bin/bcftools
[23:54:29] Found samtools - /usr/local/bin/samtools
[23:54:29] Found java - /usr/local/bin/java
[23:54:29] Found snpEff - /usr/local/bin/snpEff
[23:54:29] Found samclip - /usr/local/bin/samclip
[23:54:29] Found seqtk - /usr/local/bin/seqtk
[23:54:29] Found parallel - /usr/local/bin/parallel
[23:54:29] Found freebayes - /usr/local/bin/freebayes
[23:54:29] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:29] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:29] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:29] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:29] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:29] Found gzip - /usr/bin/gzip
[23:54:29] Found vt - /usr/local/bin/vt
[23:54:29] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:29] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:29] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:29] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:29] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:29] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:29] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:29] Using reference: /data/Analysis/refe.gbk
[23:54:29] Treating reference as 'genbank' format.
[23:54:29] Will use 16 CPU cores.
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R1.fastq.gz
[23:54:29] Using read file: /data/Analysis/HCU24011_S7_R2.fastq.gz
[23:54:29] Creating folder: HCU24011_S7
[23:54:29] Changing working directory: HCU24011_S7
[23:54:29] Creating reference folder: reference
[23:54:29] Extracting FASTA and GFF from reference.
[23:54:30] Wrote 1 sequences to ref.fa
[23:54:30] Wrote 4429 features to ref.gff
[23:54:30] Creating reference/snpeff.config
[23:54:30] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:30] Using BAM RG (Read Group) ID: HCU24011_S7
[23:54:30] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:30] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:31] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:31] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:31] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:32] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:35] Running: bwa mem  -Y -M -R '@RG\tID:HCU24011_S7\tSM:HCU24011_S7' -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 510314 sequences (133277700 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (52, 248478, 18, 48)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (320, 504, 939)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2177)
[M::mem_pestat] mean and std.dev: (524.39, 308.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2796)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 281, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 610)
[M::mem_pestat] mean and std.dev: (292.95, 100.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 738)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 664, 1334)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3814)
[M::mem_pestat] mean and std.dev: (839.61, 800.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5054)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (302, 521, 1337)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3407)
[M::mem_pestat] mean and std.dev: (743.44, 552.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4442)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 510314 reads in 47.585 CPU sec, 3.060 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HCU24011_S7\tSM:HCU24011_S7 -t 16 reference/ref.fa /data/Analysis/HCU24011_S7_R1.fastq.gz /data/Analysis/HCU24011_S7_R2.fastq.gz
[main] Real time: 5.537 sec; CPU: 49.200 sec
[samclip] Total SAM records 513584, removed 116348, allowed 35199, passed 397236
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:54:41] Running: samtools index snps.bam 2>> snps.log
[23:54:42] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:54:42] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:54:43] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 37
          no. right trimmed                     : 179
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 219

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 219
       total no. variants observed              : 2202
       total no. reference observed             : 0

Time elapsed: 0.03s

[23:54:44] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:54:44] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:54:46] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:54:46] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:54:46] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:54:46] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:54:47] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: bcftools consensus --sample HCU24011_S7 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:54:47] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:54:47] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:54:49] Marked 7775 heterozygous sites with 'n'
[23:54:49] Creating extra output files: BED GFF CSV TXT HTML
[23:54:49] Identified 2202 variants.
[23:54:49] Result folder: HCU24011_S7
[23:54:49] Result files:
[23:54:49] * HCU24011_S7/snps.aligned.fa
[23:54:49] * HCU24011_S7/snps.bam
[23:54:49] * HCU24011_S7/snps.bam.bai
[23:54:49] * HCU24011_S7/snps.bed
[23:54:49] * HCU24011_S7/snps.consensus.fa
[23:54:49] * HCU24011_S7/snps.consensus.subs.fa
[23:54:49] * HCU24011_S7/snps.csv
[23:54:49] * HCU24011_S7/snps.filt.vcf
[23:54:49] * HCU24011_S7/snps.gff
[23:54:49] * HCU24011_S7/snps.html
[23:54:49] * HCU24011_S7/snps.log
[23:54:49] * HCU24011_S7/snps.raw.vcf
[23:54:49] * HCU24011_S7/snps.subs.vcf
[23:54:49] * HCU24011_S7/snps.tab
[23:54:49] * HCU24011_S7/snps.txt
[23:54:49] * HCU24011_S7/snps.vcf
[23:54:49] * HCU24011_S7/snps.vcf.gz
[23:54:49] * HCU24011_S7/snps.vcf.gz.csi
[23:54:49] Walltime used: 20 seconds
[23:54:49] Wishing you a life free of homopolymer errors.
[23:54:49] Done.
[23:54:49] This is snippy 4.6.0
[23:54:49] Written by Torsten Seemann
[23:54:49] Obtained from https://github.com/tseemann/snippy
[23:54:49] Detected operating system: linux
[23:54:49] Enabling bundled linux tools.
[23:54:49] Found bwa - /usr/local/bin/bwa
[23:54:49] Found bcftools - /usr/local/bin/bcftools
[23:54:49] Found samtools - /usr/local/bin/samtools
[23:54:49] Found java - /usr/local/bin/java
[23:54:49] Found snpEff - /usr/local/bin/snpEff
[23:54:49] Found samclip - /usr/local/bin/samclip
[23:54:49] Found seqtk - /usr/local/bin/seqtk
[23:54:49] Found parallel - /usr/local/bin/parallel
[23:54:49] Found freebayes - /usr/local/bin/freebayes
[23:54:49] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:54:49] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:54:49] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:54:49] Found vcfuniq - /usr/local/bin/vcfuniq
[23:54:49] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:54:49] Found gzip - /usr/bin/gzip
[23:54:49] Found vt - /usr/local/bin/vt
[23:54:49] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:54:49] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:54:49] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:54:49] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:54:49] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:54:49] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:54:49] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:54:49] Using reference: /data/Analysis/refe.gbk
[23:54:49] Treating reference as 'genbank' format.
[23:54:49] Will use 16 CPU cores.
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R1.fastq.gz
[23:54:49] Using read file: /data/Analysis/HMS24017_S15_R2.fastq.gz
[23:54:49] Creating folder: HMS24017_S15
[23:54:49] Changing working directory: HMS24017_S15
[23:54:49] Creating reference folder: reference
[23:54:49] Extracting FASTA and GFF from reference.
[23:54:51] Wrote 1 sequences to ref.fa
[23:54:51] Wrote 4429 features to ref.gff
[23:54:51] Creating reference/snpeff.config
[23:54:51] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:54:51] Using BAM RG (Read Group) ID: HMS24017_S15
[23:54:51] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:54:51] Running: bwa index reference/ref.fa 2>> snps.log
[23:54:52] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:54:52] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:54:52] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:54:52] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:54:55] Running: bwa mem  -Y -M -R '@RG\tID:HMS24017_S15\tSM:HMS24017_S15' -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 746630 sequences (160000202 bp)...
[M::process] read 218810 sequences (46953613 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 366940, 1, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 259)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 435)
[M::mem_pestat] mean and std.dev: (215.34, 67.07)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 523)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 746630 reads in 39.279 CPU sec, 2.585 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 107505, 0, 1)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (171, 216, 260)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 438)
[M::mem_pestat] mean and std.dev: (215.68, 67.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 527)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 400000 records...
[M::mem_process_seqs] Processed 218810 reads in 12.831 CPU sec, 0.832 real sec
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24017_S15\tSM:HMS24017_S15 -t 16 reference/ref.fa /data/Analysis/HMS24017_S15_R1.fastq.gz /data/Analysis/HMS24017_S15_R2.fastq.gz
[main] Real time: 6.320 sec; CPU: 54.297 sec
[samclip] Total SAM records 967230, removed 76910, allowed 25086, passed 890320
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:55:04] Running: samtools index snps.bam 2>> snps.log
[23:55:04] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:55:04] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:55:06] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 10
          no. right trimmed                     : 74
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 87

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 87
       total no. variants observed              : 877
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:55:06] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:55:07] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:55:09] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:55:09] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: bcftools consensus --sample HMS24017_S15 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:55:09] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:55:09] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:55:12] Marked 5332 heterozygous sites with 'n'
[23:55:12] Creating extra output files: BED GFF CSV TXT HTML
[23:55:12] Identified 877 variants.
[23:55:12] Result folder: HMS24017_S15
[23:55:12] Result files:
[23:55:12] * HMS24017_S15/snps.aligned.fa
[23:55:12] * HMS24017_S15/snps.bam
[23:55:12] * HMS24017_S15/snps.bam.bai
[23:55:12] * HMS24017_S15/snps.bed
[23:55:12] * HMS24017_S15/snps.consensus.fa
[23:55:12] * HMS24017_S15/snps.consensus.subs.fa
[23:55:12] * HMS24017_S15/snps.csv
[23:55:12] * HMS24017_S15/snps.filt.vcf
[23:55:12] * HMS24017_S15/snps.gff
[23:55:12] * HMS24017_S15/snps.html
[23:55:12] * HMS24017_S15/snps.log
[23:55:12] * HMS24017_S15/snps.raw.vcf
[23:55:12] * HMS24017_S15/snps.subs.vcf
[23:55:12] * HMS24017_S15/snps.tab
[23:55:12] * HMS24017_S15/snps.txt
[23:55:12] * HMS24017_S15/snps.vcf
[23:55:12] * HMS24017_S15/snps.vcf.gz
[23:55:12] * HMS24017_S15/snps.vcf.gz.csi
[23:55:12] Walltime used: 23 seconds
[23:55:12] Did you know? Snippy is a combination of SNP, Skippy, and snappy.
[23:55:12] Done.
[23:55:12] This is snippy 4.6.0
[23:55:12] Written by Torsten Seemann
[23:55:12] Obtained from https://github.com/tseemann/snippy
[23:55:12] Detected operating system: linux
[23:55:12] Enabling bundled linux tools.
[23:55:12] Found bwa - /usr/local/bin/bwa
[23:55:12] Found bcftools - /usr/local/bin/bcftools
[23:55:12] Found samtools - /usr/local/bin/samtools
[23:55:12] Found java - /usr/local/bin/java
[23:55:12] Found snpEff - /usr/local/bin/snpEff
[23:55:12] Found samclip - /usr/local/bin/samclip
[23:55:12] Found seqtk - /usr/local/bin/seqtk
[23:55:12] Found parallel - /usr/local/bin/parallel
[23:55:12] Found freebayes - /usr/local/bin/freebayes
[23:55:12] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:55:12] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:55:12] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:55:12] Found vcfuniq - /usr/local/bin/vcfuniq
[23:55:12] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:55:12] Found gzip - /usr/bin/gzip
[23:55:12] Found vt - /usr/local/bin/vt
[23:55:12] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:55:12] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:55:12] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:55:12] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:55:12] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:55:12] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:55:12] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:55:12] Using reference: /data/Analysis/refe.gbk
[23:55:12] Treating reference as 'genbank' format.
[23:55:12] Will use 16 CPU cores.
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R1.fastq.gz
[23:55:12] Using read file: /data/Analysis/HMS24046_S23_R2.fastq.gz
[23:55:12] Creating folder: HMS24046_S23
[23:55:12] Changing working directory: HMS24046_S23
[23:55:12] Creating reference folder: reference
[23:55:12] Extracting FASTA and GFF from reference.
[23:55:14] Wrote 1 sequences to ref.fa
[23:55:14] Wrote 4429 features to ref.gff
[23:55:14] Creating reference/snpeff.config
[23:55:14] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:55:14] Using BAM RG (Read Group) ID: HMS24046_S23
[23:55:14] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:55:14] Running: bwa index reference/ref.fa 2>> snps.log
[23:55:14] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:55:14] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:55:15] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:55:15] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:55:15] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:55:18] Running: bwa mem  -Y -M -R '@RG\tID:HMS24046_S23\tSM:HMS24046_S23' -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 593288 sequences (160000360 bp)...
[M::process] read 593558 sequences (160000118 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (10, 290696, 6, 8)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (235, 410, 549)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1177)
[M::mem_pestat] mean and std.dev: (357.00, 166.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1491)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (247, 310, 389)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 673)
[M::mem_pestat] mean and std.dev: (320.58, 111.96)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 815)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 593288 reads in 50.085 CPU sec, 3.126 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (1, 290813, 12, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (246, 308, 387)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 669)
[M::mem_pestat] mean and std.dev: (319.18, 111.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 810)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1188, 1335, 2147)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4065)
[M::mem_pestat] mean and std.dev: (1270.92, 681.23)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5024)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (511, 819, 1070)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2188)
[M::mem_pestat] mean and std.dev: (613.22, 331.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 2747)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 595752 sequences (160000212 bp)...
[M::mem_process_seqs] Processed 593558 reads in 52.371 CPU sec, 3.250 real sec
[samclip] Processed 600000 records...
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[M::process] read 35140 sequences (9664990 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (13, 291753, 9, 5)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (288, 347, 395)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (74, 609)
[M::mem_pestat] mean and std.dev: (333.00, 84.18)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 716)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (244, 307, 385)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 667)
[M::mem_pestat] mean and std.dev: (317.29, 110.60)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 808)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation FF
[M::mem_process_seqs] Processed 595752 reads in 51.659 CPU sec, 3.280 real sec
[samclip] Processed 1200000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (0, 17177, 0, 2)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (256, 321, 404)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 700)
[M::mem_pestat] mean and std.dev: (334.50, 115.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 848)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_process_seqs] Processed 35140 reads in 3.534 CPU sec, 0.221 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24046_S23\tSM:HMS24046_S23 -t 16 reference/ref.fa /data/Analysis/HMS24046_S23_R1.fastq.gz /data/Analysis/HMS24046_S23_R2.fastq.gz
[main] Real time: 12.892 sec; CPU: 159.874 sec
[samclip] Total SAM records 1824229, removed 428700, allowed 109134, passed 1395529
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:55:34] Running: samtools index snps.bam 2>> snps.log
[23:55:35] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:55:35] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:55:39] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 12
          no. right trimmed                     : 83
          no. left and right trimmed            : 5
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 100

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 100
       total no. variants observed              : 1026
       total no. reference observed             : 0

Time elapsed: 0.02s

[23:55:39] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:55:40] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:55:41] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:55:41] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:55:41] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:55:41] Running: bcftools consensus --sample HMS24046_S23 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:55:42] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:55:42] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:55:42] Running: bcftools consensus --sample HMS24046_S23 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:55:42] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:55:42] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:55:44] Marked 1572 heterozygous sites with 'n'
[23:55:44] Creating extra output files: BED GFF CSV TXT HTML
[23:55:44] Identified 1026 variants.
[23:55:44] Result folder: HMS24046_S23
[23:55:44] Result files:
[23:55:44] * HMS24046_S23/snps.aligned.fa
[23:55:44] * HMS24046_S23/snps.bam
[23:55:44] * HMS24046_S23/snps.bam.bai
[23:55:44] * HMS24046_S23/snps.bed
[23:55:44] * HMS24046_S23/snps.consensus.fa
[23:55:44] * HMS24046_S23/snps.consensus.subs.fa
[23:55:44] * HMS24046_S23/snps.csv
[23:55:44] * HMS24046_S23/snps.filt.vcf
[23:55:44] * HMS24046_S23/snps.gff
[23:55:44] * HMS24046_S23/snps.html
[23:55:44] * HMS24046_S23/snps.log
[23:55:44] * HMS24046_S23/snps.raw.vcf
[23:55:44] * HMS24046_S23/snps.subs.vcf
[23:55:44] * HMS24046_S23/snps.tab
[23:55:44] * HMS24046_S23/snps.txt
[23:55:44] * HMS24046_S23/snps.vcf
[23:55:44] * HMS24046_S23/snps.vcf.gz
[23:55:44] * HMS24046_S23/snps.vcf.gz.csi
[23:55:44] Walltime used: 32 seconds
[23:55:44] Found a bug? Post it at https://github.com/tseemann/snippy/issues
[23:55:44] Done.
[23:55:44] This is snippy 4.6.0
[23:55:44] Written by Torsten Seemann
[23:55:44] Obtained from https://github.com/tseemann/snippy
[23:55:44] Detected operating system: linux
[23:55:44] Enabling bundled linux tools.
[23:55:44] Found bwa - /usr/local/bin/bwa
[23:55:44] Found bcftools - /usr/local/bin/bcftools
[23:55:44] Found samtools - /usr/local/bin/samtools
[23:55:44] Found java - /usr/local/bin/java
[23:55:44] Found snpEff - /usr/local/bin/snpEff
[23:55:44] Found samclip - /usr/local/bin/samclip
[23:55:44] Found seqtk - /usr/local/bin/seqtk
[23:55:44] Found parallel - /usr/local/bin/parallel
[23:55:44] Found freebayes - /usr/local/bin/freebayes
[23:55:44] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:55:44] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:55:44] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:55:44] Found vcfuniq - /usr/local/bin/vcfuniq
[23:55:44] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:55:44] Found gzip - /usr/bin/gzip
[23:55:44] Found vt - /usr/local/bin/vt
[23:55:44] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:55:44] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:55:44] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:55:44] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:55:44] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:55:44] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:55:44] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:55:44] Using reference: /data/Analysis/refe.gbk
[23:55:44] Treating reference as 'genbank' format.
[23:55:44] Will use 16 CPU cores.
[23:55:44] Using read file: /data/Analysis/HMS24051_S27_R1.fastq.gz
[23:55:44] Using read file: /data/Analysis/HMS24051_S27_R2.fastq.gz
[23:55:44] Creating folder: HMS24051_S27
[23:55:44] Changing working directory: HMS24051_S27
[23:55:44] Creating reference folder: reference
[23:55:44] Extracting FASTA and GFF from reference.
[23:55:46] Wrote 1 sequences to ref.fa
[23:55:46] Wrote 4429 features to ref.gff
[23:55:46] Creating reference/snpeff.config
[23:55:46] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:55:46] Using BAM RG (Read Group) ID: HMS24051_S27
[23:55:46] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:55:46] Running: bwa index reference/ref.fa 2>> snps.log
[23:55:47] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:55:47] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:55:47] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:55:47] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:55:47] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:55:50] Running: bwa mem  -Y -M -R '@RG\tID:HMS24051_S27\tSM:HMS24051_S27' -t 16 reference/ref.fa /data/Analysis/HMS24051_S27_R1.fastq.gz /data/Analysis/HMS24051_S27_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 597786 sequences (160000212 bp)...
[M::process] read 598070 sequences (160000143 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 292017, 9, 12)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (239, 296, 374)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 644)
[M::mem_pestat] mean and std.dev: (310.59, 104.85)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 779)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (279, 441, 1226)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3120)
[M::mem_pestat] mean and std.dev: (552.18, 418.83)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4067)
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 597786 reads in 54.900 CPU sec, 3.445 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::process] read 235474 sequences (63152831 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (11, 291898, 12, 10)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (291, 340, 515)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 963)
[M::mem_pestat] mean and std.dev: (393.10, 200.97)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1197)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (238, 295, 372)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 640)
[M::mem_pestat] mean and std.dev: (309.11, 103.76)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 774)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (2044, 2346, 5595)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 12697)
[M::mem_pestat] mean and std.dev: (2868.33, 1647.67)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 16248)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (242, 507, 555)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1181)
[M::mem_pestat] mean and std.dev: (389.56, 157.02)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1494)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 598070 reads in 56.623 CPU sec, 3.573 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 114867, 5, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (239, 297, 376)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 650)
[M::mem_pestat] mean and std.dev: (312.20, 105.91)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 787)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] skip orientation RR as there are not enough pairs
[samclip] Processed 1100000 records...
[M::mem_process_seqs] Processed 235474 reads in 24.357 CPU sec, 1.523 real sec
[samclip] Processed 1200000 records...
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[main] Version: 0.7.18-r1243-dirty
[main] CMD: bwa mem -Y -M -R @RG\tID:HMS24051_S27\tSM:HMS24051_S27 -t 16 reference/ref.fa /data/Analysis/HMS24051_S27_R1.fastq.gz /data/Analysis/HMS24051_S27_R2.fastq.gz
[main] Real time: 10.830 sec; CPU: 137.845 sec
[samclip] Total SAM records 1437126, removed 312079, allowed 105886, passed 1125047
[samclip] Header contained 4 lines
[samclip] Done.
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[bam_sort_core] merging from 0 files and 7 in-memory blocks...
[23:56:04] Running: samtools index snps.bam 2>> snps.log
[23:56:05] Running: fasta_generate_regions.py reference/ref.fa.fai 144681 > reference/ref.txt 2>> snps.log
[23:56:05] Running: freebayes-parallel reference/ref.txt 16 -p 2 -P 0 -C 2 -F 0.05 --min-coverage 4 --min-repeat-entropy 1.0 -q 13 -m 60 --strict-vcf   -f reference/ref.fa snps.bam > snps.raw.vcf 2>> snps.log
[23:56:08] Running: bcftools view --include 'FMT/GT="1/1" && QUAL>=20 && FMT/DP>=4 && (FMT/AO)/(FMT/DP)>=0.75' snps.raw.vcf  | vt normalize -r reference/ref.fa - | bcftools annotate --remove '^INFO/TYPE,^INFO/DP,^INFO/RO,^INFO/AO,^INFO/AB,^FORMAT/GT,^FORMAT/DP,^FORMAT/RO,^FORMAT/AO,^FORMAT/QR,^FORMAT/QA,^FORMAT/GL' > snps.filt.vcf 2>> snps.log
normalize v0.5

options:     input VCF file                                  -
         [o] output VCF file                                 -
         [w] sorting window size                             10000
         [n] no fail on reference inconsistency for non SNPs false
         [q] quiet                                           false
         [d] debug                                           false
         [r] reference FASTA file                            reference/ref.fa


stats: biallelic
          no. left trimmed                      : 18
          no. right trimmed                     : 90
          no. left and right trimmed            : 3
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. biallelic normalized           : 111

       multiallelic
          no. left trimmed                      : 0
          no. right trimmed                     : 0
          no. left and right trimmed            : 0
          no. right trimmed and left aligned    : 0
          no. left aligned                      : 0

       total no. multiallelic normalized        : 0

       total no. variants normalized            : 111
       total no. variants observed              : 924
       total no. reference observed             : 0

Time elapsed: 0.01s

[23:56:08] Running: snpEff ann -noLog -noStats -no-downstream -no-upstream -no-utr -c reference/snpeff.config -dataDir . ref snps.filt.vcf > snps.vcf 2>> snps.log
[23:56:09] Running: /usr/local/bin/snippy-vcf_to_tab --gff reference/ref.gff --ref reference/ref.fa --vcf snps.vcf > snps.tab 2>> snps.log
[23:56:11] Running: /usr/local/bin/snippy-vcf_extract_subs snps.filt.vcf > snps.subs.vcf 2>> snps.log
[23:56:11] Running: bcftools convert -Oz -o snps.vcf.gz snps.vcf 2>> snps.log
[23:56:11] Running: bcftools index -f snps.vcf.gz 2>> snps.log
[23:56:11] Running: bcftools consensus --sample HMS24051_S27 -f reference/ref.fa -o snps.consensus.fa snps.vcf.gz 2>> snps.log
[23:56:11] Running: bcftools convert -Oz -o snps.subs.vcf.gz snps.subs.vcf 2>> snps.log
[23:56:11] Running: bcftools index -f snps.subs.vcf.gz 2>> snps.log
[23:56:11] Running: bcftools consensus --sample HMS24051_S27 -f reference/ref.fa -o snps.consensus.subs.fa snps.subs.vcf.gz 2>> snps.log
[23:56:11] Running: rm -f snps.subs.vcf.gz snps.subs.vcf.gz.csi snps.subs.vcf.gz.tbi 2>> snps.log
[23:56:11] Generating reference aligned/masked FASTA relative to reference: snps.aligned.fa
[23:56:13] Marked 2929 heterozygous sites with 'n'
[23:56:13] Creating extra output files: BED GFF CSV TXT HTML
[23:56:13] Identified 924 variants.
[23:56:13] Result folder: HMS24051_S27
[23:56:13] Result files:
[23:56:13] * HMS24051_S27/snps.aligned.fa
[23:56:13] * HMS24051_S27/snps.bam
[23:56:13] * HMS24051_S27/snps.bam.bai
[23:56:13] * HMS24051_S27/snps.bed
[23:56:13] * HMS24051_S27/snps.consensus.fa
[23:56:13] * HMS24051_S27/snps.consensus.subs.fa
[23:56:13] * HMS24051_S27/snps.csv
[23:56:13] * HMS24051_S27/snps.filt.vcf
[23:56:13] * HMS24051_S27/snps.gff
[23:56:13] * HMS24051_S27/snps.html
[23:56:13] * HMS24051_S27/snps.log
[23:56:13] * HMS24051_S27/snps.raw.vcf
[23:56:13] * HMS24051_S27/snps.subs.vcf
[23:56:13] * HMS24051_S27/snps.tab
[23:56:13] * HMS24051_S27/snps.txt
[23:56:13] * HMS24051_S27/snps.vcf
[23:56:13] * HMS24051_S27/snps.vcf.gz
[23:56:13] * HMS24051_S27/snps.vcf.gz.csi
[23:56:13] Walltime used: 29 seconds
[23:56:13] Found a bug? Post it at https://github.com/tseemann/snippy/issues
[23:56:13] Done.
[23:56:14] This is snippy 4.6.0
[23:56:14] Written by Torsten Seemann
[23:56:14] Obtained from https://github.com/tseemann/snippy
[23:56:14] Detected operating system: linux
[23:56:14] Enabling bundled linux tools.
[23:56:14] Found bwa - /usr/local/bin/bwa
[23:56:14] Found bcftools - /usr/local/bin/bcftools
[23:56:14] Found samtools - /usr/local/bin/samtools
[23:56:14] Found java - /usr/local/bin/java
[23:56:14] Found snpEff - /usr/local/bin/snpEff
[23:56:14] Found samclip - /usr/local/bin/samclip
[23:56:14] Found seqtk - /usr/local/bin/seqtk
[23:56:14] Found parallel - /usr/local/bin/parallel
[23:56:14] Found freebayes - /usr/local/bin/freebayes
[23:56:14] Found freebayes-parallel - /usr/local/bin/freebayes-parallel
[23:56:14] Found fasta_generate_regions.py - /usr/local/bin/fasta_generate_regions.py
[23:56:14] Found vcfstreamsort - /usr/local/bin/vcfstreamsort
[23:56:14] Found vcfuniq - /usr/local/bin/vcfuniq
[23:56:14] Found vcffirstheader - /usr/local/bin/vcffirstheader
[23:56:14] Found gzip - /usr/bin/gzip
[23:56:14] Found vt - /usr/local/bin/vt
[23:56:14] Found snippy-vcf_to_tab - /usr/local/bin/snippy-vcf_to_tab
[23:56:14] Found snippy-vcf_report - /usr/local/bin/snippy-vcf_report
[23:56:14] Checking version: samtools --version is >= 1.7 - ok, have 1.20
[23:56:14] Checking version: bcftools --version is >= 1.7 - ok, have 1.21
[23:56:14] Checking version: freebayes --version is >= 1.1 - ok, have 1.3.6
[23:56:14] Checking version: snpEff -version is >= 4.3 - ok, have 5.0
[23:56:14] Checking version: bwa is >= 0.7.12 - ok, have 0.7.18
[23:56:14] Using reference: /data/Analysis/refe.gbk
[23:56:14] Treating reference as 'genbank' format.
[23:56:14] Will use 16 CPU cores.
[23:56:14] Using read file: /data/Analysis/HMS24052_S28_R1.fastq.gz
[23:56:14] Using read file: /data/Analysis/HMS24052_S28_R2.fastq.gz
[23:56:14] Creating folder: HMS24052_S28
[23:56:14] Changing working directory: HMS24052_S28
[23:56:14] Creating reference folder: reference
[23:56:14] Extracting FASTA and GFF from reference.
[23:56:15] Wrote 1 sequences to ref.fa
[23:56:15] Wrote 4429 features to ref.gff
[23:56:15] Creating reference/snpeff.config
[23:56:15] Freebayes will process 31 chunks of 144681 bp, 16 chunks at a time.
[23:56:15] Using BAM RG (Read Group) ID: HMS24052_S28
[23:56:15] Running: samtools faidx reference/ref.fa 2>> snps.log
[23:56:15] Running: bwa index reference/ref.fa 2>> snps.log
[23:56:16] Running: mkdir -p reference/genomes && cp -f reference/ref.fa reference/genomes/ref.fa 2>> snps.log
[23:56:16] Running: ln -sf reference/ref.fa . 2>> snps.log
[23:56:16] Running: ln -sf reference/ref.fa.fai . 2>> snps.log
[23:56:16] Running: mkdir -p reference/ref && gzip -c reference/ref.gff > reference/ref/genes.gff.gz 2>> snps.log
[23:56:17] Running: snpEff build -c reference/snpeff.config -dataDir . -gff3 ref 2>> snps.log
[23:56:20] Running: bwa mem  -Y -M -R '@RG\tID:HMS24052_S28\tSM:HMS24052_S28' -t 16 reference/ref.fa /data/Analysis/HMS24052_S28_R1.fastq.gz /data/Analysis/HMS24052_S28_R2.fastq.gz | samclip --max 10 --ref reference/ref.fa.fai | samtools sort -n -l 0 -T /tmp --threads 7 -m 1000M | samtools fixmate -m --threads 7 - - | samtools sort -l 0 -T /tmp --threads 7 -m 1000M | samtools markdup -T /tmp --threads 7 -r -s - - > snps.bam 2>> snps.log
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[samclip] samclip 0.4.0 by Torsten Seemann (@torstenseemann)
[samclip] Loading: reference/ref.fa.fai
[samclip] Found 1 sequences in reference/ref.fa.fai
[M::process] read 613970 sequences (160000327 bp)...
[M::process] read 615382 sequences (160000193 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 299720, 22, 11)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (227, 286, 360)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 626)
[M::mem_pestat] mean and std.dev: (297.04, 104.56)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 759)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1356, 2212, 2289)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4155)
[M::mem_pestat] mean and std.dev: (1770.57, 796.40)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5088)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (410, 1374, 1516)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3728)
[M::mem_pestat] mean and std.dev: (1131.18, 884.30)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4834)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 613970 reads in 49.239 CPU sec, 3.092 real sec
[samclip] Processed 100000 records...
[samclip] Processed 200000 records...
[samclip] Processed 300000 records...
[samclip] Processed 400000 records...
[samclip] Processed 500000 records...
[samclip] Processed 600000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (6, 300381, 13, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (227, 285, 359)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 623)
[M::mem_pestat] mean and std.dev: (296.10, 104.03)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 755)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1333, 1377, 2329)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4321)
[M::mem_pestat] mean and std.dev: (1647.69, 642.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5317)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::process] read 614488 sequences (160000150 bp)...
[M::mem_process_seqs] Processed 615382 reads in 48.591 CPU sec, 3.032 real sec
[samclip] Processed 700000 records...
[samclip] Processed 800000 records...
[samclip] Processed 900000 records...
[samclip] Processed 1000000 records...
[samclip] Processed 1100000 records...
[samclip] Processed 1200000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (14, 299915, 20, 11)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (532, 1264, 1464)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3328)
[M::mem_pestat] mean and std.dev: (1152.21, 730.27)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4260)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (226, 285, 359)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 625)
[M::mem_pestat] mean and std.dev: (296.16, 104.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 758)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (2064, 2192, 2279)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1634, 2709)
[M::mem_pestat] mean and std.dev: (2215.50, 112.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1419, 2924)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (393, 680, 1350)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3264)
[M::mem_pestat] mean and std.dev: (784.91, 478.45)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4221)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::process] read 618126 sequences (160000338 bp)...
[M::mem_process_seqs] Processed 614488 reads in 51.512 CPU sec, 3.212 real sec
[samclip] Processed 1300000 records...
[samclip] Processed 1400000 records...
[samclip] Processed 1500000 records...
[samclip] Processed 1600000 records...
[samclip] Processed 1700000 records...
[samclip] Processed 1800000 records...
[M::process] read 443764 sequences (115864325 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 301811, 15, 9)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (225, 283, 355)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 615)
[M::mem_pestat] mean and std.dev: (293.23, 102.90)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 745)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1351, 1438, 2210)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3928)
[M::mem_pestat] mean and std.dev: (1604.93, 716.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4787)
[M::mem_pestat] skip orientation RR as there are not enough pairs
[M::mem_pestat] skip orientation RF
[M::mem_process_seqs] Processed 618126 reads in 49.427 CPU sec, 3.109 real sec
[samclip] Processed 1900000 records...
[samclip] Processed 2000000 records...
[samclip] Processed 2100000 records...
[samclip] Processed 2200000 records...
[samclip] Processed 2300000 records...
[samclip] Processed 2400000 records...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (9, 216692, 13, 10)
[M::mem_pestat] skip orientation FF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (228, 287, 361)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 627)
[M::mem_pestat] mean and std.dev: (297.85, 104.88)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 760)
[M::mem_pestat] analyzing insert size distribution for orientation RF...
[M::mem_pestat] (25, 50, 75) percentile: (1318, 1404, 2349)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4411)
[M::mem_pestat] mean and std.dev: (1483.58, 792.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 5442)
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (321, 1015, 1332)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3354)
[M::mem_pestat] mean and std.dev: (812.70, 485.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 4365)
[M::mem_pestat] skip orientation RF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 443764 reads in 38.411 CPU sec, 2.438 real sec
[samclip] Processed 2500000 records...
[samclip] Processed 2600000 records...
[samclip] Processed 2700000 records...
[samclip] Processed 2800000 records...
[samclip] Processed 2900000 records...
snippy_container

<INFO>	[2025-06-13 01:57:12]	Running snp-dists. The distance matrix obtained will be stored in /Analysis.
60f7646ae24385ef8b52ec3330ffa4eaeb6a8c47dd3f5a08b94189ef1d16f938
This is snp-dists 0.8.2
Will use 1 threads.
Read 9 sequences of length 4411532
snippy_container
